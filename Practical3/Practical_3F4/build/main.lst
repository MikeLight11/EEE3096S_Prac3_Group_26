ARM GAS  C:\Users\User\AppData\Local\Temp\ccp9VHyh.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB161:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include <stdio.h>
  22:Core/Src/main.c **** #include <sys/time.h>
  23:Core/Src/main.c **** #include <time.h>
  24:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* USER CODE END Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  31:Core/Src/main.c **** #define MAX_ITER 100
ARM GAS  C:\Users\User\AppData\Local\Temp\ccp9VHyh.s 			page 2


  32:Core/Src/main.c **** /* USER CODE END PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* USER CODE END PD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE BEGIN PV */
  47:Core/Src/main.c **** //TODO: Define variables you think you might need
  48:Core/Src/main.c **** // - Performance timing variables (e.g execution time, throughput, pixels per second, clock cycles)
  49:Core/Src/main.c **** uint32_t start_time;       // Clock time at start of operation
  50:Core/Src/main.c **** uint32_t end_time;         // Clock time at end of operation
  51:Core/Src/main.c **** uint32_t execution_time;   // Difference between start and end time
  52:Core/Src/main.c **** uint64_t checksum;         // Sum returned by Mandelbrot function
  53:Core/Src/main.c **** uint32_t start_cycles;     // Cycles at start of operation
  54:Core/Src/main.c **** uint32_t end_cycles;       // Cycles at end of operation
  55:Core/Src/main.c **** uint32_t CPU_cycles;       // Difference between start and end cycles
  56:Core/Src/main.c **** uint32_t throughput;       // Pixel throughput
  57:Core/Src/main.c **** int init_width = 128;            // Initial height of 2D plane
  58:Core/Src/main.c **** int init_height = 128;           // Initial width of 2D plane
  59:Core/Src/main.c **** int size_array[] = {128, 160, 192, 224, 256};
  60:Core/Src/main.c **** uint64_t checksum_array[5] = {0}; // Array to hold checksums for different sizes
  61:Core/Src/main.c **** uint32_t execution_time_array[5] = {0}; // Array to hold execution times for different sizes
  62:Core/Src/main.c **** uint32_t CPU_cycles_array[5]={0};
  63:Core/Src/main.c **** float CPU_time_array[5]={0};
  64:Core/Src/main.c **** uint32_t throughput_array[5]={0};
  65:Core/Src/main.c **** /* USER CODE END PV */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  68:Core/Src/main.c **** void SystemClock_Config(void);
  69:Core/Src/main.c **** static void MX_GPIO_Init(void);
  70:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  71:Core/Src/main.c **** //TODO: Define any function prototypes you might need such as the calculate Mandelbrot function amo
  72:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations);
  73:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations);
  74:Core/Src/main.c **** uint64_t calculate_mandelbrot_float(int width, int height, int max_iterations);
  75:Core/Src/main.c **** void DWT_Init(void);
  76:Core/Src/main.c **** /* USER CODE END PFP */
  77:Core/Src/main.c **** 
  78:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  79:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c **** /* USER CODE END 0 */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** /**
  84:Core/Src/main.c ****   * @brief  The application entry point.
  85:Core/Src/main.c ****   * @retval int
  86:Core/Src/main.c ****   */
  87:Core/Src/main.c **** int main(void)
  88:Core/Src/main.c **** {
ARM GAS  C:\Users\User\AppData\Local\Temp\ccp9VHyh.s 			page 3


  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* USER CODE END 1 */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  97:Core/Src/main.c ****   HAL_Init();
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* USER CODE END Init */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* Configure the system clock */
 104:Core/Src/main.c ****   SystemClock_Config();
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* USER CODE END SysInit */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* Initialize all configured peripherals */
 111:Core/Src/main.c ****   MX_GPIO_Init();
 112:Core/Src/main.c ****   DWT_Init();
 113:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* USER CODE END 2 */
 116:Core/Src/main.c ****   for (int i = 0; i < 5; i++) {
 117:Core/Src/main.c ****           //TODO: Turn on LED 0 to signify the start of the operation
 118:Core/Src/main.c ****           HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****           start_time = HAL_GetTick();
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****           DWT->CYCCNT = 0;
 123:Core/Src/main.c ****           start_cycles = DWT->CYCCNT;
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****           //checksum_array[i] = calculate_mandelbrot_fixed_point_arithmetic(size_array[i], size_arr
 126:Core/Src/main.c ****           checksum_array[i] = calculate_mandelbrot_double(size_array[i], size_array[i], MAX_ITER);
 127:Core/Src/main.c ****           //checksum_array[i] = calculate_mandelbrot_float(size_array[i], size_array[i], MAX_ITER);
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****           end_time = HAL_GetTick();
 130:Core/Src/main.c ****           execution_time_array[i] = end_time - start_time;
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****           end_cycles = DWT->CYCCNT;
 133:Core/Src/main.c ****           CPU_cycles_array[i] = end_cycles - start_cycles;
 134:Core/Src/main.c ****           CPU_time_array[i] = CPU_cycles_array[i] / (120*(1e6));
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****           throughput_array[i] = (size_array[i]*size_array[i]) / CPU_time_array[i];
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****           //TODO: Turn on LED 1 to signify the end of the operation
 139:Core/Src/main.c ****           HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
 140:Core/Src/main.c **** 
 141:Core/Src/main.c ****           //TODO: Hold the LEDs on for a 1s delay
 142:Core/Src/main.c ****           HAL_Delay(1000);
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****           //TODO: Turn off the LEDs
 145:Core/Src/main.c ****           HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1, GPIO_PIN_RESET);
ARM GAS  C:\Users\User\AppData\Local\Temp\ccp9VHyh.s 			page 4


 146:Core/Src/main.c ****       }
 147:Core/Src/main.c **** 
 148:Core/Src/main.c ****   /* Infinite loop */
 149:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 150:Core/Src/main.c ****   while (1)
 151:Core/Src/main.c ****   {
 152:Core/Src/main.c ****     /* USER CODE END WHILE */
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 155:Core/Src/main.c **** 	  //TODO: Visual indicator: Turn on LED0 to signal processing start
 156:Core/Src/main.c **** 
 157:Core/Src/main.c **** 
 158:Core/Src/main.c **** 	  //TODO: Benchmark and Profile Performance
 159:Core/Src/main.c **** 
 160:Core/Src/main.c **** 
 161:Core/Src/main.c **** 	  //TODO: Visual indicator: Turn on LED1 to signal processing start
 162:Core/Src/main.c **** 
 163:Core/Src/main.c **** 
 164:Core/Src/main.c **** 	  //TODO: Keep the LEDs ON for 2s
 165:Core/Src/main.c **** 
 166:Core/Src/main.c **** 	  //TODO: Turn OFF LEDs
 167:Core/Src/main.c ****   }
 168:Core/Src/main.c ****   /* USER CODE END 3 */
 169:Core/Src/main.c **** }
 170:Core/Src/main.c **** 
 171:Core/Src/main.c **** /**
 172:Core/Src/main.c ****   * @brief System Clock Configuration
 173:Core/Src/main.c ****   * @retval None
 174:Core/Src/main.c ****   */
 175:Core/Src/main.c **** void SystemClock_Config(void)
 176:Core/Src/main.c **** {
 177:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 178:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 179:Core/Src/main.c **** 
 180:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 181:Core/Src/main.c ****   */
 182:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 183:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 184:Core/Src/main.c **** 
 185:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 186:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 187:Core/Src/main.c ****   */
 188:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 189:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 190:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 191:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 192:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 15;
 193:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 194:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 195:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 196:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 197:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 198:Core/Src/main.c ****   {
 199:Core/Src/main.c ****     Error_Handler();
 200:Core/Src/main.c ****   }
 201:Core/Src/main.c **** 
 202:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
ARM GAS  C:\Users\User\AppData\Local\Temp\ccp9VHyh.s 			page 5


 203:Core/Src/main.c ****   */
 204:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 205:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 206:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 207:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 208:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 209:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 212:Core/Src/main.c ****   {
 213:Core/Src/main.c ****     Error_Handler();
 214:Core/Src/main.c ****   }
 215:Core/Src/main.c **** }
 216:Core/Src/main.c **** 
 217:Core/Src/main.c **** /**
 218:Core/Src/main.c ****   * @brief GPIO Initialization Function
 219:Core/Src/main.c ****   * @param None
 220:Core/Src/main.c ****   * @retval None
 221:Core/Src/main.c ****   */
 222:Core/Src/main.c **** static void MX_GPIO_Init(void)
 223:Core/Src/main.c **** {
  28              		.loc 1 223 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 89B0     		sub	sp, sp, #36
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 48
 224:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 224 3 view .LVU1
  42              		.loc 1 224 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0394     		str	r4, [sp, #12]
  45 0008 0494     		str	r4, [sp, #16]
  46 000a 0594     		str	r4, [sp, #20]
  47 000c 0694     		str	r4, [sp, #24]
  48 000e 0794     		str	r4, [sp, #28]
 225:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 226:Core/Src/main.c **** 
 227:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 228:Core/Src/main.c **** 
 229:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 230:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  49              		.loc 1 230 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 230 3 view .LVU4
  52 0010 0094     		str	r4, [sp]
  53              		.loc 1 230 3 view .LVU5
  54 0012 184B     		ldr	r3, .L3
  55 0014 1A6B     		ldr	r2, [r3, #48]
  56 0016 42F00402 		orr	r2, r2, #4
ARM GAS  C:\Users\User\AppData\Local\Temp\ccp9VHyh.s 			page 6


  57 001a 1A63     		str	r2, [r3, #48]
  58              		.loc 1 230 3 view .LVU6
  59 001c 1A6B     		ldr	r2, [r3, #48]
  60 001e 02F00402 		and	r2, r2, #4
  61 0022 0092     		str	r2, [sp]
  62              		.loc 1 230 3 view .LVU7
  63 0024 009A     		ldr	r2, [sp]
  64              	.LBE4:
  65              		.loc 1 230 3 view .LVU8
 231:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  66              		.loc 1 231 3 view .LVU9
  67              	.LBB5:
  68              		.loc 1 231 3 view .LVU10
  69 0026 0194     		str	r4, [sp, #4]
  70              		.loc 1 231 3 view .LVU11
  71 0028 1A6B     		ldr	r2, [r3, #48]
  72 002a 42F08002 		orr	r2, r2, #128
  73 002e 1A63     		str	r2, [r3, #48]
  74              		.loc 1 231 3 view .LVU12
  75 0030 1A6B     		ldr	r2, [r3, #48]
  76 0032 02F08002 		and	r2, r2, #128
  77 0036 0192     		str	r2, [sp, #4]
  78              		.loc 1 231 3 view .LVU13
  79 0038 019A     		ldr	r2, [sp, #4]
  80              	.LBE5:
  81              		.loc 1 231 3 view .LVU14
 232:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  82              		.loc 1 232 3 view .LVU15
  83              	.LBB6:
  84              		.loc 1 232 3 view .LVU16
  85 003a 0294     		str	r4, [sp, #8]
  86              		.loc 1 232 3 view .LVU17
  87 003c 1A6B     		ldr	r2, [r3, #48]
  88 003e 42F00202 		orr	r2, r2, #2
  89 0042 1A63     		str	r2, [r3, #48]
  90              		.loc 1 232 3 view .LVU18
  91 0044 1B6B     		ldr	r3, [r3, #48]
  92 0046 03F00203 		and	r3, r3, #2
  93 004a 0293     		str	r3, [sp, #8]
  94              		.loc 1 232 3 view .LVU19
  95 004c 029B     		ldr	r3, [sp, #8]
  96              	.LBE6:
  97              		.loc 1 232 3 view .LVU20
 233:Core/Src/main.c **** 
 234:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 235:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
  98              		.loc 1 235 3 view .LVU21
  99 004e 0A4D     		ldr	r5, .L3+4
 100 0050 2246     		mov	r2, r4
 101 0052 FF21     		movs	r1, #255
 102 0054 2846     		mov	r0, r5
 103 0056 FFF7FEFF 		bl	HAL_GPIO_WritePin
 104              	.LVL0:
 236:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7, GPIO_PIN_RESET);
 237:Core/Src/main.c **** 
 238:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 PB2 PB3
 239:Core/Src/main.c ****                            PB4 PB5 PB6 PB7 */
ARM GAS  C:\Users\User\AppData\Local\Temp\ccp9VHyh.s 			page 7


 240:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 105              		.loc 1 240 3 view .LVU22
 106              		.loc 1 240 23 is_stmt 0 view .LVU23
 107 005a FF23     		movs	r3, #255
 108 005c 0393     		str	r3, [sp, #12]
 241:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 242:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 109              		.loc 1 242 3 is_stmt 1 view .LVU24
 110              		.loc 1 242 24 is_stmt 0 view .LVU25
 111 005e 0123     		movs	r3, #1
 112 0060 0493     		str	r3, [sp, #16]
 243:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 113              		.loc 1 243 3 is_stmt 1 view .LVU26
 114              		.loc 1 243 24 is_stmt 0 view .LVU27
 115 0062 0594     		str	r4, [sp, #20]
 244:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 116              		.loc 1 244 3 is_stmt 1 view .LVU28
 117              		.loc 1 244 25 is_stmt 0 view .LVU29
 118 0064 0694     		str	r4, [sp, #24]
 245:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 119              		.loc 1 245 3 is_stmt 1 view .LVU30
 120 0066 03A9     		add	r1, sp, #12
 121 0068 2846     		mov	r0, r5
 122 006a FFF7FEFF 		bl	HAL_GPIO_Init
 123              	.LVL1:
 246:Core/Src/main.c **** 
 247:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 248:Core/Src/main.c **** 
 249:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 250:Core/Src/main.c **** }
 124              		.loc 1 250 1 is_stmt 0 view .LVU31
 125 006e 09B0     		add	sp, sp, #36
 126              	.LCFI2:
 127              		.cfi_def_cfa_offset 12
 128              		@ sp needed
 129 0070 30BD     		pop	{r4, r5, pc}
 130              	.L4:
 131 0072 00BF     		.align	2
 132              	.L3:
 133 0074 00380240 		.word	1073887232
 134 0078 00040240 		.word	1073873920
 135              		.cfi_endproc
 136              	.LFE161:
 138              		.section	.text.calculate_mandelbrot_fixed_point_arithmetic,"ax",%progbits
 139              		.align	1
 140              		.global	calculate_mandelbrot_fixed_point_arithmetic
 141              		.syntax unified
 142              		.thumb
 143              		.thumb_func
 145              	calculate_mandelbrot_fixed_point_arithmetic:
 146              	.LVL2:
 147              	.LFB162:
 251:Core/Src/main.c **** 
 252:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 253:Core/Src/main.c **** //TODO: Function signatures you defined previously , implement them here
 254:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations){
 148              		.loc 1 254 96 is_stmt 1 view -0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccp9VHyh.s 			page 8


 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 8
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 152              		.loc 1 254 96 is_stmt 0 view .LVU33
 153 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 154              	.LCFI3:
 155              		.cfi_def_cfa_offset 36
 156              		.cfi_offset 4, -36
 157              		.cfi_offset 5, -32
 158              		.cfi_offset 6, -28
 159              		.cfi_offset 7, -24
 160              		.cfi_offset 8, -20
 161              		.cfi_offset 9, -16
 162              		.cfi_offset 10, -12
 163              		.cfi_offset 11, -8
 164              		.cfi_offset 14, -4
 165 0004 83B0     		sub	sp, sp, #12
 166              	.LCFI4:
 167              		.cfi_def_cfa_offset 48
 168 0006 0646     		mov	r6, r0
 169 0008 0191     		str	r1, [sp, #4]
 170 000a 1446     		mov	r4, r2
 255:Core/Src/main.c ****     const int SCALE = 1000;
 171              		.loc 1 255 5 is_stmt 1 view .LVU34
 172              	.LVL3:
 256:Core/Src/main.c **** 	//const int SCALE = 10000;
 257:Core/Src/main.c **** 	//const int SCALE = 100000;
 258:Core/Src/main.c ****     const int THREE_FIVE = 3500;
 173              		.loc 1 258 5 view .LVU35
 259:Core/Src/main.c ****     const int TWO = 2000;
 174              		.loc 1 259 5 view .LVU36
 260:Core/Src/main.c ****     const int TWO_FIVE = 2500;
 175              		.loc 1 260 5 view .LVU37
 261:Core/Src/main.c ****     const int ONE = 1000;
 176              		.loc 1 261 5 view .LVU38
 262:Core/Src/main.c ****     const int FOUR = 4000;
 177              		.loc 1 262 5 view .LVU39
 263:Core/Src/main.c **** 
 264:Core/Src/main.c ****     checksum = 0;
 178              		.loc 1 264 5 view .LVU40
 179              		.loc 1 264 14 is_stmt 0 view .LVU41
 180 000c 294B     		ldr	r3, .L16
 181 000e 0020     		movs	r0, #0
 182              	.LVL4:
 183              		.loc 1 264 14 view .LVU42
 184 0010 0021     		movs	r1, #0
 185              	.LVL5:
 186              		.loc 1 264 14 view .LVU43
 187 0012 C3E90001 		strd	r0, [r3]
 265:Core/Src/main.c ****     for (int32_t y = 0; y < height; y++) {
 188              		.loc 1 265 5 is_stmt 1 view .LVU44
 189              	.LBB7:
 190              		.loc 1 265 10 view .LVU45
 191              	.LVL6:
 192              		.loc 1 265 18 is_stmt 0 view .LVU46
 193 0016 4FF00008 		mov	r8, #0
 194              		.loc 1 265 5 view .LVU47
ARM GAS  C:\Users\User\AppData\Local\Temp\ccp9VHyh.s 			page 9


 195 001a 40E0     		b	.L6
 196              	.LVL7:
 197              	.L9:
 198              	.LBB8:
 199              	.LBB9:
 200              	.LBB10:
 266:Core/Src/main.c ****         for (int32_t x = 0; x < width; x++) {
 267:Core/Src/main.c ****             int32_t x0 = ((int32_t)x * THREE_FIVE) / width - TWO_FIVE;
 268:Core/Src/main.c ****             int32_t y0 = ((int32_t)y * TWO) / height - ONE;
 269:Core/Src/main.c ****             int32_t xi = 0;
 270:Core/Src/main.c ****             int32_t yi = 0;
 271:Core/Src/main.c ****             int32_t iteration = 0;
 272:Core/Src/main.c ****             while (((((int32_t)xi * xi + (int32_t)yi * yi) / SCALE) <= FOUR) && (iteration < max_it
 273:Core/Src/main.c ****                 int32_t xi_temp = ((int32_t)xi * xi - (int32_t)yi * yi) / SCALE + x0;
 201              		.loc 1 273 17 is_stmt 1 view .LVU48
 202              		.loc 1 273 53 is_stmt 0 view .LVU49
 203 001c A2EB0902 		sub	r2, r2, r9
 204              		.loc 1 273 73 view .LVU50
 205 0020 254F     		ldr	r7, .L16+4
 206 0022 87FB02BA 		smull	fp, r10, r7, r2
 207 0026 D217     		asrs	r2, r2, #31
 208 0028 C2EBAA12 		rsb	r2, r2, r10, asr #6
 209              	.LVL8:
 274:Core/Src/main.c ****                 int32_t yi_temp = ((int32_t)2 * xi * yi) / SCALE + y0;
 210              		.loc 1 274 17 is_stmt 1 view .LVU51
 211              		.loc 1 274 52 is_stmt 0 view .LVU52
 212 002c 01FB03F3 		mul	r3, r1, r3
 213              	.LVL9:
 214              		.loc 1 274 58 view .LVU53
 215 0030 87FB0319 		smull	r1, r9, r7, r3
 216              	.LVL10:
 217              		.loc 1 274 58 view .LVU54
 218 0034 DB17     		asrs	r3, r3, #31
 219 0036 C3EB6913 		rsb	r3, r3, r9, asr #5
 220              		.loc 1 274 25 view .LVU55
 221 003a 03EB0C01 		add	r1, r3, ip
 222              	.LVL11:
 275:Core/Src/main.c ****                 xi = xi_temp;
 223              		.loc 1 275 17 is_stmt 1 view .LVU56
 276:Core/Src/main.c ****                 yi = yi_temp;
 224              		.loc 1 276 17 view .LVU57
 277:Core/Src/main.c ****                 iteration++;
 225              		.loc 1 277 17 view .LVU58
 226              		.loc 1 277 26 is_stmt 0 view .LVU59
 227 003e 0130     		adds	r0, r0, #1
 228              	.LVL12:
 275:Core/Src/main.c ****                 xi = xi_temp;
 229              		.loc 1 275 20 view .LVU60
 230 0040 02EB0E03 		add	r3, r2, lr
 231              	.LVL13:
 232              	.L7:
 275:Core/Src/main.c ****                 xi = xi_temp;
 233              		.loc 1 275 20 view .LVU61
 234              	.LBE10:
 272:Core/Src/main.c ****                 int32_t xi_temp = ((int32_t)xi * xi - (int32_t)yi * yi) / SCALE + x0;
 235              		.loc 1 272 78 is_stmt 1 view .LVU62
 272:Core/Src/main.c ****                 int32_t xi_temp = ((int32_t)xi * xi - (int32_t)yi * yi) / SCALE + x0;
ARM GAS  C:\Users\User\AppData\Local\Temp\ccp9VHyh.s 			page 10


 236              		.loc 1 272 35 is_stmt 0 view .LVU63
 237 0044 03FB03F2 		mul	r2, r3, r3
 272:Core/Src/main.c ****                 int32_t xi_temp = ((int32_t)xi * xi - (int32_t)yi * yi) / SCALE + x0;
 238              		.loc 1 272 54 view .LVU64
 239 0048 01FB01F9 		mul	r9, r1, r1
 272:Core/Src/main.c ****                 int32_t xi_temp = ((int32_t)xi * xi - (int32_t)yi * yi) / SCALE + x0;
 240              		.loc 1 272 40 view .LVU65
 241 004c 02EB090B 		add	fp, r2, r9
 272:Core/Src/main.c ****                 int32_t xi_temp = ((int32_t)xi * xi - (int32_t)yi * yi) / SCALE + x0;
 242              		.loc 1 272 78 view .LVU66
 243 0050 1A4F     		ldr	r7, .L16+8
 244 0052 BB45     		cmp	fp, r7
 245 0054 01DC     		bgt	.L8
 272:Core/Src/main.c ****                 int32_t xi_temp = ((int32_t)xi * xi - (int32_t)yi * yi) / SCALE + x0;
 246              		.loc 1 272 78 discriminator 1 view .LVU67
 247 0056 A042     		cmp	r0, r4
 248 0058 E0DB     		blt	.L9
 249              	.L8:
 278:Core/Src/main.c ****             }
 279:Core/Src/main.c ****             checksum += iteration;
 250              		.loc 1 279 13 is_stmt 1 view .LVU68
 251              		.loc 1 279 22 is_stmt 0 view .LVU69
 252 005a 1649     		ldr	r1, .L16
 253              	.LVL14:
 254              		.loc 1 279 22 view .LVU70
 255 005c 0B68     		ldr	r3, [r1]
 256              	.LVL15:
 257              		.loc 1 279 22 view .LVU71
 258 005e 4A68     		ldr	r2, [r1, #4]
 259 0060 1B18     		adds	r3, r3, r0
 260 0062 42EBE072 		adc	r2, r2, r0, asr #31
 261 0066 0B60     		str	r3, [r1]
 262 0068 4A60     		str	r2, [r1, #4]
 263              	.LBE9:
 266:Core/Src/main.c ****             int32_t x0 = ((int32_t)x * THREE_FIVE) / width - TWO_FIVE;
 264              		.loc 1 266 41 is_stmt 1 discriminator 2 view .LVU72
 265 006a 0135     		adds	r5, r5, #1
 266              	.LVL16:
 267              	.L11:
 266:Core/Src/main.c ****             int32_t x0 = ((int32_t)x * THREE_FIVE) / width - TWO_FIVE;
 268              		.loc 1 266 31 discriminator 1 view .LVU73
 269 006c B542     		cmp	r5, r6
 270 006e 14DA     		bge	.L14
 271              	.LBB11:
 267:Core/Src/main.c ****             int32_t y0 = ((int32_t)y * TWO) / height - ONE;
 272              		.loc 1 267 13 view .LVU74
 267:Core/Src/main.c ****             int32_t y0 = ((int32_t)y * TWO) / height - ONE;
 273              		.loc 1 267 38 is_stmt 0 view .LVU75
 274 0070 40F6AC5E 		movw	lr, #3500
 275 0074 0EFB05FE 		mul	lr, lr, r5
 267:Core/Src/main.c ****             int32_t y0 = ((int32_t)y * TWO) / height - ONE;
 276              		.loc 1 267 52 view .LVU76
 277 0078 9EFBF6FE 		sdiv	lr, lr, r6
 267:Core/Src/main.c ****             int32_t y0 = ((int32_t)y * TWO) / height - ONE;
 278              		.loc 1 267 21 view .LVU77
 279 007c AEF6C41E 		subw	lr, lr, #2500
 280              	.LVL17:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccp9VHyh.s 			page 11


 268:Core/Src/main.c ****             int32_t xi = 0;
 281              		.loc 1 268 13 is_stmt 1 view .LVU78
 268:Core/Src/main.c ****             int32_t xi = 0;
 282              		.loc 1 268 38 is_stmt 0 view .LVU79
 283 0080 4FF4FA6C 		mov	ip, #2000
 284 0084 0CFB08FC 		mul	ip, ip, r8
 268:Core/Src/main.c ****             int32_t xi = 0;
 285              		.loc 1 268 45 view .LVU80
 286 0088 019B     		ldr	r3, [sp, #4]
 287 008a 9CFBF3FC 		sdiv	ip, ip, r3
 268:Core/Src/main.c ****             int32_t xi = 0;
 288              		.loc 1 268 21 view .LVU81
 289 008e ACF57A7C 		sub	ip, ip, #1000
 290              	.LVL18:
 269:Core/Src/main.c ****             int32_t yi = 0;
 291              		.loc 1 269 13 is_stmt 1 view .LVU82
 270:Core/Src/main.c ****             int32_t iteration = 0;
 292              		.loc 1 270 13 view .LVU83
 271:Core/Src/main.c ****             while (((((int32_t)xi * xi + (int32_t)yi * yi) / SCALE) <= FOUR) && (iteration < max_it
 293              		.loc 1 271 13 view .LVU84
 272:Core/Src/main.c ****                 int32_t xi_temp = ((int32_t)xi * xi - (int32_t)yi * yi) / SCALE + x0;
 294              		.loc 1 272 13 view .LVU85
 271:Core/Src/main.c ****             while (((((int32_t)xi * xi + (int32_t)yi * yi) / SCALE) <= FOUR) && (iteration < max_it
 295              		.loc 1 271 21 is_stmt 0 view .LVU86
 296 0092 0020     		movs	r0, #0
 270:Core/Src/main.c ****             int32_t iteration = 0;
 297              		.loc 1 270 21 view .LVU87
 298 0094 0146     		mov	r1, r0
 269:Core/Src/main.c ****             int32_t yi = 0;
 299              		.loc 1 269 21 view .LVU88
 300 0096 0346     		mov	r3, r0
 272:Core/Src/main.c ****                 int32_t xi_temp = ((int32_t)xi * xi - (int32_t)yi * yi) / SCALE + x0;
 301              		.loc 1 272 19 view .LVU89
 302 0098 D4E7     		b	.L7
 303              	.LVL19:
 304              	.L14:
 272:Core/Src/main.c ****                 int32_t xi_temp = ((int32_t)xi * xi - (int32_t)yi * yi) / SCALE + x0;
 305              		.loc 1 272 19 view .LVU90
 306              	.LBE11:
 307              	.LBE8:
 265:Core/Src/main.c ****         for (int32_t x = 0; x < width; x++) {
 308              		.loc 1 265 38 is_stmt 1 discriminator 2 view .LVU91
 309 009a 08F10108 		add	r8, r8, #1
 310              	.LVL20:
 311              	.L6:
 265:Core/Src/main.c ****         for (int32_t x = 0; x < width; x++) {
 312              		.loc 1 265 27 discriminator 1 view .LVU92
 313 009e 019B     		ldr	r3, [sp, #4]
 314 00a0 9845     		cmp	r8, r3
 315 00a2 01DA     		bge	.L15
 316              	.LBB12:
 266:Core/Src/main.c ****             int32_t x0 = ((int32_t)x * THREE_FIVE) / width - TWO_FIVE;
 317              		.loc 1 266 22 is_stmt 0 view .LVU93
 318 00a4 0025     		movs	r5, #0
 319 00a6 E1E7     		b	.L11
 320              	.L15:
 321              	.LBE12:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccp9VHyh.s 			page 12


 322              	.LBE7:
 280:Core/Src/main.c ****         }
 281:Core/Src/main.c ****     }
 282:Core/Src/main.c ****     return checksum;
 323              		.loc 1 282 5 is_stmt 1 view .LVU94
 283:Core/Src/main.c **** }
 324              		.loc 1 283 1 is_stmt 0 view .LVU95
 325 00a8 024B     		ldr	r3, .L16
 326 00aa D3E90001 		ldrd	r0, [r3]
 327 00ae 03B0     		add	sp, sp, #12
 328              	.LCFI5:
 329              		.cfi_def_cfa_offset 36
 330              		@ sp needed
 331 00b0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 332              	.LVL21:
 333              	.L17:
 334              		.loc 1 283 1 view .LVU96
 335              		.align	2
 336              	.L16:
 337 00b4 00000000 		.word	checksum
 338 00b8 D34D6210 		.word	274877907
 339 00bc E70C3D00 		.word	4000999
 340              		.cfi_endproc
 341              	.LFE162:
 343              		.global	__aeabi_i2d
 344              		.global	__aeabi_ddiv
 345              		.global	__aeabi_dmul
 346              		.global	__aeabi_dsub
 347              		.global	__aeabi_dadd
 348              		.global	__aeabi_dcmple
 349              		.section	.text.calculate_mandelbrot_double,"ax",%progbits
 350              		.align	1
 351              		.global	calculate_mandelbrot_double
 352              		.syntax unified
 353              		.thumb
 354              		.thumb_func
 356              	calculate_mandelbrot_double:
 357              	.LVL22:
 358              	.LFB163:
 284:Core/Src/main.c **** 
 285:Core/Src/main.c **** //TODO: Mandelbroat using variable type double
 286:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations){
 359              		.loc 1 286 80 is_stmt 1 view -0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 48
 362              		@ frame_needed = 0, uses_anonymous_args = 0
 363              		.loc 1 286 80 is_stmt 0 view .LVU98
 364 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 365              	.LCFI6:
 366              		.cfi_def_cfa_offset 36
 367              		.cfi_offset 4, -36
 368              		.cfi_offset 5, -32
 369              		.cfi_offset 6, -28
 370              		.cfi_offset 7, -24
 371              		.cfi_offset 8, -20
 372              		.cfi_offset 9, -16
 373              		.cfi_offset 10, -12
ARM GAS  C:\Users\User\AppData\Local\Temp\ccp9VHyh.s 			page 13


 374              		.cfi_offset 11, -8
 375              		.cfi_offset 14, -4
 376 0004 8DB0     		sub	sp, sp, #52
 377              	.LCFI7:
 378              		.cfi_def_cfa_offset 88
 379 0006 0890     		str	r0, [sp, #32]
 380 0008 8946     		mov	r9, r1
 381 000a 0B92     		str	r2, [sp, #44]
 287:Core/Src/main.c ****     //uint64_t mandelbrot_sum = 0;
 288:Core/Src/main.c ****     //TODO: Complete the function implementation
 289:Core/Src/main.c ****     checksum = 0;
 382              		.loc 1 289 5 is_stmt 1 view .LVU99
 383              		.loc 1 289 14 is_stmt 0 view .LVU100
 384 000c 514B     		ldr	r3, .L31
 385 000e 0020     		movs	r0, #0
 386              	.LVL23:
 387              		.loc 1 289 14 view .LVU101
 388 0010 0021     		movs	r1, #0
 389              	.LVL24:
 390              		.loc 1 289 14 view .LVU102
 391 0012 C3E90001 		strd	r0, [r3]
 290:Core/Src/main.c ****     for (int y = 0; y <= height-1; y++) {
 392              		.loc 1 290 5 is_stmt 1 view .LVU103
 393              	.LBB13:
 394              		.loc 1 290 10 view .LVU104
 395              	.LVL25:
 396              		.loc 1 290 14 is_stmt 0 view .LVU105
 397 0016 4FF00008 		mov	r8, #0
 398 001a CDF82890 		str	r9, [sp, #40]
 399              		.loc 1 290 5 view .LVU106
 400 001e 89E0     		b	.L19
 401              	.LVL26:
 402              	.L23:
 403              	.LBB14:
 404              	.LBB15:
 405              	.LBB16:
 291:Core/Src/main.c ****         for (int x = 0; x <= width-1; x++) {
 292:Core/Src/main.c ****             double x0 = ((double)x/(double)width)*(3.5)-2.5;
 293:Core/Src/main.c ****             double y0 = ((double)y/(double)height)*(2.0)-1.0;
 294:Core/Src/main.c ****             int iteration = 0;
 295:Core/Src/main.c ****             double xi = 0;
 296:Core/Src/main.c ****             double yi = 0;
 297:Core/Src/main.c ****             while ((xi*xi + yi*yi) <= (4) && iteration < max_iterations) {
 298:Core/Src/main.c ****                 double temp = (xi*xi - yi*yi);
 406              		.loc 1 298 17 is_stmt 1 view .LVU107
 407              		.loc 1 298 24 is_stmt 0 view .LVU108
 408 0020 4246     		mov	r2, r8
 409 0022 4B46     		mov	r3, r9
 410 0024 DDE90001 		ldrd	r0, [sp]
 411 0028 FFF7FEFF 		bl	__aeabi_dsub
 412              	.LVL27:
 413 002c 8046     		mov	r8, r0
 414 002e 8946     		mov	r9, r1
 415              	.LVL28:
 299:Core/Src/main.c ****                 yi = (2*xi*yi)+y0;
 416              		.loc 1 299 17 is_stmt 1 view .LVU109
 417              		.loc 1 299 24 is_stmt 0 view .LVU110
ARM GAS  C:\Users\User\AppData\Local\Temp\ccp9VHyh.s 			page 14


 418 0030 2246     		mov	r2, r4
 419 0032 2B46     		mov	r3, r5
 420 0034 2046     		mov	r0, r4
 421 0036 2946     		mov	r1, r5
 422 0038 FFF7FEFF 		bl	__aeabi_dadd
 423              	.LVL29:
 424              		.loc 1 299 27 view .LVU111
 425 003c 5246     		mov	r2, r10
 426 003e 5B46     		mov	r3, fp
 427 0040 FFF7FEFF 		bl	__aeabi_dmul
 428              	.LVL30:
 429              		.loc 1 299 20 view .LVU112
 430 0044 DDE90423 		ldrd	r2, [sp, #16]
 431 0048 FFF7FEFF 		bl	__aeabi_dadd
 432              	.LVL31:
 433 004c 8246     		mov	r10, r0
 434              	.LVL32:
 435              		.loc 1 299 20 view .LVU113
 436 004e 8B46     		mov	fp, r1
 437              	.LVL33:
 300:Core/Src/main.c ****                 xi = temp+x0;
 438              		.loc 1 300 17 is_stmt 1 view .LVU114
 439              		.loc 1 300 20 is_stmt 0 view .LVU115
 440 0050 4246     		mov	r2, r8
 441 0052 4B46     		mov	r3, r9
 442 0054 DDE90201 		ldrd	r0, [sp, #8]
 443 0058 FFF7FEFF 		bl	__aeabi_dadd
 444              	.LVL34:
 445 005c 0446     		mov	r4, r0
 446              	.LVL35:
 447              		.loc 1 300 20 view .LVU116
 448 005e 0D46     		mov	r5, r1
 449              	.LVL36:
 301:Core/Src/main.c ****                 iteration++;
 450              		.loc 1 301 17 is_stmt 1 view .LVU117
 451              		.loc 1 301 26 is_stmt 0 view .LVU118
 452 0060 0136     		adds	r6, r6, #1
 453              	.LVL37:
 454              	.L20:
 455              		.loc 1 301 26 view .LVU119
 456              	.LBE16:
 297:Core/Src/main.c ****                 double temp = (xi*xi - yi*yi);
 457              		.loc 1 297 43 is_stmt 1 view .LVU120
 297:Core/Src/main.c ****                 double temp = (xi*xi - yi*yi);
 458              		.loc 1 297 23 is_stmt 0 view .LVU121
 459 0062 2246     		mov	r2, r4
 460 0064 2B46     		mov	r3, r5
 461 0066 2046     		mov	r0, r4
 462 0068 2946     		mov	r1, r5
 463 006a FFF7FEFF 		bl	__aeabi_dmul
 464              	.LVL38:
 465 006e CDE90001 		strd	r0, [sp]
 297:Core/Src/main.c ****                 double temp = (xi*xi - yi*yi);
 466              		.loc 1 297 31 view .LVU122
 467 0072 5246     		mov	r2, r10
 468 0074 5B46     		mov	r3, fp
 469 0076 5046     		mov	r0, r10
ARM GAS  C:\Users\User\AppData\Local\Temp\ccp9VHyh.s 			page 15


 470 0078 5946     		mov	r1, fp
 471 007a FFF7FEFF 		bl	__aeabi_dmul
 472              	.LVL39:
 473 007e 8046     		mov	r8, r0
 474 0080 8946     		mov	r9, r1
 297:Core/Src/main.c ****                 double temp = (xi*xi - yi*yi);
 475              		.loc 1 297 27 view .LVU123
 476 0082 0246     		mov	r2, r0
 477 0084 0B46     		mov	r3, r1
 478 0086 DDE90001 		ldrd	r0, [sp]
 479 008a FFF7FEFF 		bl	__aeabi_dadd
 480              	.LVL40:
 297:Core/Src/main.c ****                 double temp = (xi*xi - yi*yi);
 481              		.loc 1 297 43 view .LVU124
 482 008e 0022     		movs	r2, #0
 483 0090 314B     		ldr	r3, .L31+4
 484 0092 FFF7FEFF 		bl	__aeabi_dcmple
 485              	.LVL41:
 486 0096 08B1     		cbz	r0, .L21
 297:Core/Src/main.c ****                 double temp = (xi*xi - yi*yi);
 487              		.loc 1 297 43 discriminator 1 view .LVU125
 488 0098 BE42     		cmp	r6, r7
 489 009a C1DB     		blt	.L23
 490              	.L21:
 302:Core/Src/main.c ****             }
 303:Core/Src/main.c ****             checksum += iteration;
 491              		.loc 1 303 13 is_stmt 1 view .LVU126
 492              		.loc 1 303 22 is_stmt 0 view .LVU127
 493 009c 2D48     		ldr	r0, .L31
 494 009e 0268     		ldr	r2, [r0]
 495 00a0 4168     		ldr	r1, [r0, #4]
 496 00a2 9219     		adds	r2, r2, r6
 497 00a4 41EBE671 		adc	r1, r1, r6, asr #31
 498 00a8 0260     		str	r2, [r0]
 499 00aa 4160     		str	r1, [r0, #4]
 500              	.LBE15:
 291:Core/Src/main.c ****             double x0 = ((double)x/(double)width)*(3.5)-2.5;
 501              		.loc 1 291 40 is_stmt 1 discriminator 2 view .LVU128
 502 00ac 079B     		ldr	r3, [sp, #28]
 503 00ae 0133     		adds	r3, r3, #1
 504 00b0 0793     		str	r3, [sp, #28]
 505              	.LVL42:
 506              	.L25:
 291:Core/Src/main.c ****             double x0 = ((double)x/(double)width)*(3.5)-2.5;
 507              		.loc 1 291 27 discriminator 1 view .LVU129
 508 00b2 079B     		ldr	r3, [sp, #28]
 509 00b4 089A     		ldr	r2, [sp, #32]
 510 00b6 9342     		cmp	r3, r2
 511 00b8 38DA     		bge	.L29
 512              	.LBB17:
 292:Core/Src/main.c ****             double y0 = ((double)y/(double)height)*(2.0)-1.0;
 513              		.loc 1 292 13 view .LVU130
 292:Core/Src/main.c ****             double y0 = ((double)y/(double)height)*(2.0)-1.0;
 514              		.loc 1 292 26 is_stmt 0 view .LVU131
 515 00ba 0798     		ldr	r0, [sp, #28]
 516 00bc FFF7FEFF 		bl	__aeabi_i2d
 517              	.LVL43:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccp9VHyh.s 			page 16


 518 00c0 0446     		mov	r4, r0
 519 00c2 0D46     		mov	r5, r1
 292:Core/Src/main.c ****             double y0 = ((double)y/(double)height)*(2.0)-1.0;
 520              		.loc 1 292 36 view .LVU132
 521 00c4 0898     		ldr	r0, [sp, #32]
 522 00c6 FFF7FEFF 		bl	__aeabi_i2d
 523              	.LVL44:
 524 00ca 0246     		mov	r2, r0
 525 00cc 0B46     		mov	r3, r1
 292:Core/Src/main.c ****             double y0 = ((double)y/(double)height)*(2.0)-1.0;
 526              		.loc 1 292 35 view .LVU133
 527 00ce 2046     		mov	r0, r4
 528 00d0 2946     		mov	r1, r5
 529 00d2 FFF7FEFF 		bl	__aeabi_ddiv
 530              	.LVL45:
 292:Core/Src/main.c ****             double y0 = ((double)y/(double)height)*(2.0)-1.0;
 531              		.loc 1 292 50 view .LVU134
 532 00d6 0022     		movs	r2, #0
 533 00d8 204B     		ldr	r3, .L31+8
 534 00da FFF7FEFF 		bl	__aeabi_dmul
 535              	.LVL46:
 292:Core/Src/main.c ****             double y0 = ((double)y/(double)height)*(2.0)-1.0;
 536              		.loc 1 292 20 view .LVU135
 537 00de 0022     		movs	r2, #0
 538 00e0 1F4B     		ldr	r3, .L31+12
 539 00e2 FFF7FEFF 		bl	__aeabi_dsub
 540              	.LVL47:
 541 00e6 CDE90201 		strd	r0, [sp, #8]
 542              	.LVL48:
 293:Core/Src/main.c ****             int iteration = 0;
 543              		.loc 1 293 13 is_stmt 1 view .LVU136
 293:Core/Src/main.c ****             int iteration = 0;
 544              		.loc 1 293 26 is_stmt 0 view .LVU137
 545 00ea 0998     		ldr	r0, [sp, #36]
 546              	.LVL49:
 293:Core/Src/main.c ****             int iteration = 0;
 547              		.loc 1 293 26 view .LVU138
 548 00ec FFF7FEFF 		bl	__aeabi_i2d
 549              	.LVL50:
 550 00f0 0446     		mov	r4, r0
 551 00f2 0D46     		mov	r5, r1
 293:Core/Src/main.c ****             int iteration = 0;
 552              		.loc 1 293 36 view .LVU139
 553 00f4 0A98     		ldr	r0, [sp, #40]
 554 00f6 FFF7FEFF 		bl	__aeabi_i2d
 555              	.LVL51:
 556 00fa 0246     		mov	r2, r0
 557 00fc 0B46     		mov	r3, r1
 293:Core/Src/main.c ****             int iteration = 0;
 558              		.loc 1 293 35 view .LVU140
 559 00fe 2046     		mov	r0, r4
 560 0100 2946     		mov	r1, r5
 561 0102 FFF7FEFF 		bl	__aeabi_ddiv
 562              	.LVL52:
 563 0106 0246     		mov	r2, r0
 564 0108 0B46     		mov	r3, r1
 293:Core/Src/main.c ****             int iteration = 0;
ARM GAS  C:\Users\User\AppData\Local\Temp\ccp9VHyh.s 			page 17


 565              		.loc 1 293 51 view .LVU141
 566 010a FFF7FEFF 		bl	__aeabi_dadd
 567              	.LVL53:
 293:Core/Src/main.c ****             int iteration = 0;
 568              		.loc 1 293 20 view .LVU142
 569 010e 0022     		movs	r2, #0
 570 0110 144B     		ldr	r3, .L31+16
 571 0112 FFF7FEFF 		bl	__aeabi_dsub
 572              	.LVL54:
 573 0116 CDE90401 		strd	r0, [sp, #16]
 574              	.LVL55:
 294:Core/Src/main.c ****             double xi = 0;
 575              		.loc 1 294 13 is_stmt 1 view .LVU143
 295:Core/Src/main.c ****             double yi = 0;
 576              		.loc 1 295 13 view .LVU144
 296:Core/Src/main.c ****             while ((xi*xi + yi*yi) <= (4) && iteration < max_iterations) {
 577              		.loc 1 296 13 view .LVU145
 297:Core/Src/main.c ****                 double temp = (xi*xi - yi*yi);
 578              		.loc 1 297 13 view .LVU146
 296:Core/Src/main.c ****             while ((xi*xi + yi*yi) <= (4) && iteration < max_iterations) {
 579              		.loc 1 296 20 is_stmt 0 view .LVU147
 580 011a 4FF0000A 		mov	r10, #0
 581 011e 4FF0000B 		mov	fp, #0
 295:Core/Src/main.c ****             double yi = 0;
 582              		.loc 1 295 20 view .LVU148
 583 0122 5446     		mov	r4, r10
 584 0124 5D46     		mov	r5, fp
 294:Core/Src/main.c ****             double xi = 0;
 585              		.loc 1 294 17 view .LVU149
 586 0126 0026     		movs	r6, #0
 587 0128 0B9F     		ldr	r7, [sp, #44]
 297:Core/Src/main.c ****                 double temp = (xi*xi - yi*yi);
 588              		.loc 1 297 19 view .LVU150
 589 012a 9AE7     		b	.L20
 590              	.LVL56:
 591              	.L29:
 297:Core/Src/main.c ****                 double temp = (xi*xi - yi*yi);
 592              		.loc 1 297 19 view .LVU151
 593              	.LBE17:
 594              	.LBE14:
 290:Core/Src/main.c ****         for (int x = 0; x <= width-1; x++) {
 595              		.loc 1 290 37 discriminator 2 view .LVU152
 596 012c DDF82480 		ldr	r8, [sp, #36]
 290:Core/Src/main.c ****         for (int x = 0; x <= width-1; x++) {
 597              		.loc 1 290 37 is_stmt 1 discriminator 2 view .LVU153
 598 0130 08F10108 		add	r8, r8, #1
 599              	.LVL57:
 600              	.L19:
 290:Core/Src/main.c ****         for (int x = 0; x <= width-1; x++) {
 601              		.loc 1 290 23 discriminator 1 view .LVU154
 602 0134 0A9B     		ldr	r3, [sp, #40]
 603 0136 9845     		cmp	r8, r3
 604 0138 06DA     		bge	.L30
 605              	.LBB18:
 291:Core/Src/main.c ****             double x0 = ((double)x/(double)width)*(3.5)-2.5;
 606              		.loc 1 291 18 is_stmt 0 view .LVU155
 607 013a 4FF0000A 		mov	r10, #0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccp9VHyh.s 			page 18


 608 013e CDF82480 		str	r8, [sp, #36]
 609 0142 CDF81CA0 		str	r10, [sp, #28]
 610 0146 B4E7     		b	.L25
 611              	.L30:
 291:Core/Src/main.c ****             double x0 = ((double)x/(double)width)*(3.5)-2.5;
 612              		.loc 1 291 18 view .LVU156
 613              	.LBE18:
 614              	.LBE13:
 304:Core/Src/main.c ****         }
 305:Core/Src/main.c ****     }
 306:Core/Src/main.c ****     return checksum;
 615              		.loc 1 306 5 is_stmt 1 view .LVU157
 307:Core/Src/main.c **** }
 616              		.loc 1 307 1 is_stmt 0 view .LVU158
 617 0148 024B     		ldr	r3, .L31
 618 014a D3E90001 		ldrd	r0, [r3]
 619 014e 0DB0     		add	sp, sp, #52
 620              	.LCFI8:
 621              		.cfi_def_cfa_offset 36
 622              		@ sp needed
 623 0150 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 624              	.LVL58:
 625              	.L32:
 626              		.loc 1 307 1 view .LVU159
 627              		.align	2
 628              	.L31:
 629 0154 00000000 		.word	checksum
 630 0158 00001040 		.word	1074790400
 631 015c 00000C40 		.word	1074528256
 632 0160 00000440 		.word	1074003968
 633 0164 0000F03F 		.word	1072693248
 634              		.cfi_endproc
 635              	.LFE163:
 637              		.global	__aeabi_f2d
 638              		.global	__aeabi_d2f
 639              		.section	.text.calculate_mandelbrot_float,"ax",%progbits
 640              		.align	1
 641              		.global	calculate_mandelbrot_float
 642              		.syntax unified
 643              		.thumb
 644              		.thumb_func
 646              	calculate_mandelbrot_float:
 647              	.LVL59:
 648              	.LFB164:
 308:Core/Src/main.c **** 
 309:Core/Src/main.c **** uint64_t calculate_mandelbrot_float(int width, int height, int max_iterations){
 649              		.loc 1 309 79 is_stmt 1 view -0
 650              		.cfi_startproc
 651              		@ args = 0, pretend = 0, frame = 0
 652              		@ frame_needed = 0, uses_anonymous_args = 0
 653              		.loc 1 309 79 is_stmt 0 view .LVU161
 654 0000 70B5     		push	{r4, r5, r6, lr}
 655              	.LCFI9:
 656              		.cfi_def_cfa_offset 16
 657              		.cfi_offset 4, -16
 658              		.cfi_offset 5, -12
 659              		.cfi_offset 6, -8
ARM GAS  C:\Users\User\AppData\Local\Temp\ccp9VHyh.s 			page 19


 660              		.cfi_offset 14, -4
 661 0002 2DED048B 		vpush.64	{d8, d9}
 662              	.LCFI10:
 663              		.cfi_def_cfa_offset 32
 664              		.cfi_offset 80, -32
 665              		.cfi_offset 81, -28
 666              		.cfi_offset 82, -24
 667              		.cfi_offset 83, -20
 668 0006 0646     		mov	r6, r0
 669 0008 09EE101A 		vmov	s18, r1	@ int
 670 000c 1446     		mov	r4, r2
 310:Core/Src/main.c ****     //uint64_t mandelbrot_sum = 0;
 311:Core/Src/main.c ****     //TODO: Complete the function implementation
 312:Core/Src/main.c ****     checksum = 0;
 671              		.loc 1 312 5 is_stmt 1 view .LVU162
 672              		.loc 1 312 14 is_stmt 0 view .LVU163
 673 000e 3B4B     		ldr	r3, .L46
 674 0010 0020     		movs	r0, #0
 675              	.LVL60:
 676              		.loc 1 312 14 view .LVU164
 677 0012 0021     		movs	r1, #0
 678              	.LVL61:
 679              		.loc 1 312 14 view .LVU165
 680 0014 C3E90001 		strd	r0, [r3]
 313:Core/Src/main.c ****     for (int y = 0; y <= height-1; y++) {
 681              		.loc 1 313 5 is_stmt 1 view .LVU166
 682              	.LBB19:
 683              		.loc 1 313 10 view .LVU167
 684              	.LVL62:
 685              		.loc 1 313 14 is_stmt 0 view .LVU168
 686 0018 DFED398A 		vldr.32	s17, .L46+4	@ int
 687              		.loc 1 313 5 view .LVU169
 688 001c 5FE0     		b	.L34
 689              	.LVL63:
 690              	.L38:
 691              	.LBB20:
 692              	.LBB21:
 693              	.LBB22:
 314:Core/Src/main.c ****         for (int x = 0; x <= width-1; x++) {
 315:Core/Src/main.c ****             float x0 = ((float)x/(float)width)*(3.5)-2.5;
 316:Core/Src/main.c ****             float y0 = ((float)y/(float)height)*(2.0)-1.0;
 317:Core/Src/main.c ****             int iteration = 0;
 318:Core/Src/main.c ****             float xi = 0;
 319:Core/Src/main.c ****             float yi = 0;
 320:Core/Src/main.c ****             while ((xi*xi + yi*yi) <= (4) && iteration < max_iterations) {
 321:Core/Src/main.c ****                 float temp = (xi*xi - yi*yi);
 694              		.loc 1 321 17 is_stmt 1 view .LVU170
 695              		.loc 1 321 23 is_stmt 0 view .LVU171
 696 001e 76EEC66A 		vsub.f32	s13, s13, s12
 697              	.LVL64:
 322:Core/Src/main.c ****                 yi = (2*xi*yi)+y0;
 698              		.loc 1 322 17 is_stmt 1 view .LVU172
 699              		.loc 1 322 24 is_stmt 0 view .LVU173
 700 0022 77EEA77A 		vadd.f32	s15, s15, s15
 701              	.LVL65:
 702              		.loc 1 322 27 view .LVU174
 703 0026 27EE877A 		vmul.f32	s14, s15, s14
ARM GAS  C:\Users\User\AppData\Local\Temp\ccp9VHyh.s 			page 20


 704              	.LVL66:
 705              		.loc 1 322 20 view .LVU175
 706 002a 37EE247A 		vadd.f32	s14, s14, s9
 707              	.LVL67:
 323:Core/Src/main.c ****                 xi = temp+x0;
 708              		.loc 1 323 17 is_stmt 1 view .LVU176
 709              		.loc 1 323 20 is_stmt 0 view .LVU177
 710 002e 78EE267A 		vadd.f32	s15, s16, s13
 711              	.LVL68:
 324:Core/Src/main.c ****                 iteration++;
 712              		.loc 1 324 17 is_stmt 1 view .LVU178
 713              		.loc 1 324 26 is_stmt 0 view .LVU179
 714 0032 0133     		adds	r3, r3, #1
 715              	.LVL69:
 716              	.L35:
 717              		.loc 1 324 26 view .LVU180
 718              	.LBE22:
 320:Core/Src/main.c ****                 float temp = (xi*xi - yi*yi);
 719              		.loc 1 320 43 is_stmt 1 view .LVU181
 320:Core/Src/main.c ****                 float temp = (xi*xi - yi*yi);
 720              		.loc 1 320 23 is_stmt 0 view .LVU182
 721 0034 67EEA76A 		vmul.f32	s13, s15, s15
 320:Core/Src/main.c ****                 float temp = (xi*xi - yi*yi);
 722              		.loc 1 320 31 view .LVU183
 723 0038 27EE076A 		vmul.f32	s12, s14, s14
 320:Core/Src/main.c ****                 float temp = (xi*xi - yi*yi);
 724              		.loc 1 320 27 view .LVU184
 725 003c 36EE865A 		vadd.f32	s10, s13, s12
 320:Core/Src/main.c ****                 float temp = (xi*xi - yi*yi);
 726              		.loc 1 320 43 view .LVU185
 727 0040 F1EE005A 		vmov.f32	s11, #4.0e+0
 728 0044 B4EEE55A 		vcmpe.f32	s10, s11
 729 0048 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 730 004c 01D8     		bhi	.L36
 320:Core/Src/main.c ****                 float temp = (xi*xi - yi*yi);
 731              		.loc 1 320 43 discriminator 1 view .LVU186
 732 004e A342     		cmp	r3, r4
 733 0050 E5DB     		blt	.L38
 734              	.L36:
 325:Core/Src/main.c ****             }
 326:Core/Src/main.c ****             checksum += iteration;
 735              		.loc 1 326 13 is_stmt 1 view .LVU187
 736              		.loc 1 326 22 is_stmt 0 view .LVU188
 737 0052 2A49     		ldr	r1, .L46
 738 0054 0A68     		ldr	r2, [r1]
 739 0056 4868     		ldr	r0, [r1, #4]
 740              	.LVL70:
 741              		.loc 1 326 22 view .LVU189
 742 0058 D218     		adds	r2, r2, r3
 743 005a 40EBE370 		adc	r0, r0, r3, asr #31
 744 005e 0A60     		str	r2, [r1]
 745 0060 4860     		str	r0, [r1, #4]
 746              	.LBE21:
 314:Core/Src/main.c ****             float x0 = ((float)x/(float)width)*(3.5)-2.5;
 747              		.loc 1 314 40 is_stmt 1 discriminator 2 view .LVU190
 748 0062 0135     		adds	r5, r5, #1
 749              	.LVL71:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccp9VHyh.s 			page 21


 750              	.L40:
 314:Core/Src/main.c ****             float x0 = ((float)x/(float)width)*(3.5)-2.5;
 751              		.loc 1 314 27 discriminator 1 view .LVU191
 752 0064 B542     		cmp	r5, r6
 753 0066 35DA     		bge	.L44
 754              	.LBB23:
 315:Core/Src/main.c ****             float y0 = ((float)y/(float)height)*(2.0)-1.0;
 755              		.loc 1 315 13 view .LVU192
 315:Core/Src/main.c ****             float y0 = ((float)y/(float)height)*(2.0)-1.0;
 756              		.loc 1 315 25 is_stmt 0 view .LVU193
 757 0068 07EE905A 		vmov	s15, r5	@ int
 758 006c F8EEE77A 		vcvt.f32.s32	s15, s15
 315:Core/Src/main.c ****             float y0 = ((float)y/(float)height)*(2.0)-1.0;
 759              		.loc 1 315 34 view .LVU194
 760 0070 07EE106A 		vmov	s14, r6	@ int
 761 0074 B8EEC77A 		vcvt.f32.s32	s14, s14
 315:Core/Src/main.c ****             float y0 = ((float)y/(float)height)*(2.0)-1.0;
 762              		.loc 1 315 33 view .LVU195
 763 0078 C7EE877A 		vdiv.f32	s15, s15, s14
 764 007c 17EE900A 		vmov	r0, s15
 765 0080 FFF7FEFF 		bl	__aeabi_f2d
 766              	.LVL72:
 315:Core/Src/main.c ****             float y0 = ((float)y/(float)height)*(2.0)-1.0;
 767              		.loc 1 315 47 view .LVU196
 768 0084 0022     		movs	r2, #0
 769 0086 1F4B     		ldr	r3, .L46+8
 770 0088 FFF7FEFF 		bl	__aeabi_dmul
 771              	.LVL73:
 315:Core/Src/main.c ****             float y0 = ((float)y/(float)height)*(2.0)-1.0;
 772              		.loc 1 315 53 view .LVU197
 773 008c 0022     		movs	r2, #0
 774 008e 1E4B     		ldr	r3, .L46+12
 775 0090 FFF7FEFF 		bl	__aeabi_dsub
 776              	.LVL74:
 315:Core/Src/main.c ****             float y0 = ((float)y/(float)height)*(2.0)-1.0;
 777              		.loc 1 315 19 view .LVU198
 778 0094 FFF7FEFF 		bl	__aeabi_d2f
 779              	.LVL75:
 780 0098 08EE100A 		vmov	s16, r0
 781              	.LVL76:
 316:Core/Src/main.c ****             int iteration = 0;
 782              		.loc 1 316 13 is_stmt 1 view .LVU199
 316:Core/Src/main.c ****             int iteration = 0;
 783              		.loc 1 316 25 is_stmt 0 view .LVU200
 784 009c F8EEE87A 		vcvt.f32.s32	s15, s17
 316:Core/Src/main.c ****             int iteration = 0;
 785              		.loc 1 316 34 view .LVU201
 786 00a0 B8EEC97A 		vcvt.f32.s32	s14, s18
 316:Core/Src/main.c ****             int iteration = 0;
 787              		.loc 1 316 33 view .LVU202
 788 00a4 C7EE877A 		vdiv.f32	s15, s15, s14
 789 00a8 17EE900A 		vmov	r0, s15
 790              	.LVL77:
 316:Core/Src/main.c ****             int iteration = 0;
 791              		.loc 1 316 33 view .LVU203
 792 00ac FFF7FEFF 		bl	__aeabi_f2d
 793              	.LVL78:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccp9VHyh.s 			page 22


 794 00b0 0246     		mov	r2, r0
 795 00b2 0B46     		mov	r3, r1
 316:Core/Src/main.c ****             int iteration = 0;
 796              		.loc 1 316 48 view .LVU204
 797 00b4 FFF7FEFF 		bl	__aeabi_dadd
 798              	.LVL79:
 316:Core/Src/main.c ****             int iteration = 0;
 799              		.loc 1 316 54 view .LVU205
 800 00b8 0022     		movs	r2, #0
 801 00ba 144B     		ldr	r3, .L46+16
 802 00bc FFF7FEFF 		bl	__aeabi_dsub
 803              	.LVL80:
 316:Core/Src/main.c ****             int iteration = 0;
 804              		.loc 1 316 19 view .LVU206
 805 00c0 FFF7FEFF 		bl	__aeabi_d2f
 806              	.LVL81:
 807 00c4 04EE900A 		vmov	s9, r0
 808              	.LVL82:
 317:Core/Src/main.c ****             float xi = 0;
 809              		.loc 1 317 13 is_stmt 1 view .LVU207
 318:Core/Src/main.c ****             float yi = 0;
 810              		.loc 1 318 13 view .LVU208
 319:Core/Src/main.c ****             while ((xi*xi + yi*yi) <= (4) && iteration < max_iterations) {
 811              		.loc 1 319 13 view .LVU209
 320:Core/Src/main.c ****                 float temp = (xi*xi - yi*yi);
 812              		.loc 1 320 13 view .LVU210
 319:Core/Src/main.c ****             while ((xi*xi + yi*yi) <= (4) && iteration < max_iterations) {
 813              		.loc 1 319 19 is_stmt 0 view .LVU211
 814 00c8 9FED117A 		vldr.32	s14, .L46+20
 318:Core/Src/main.c ****             float yi = 0;
 815              		.loc 1 318 19 view .LVU212
 816 00cc F0EE477A 		vmov.f32	s15, s14
 317:Core/Src/main.c ****             float xi = 0;
 817              		.loc 1 317 17 view .LVU213
 818 00d0 0023     		movs	r3, #0
 320:Core/Src/main.c ****                 float temp = (xi*xi - yi*yi);
 819              		.loc 1 320 19 view .LVU214
 820 00d2 AFE7     		b	.L35
 821              	.LVL83:
 822              	.L44:
 320:Core/Src/main.c ****                 float temp = (xi*xi - yi*yi);
 823              		.loc 1 320 19 view .LVU215
 824              	.LBE23:
 825              	.LBE20:
 313:Core/Src/main.c ****         for (int x = 0; x <= width-1; x++) {
 826              		.loc 1 313 37 is_stmt 1 discriminator 2 view .LVU216
 827 00d4 18EE903A 		vmov	r3, s17	@ int
 828 00d8 0133     		adds	r3, r3, #1
 829 00da 08EE903A 		vmov	s17, r3	@ int
 830              	.LVL84:
 831              	.L34:
 313:Core/Src/main.c ****         for (int x = 0; x <= width-1; x++) {
 832              		.loc 1 313 23 discriminator 1 view .LVU217
 833 00de 18EE903A 		vmov	r3, s17	@ int
 834 00e2 19EE102A 		vmov	r2, s18	@ int
 835 00e6 9342     		cmp	r3, r2
 836 00e8 01DA     		bge	.L45
ARM GAS  C:\Users\User\AppData\Local\Temp\ccp9VHyh.s 			page 23


 837              	.LVL85:
 838              	.LBB24:
 314:Core/Src/main.c ****             float x0 = ((float)x/(float)width)*(3.5)-2.5;
 839              		.loc 1 314 18 is_stmt 0 view .LVU218
 840 00ea 0025     		movs	r5, #0
 841 00ec BAE7     		b	.L40
 842              	.L45:
 843              	.LBE24:
 844              	.LBE19:
 327:Core/Src/main.c ****         }
 328:Core/Src/main.c ****     }
 329:Core/Src/main.c ****     return checksum;
 845              		.loc 1 329 5 is_stmt 1 view .LVU219
 330:Core/Src/main.c **** }
 846              		.loc 1 330 1 is_stmt 0 view .LVU220
 847 00ee 034B     		ldr	r3, .L46
 848 00f0 D3E90001 		ldrd	r0, [r3]
 849 00f4 BDEC048B 		vldm	sp!, {d8-d9}
 850              	.LCFI11:
 851              		.cfi_restore 82
 852              		.cfi_restore 83
 853              		.cfi_restore 80
 854              		.cfi_restore 81
 855              		.cfi_def_cfa_offset 16
 856 00f8 70BD     		pop	{r4, r5, r6, pc}
 857              	.LVL86:
 858              	.L47:
 859              		.loc 1 330 1 view .LVU221
 860 00fa 00BF     		.align	2
 861              	.L46:
 862 00fc 00000000 		.word	checksum
 863 0100 00000000 		.word	0
 864 0104 00000C40 		.word	1074528256
 865 0108 00000440 		.word	1074003968
 866 010c 0000F03F 		.word	1072693248
 867 0110 00000000 		.word	0
 868              		.cfi_endproc
 869              	.LFE164:
 871              		.section	.text.DWT_Init,"ax",%progbits
 872              		.align	1
 873              		.global	DWT_Init
 874              		.syntax unified
 875              		.thumb
 876              		.thumb_func
 878              	DWT_Init:
 879              	.LFB165:
 331:Core/Src/main.c **** 
 332:Core/Src/main.c **** void DWT_Init(void){
 880              		.loc 1 332 20 is_stmt 1 view -0
 881              		.cfi_startproc
 882              		@ args = 0, pretend = 0, frame = 0
 883              		@ frame_needed = 0, uses_anonymous_args = 0
 884              		@ link register save eliminated.
 333:Core/Src/main.c **** 	CoreDebug->DEMCR |= CoreDebug_DEMCR_TRCENA_Msk;
 885              		.loc 1 333 2 view .LVU223
 886              		.loc 1 333 11 is_stmt 0 view .LVU224
 887 0000 074A     		ldr	r2, .L49
ARM GAS  C:\Users\User\AppData\Local\Temp\ccp9VHyh.s 			page 24


 888 0002 D2F8FC30 		ldr	r3, [r2, #252]
 889              		.loc 1 333 19 view .LVU225
 890 0006 43F08073 		orr	r3, r3, #16777216
 891 000a C2F8FC30 		str	r3, [r2, #252]
 334:Core/Src/main.c **** 	DWT->CYCCNT = 0;
 892              		.loc 1 334 2 is_stmt 1 view .LVU226
 893              		.loc 1 334 14 is_stmt 0 view .LVU227
 894 000e 054B     		ldr	r3, .L49+4
 895 0010 0022     		movs	r2, #0
 896 0012 5A60     		str	r2, [r3, #4]
 335:Core/Src/main.c **** 	DWT->CTRL |= DWT_CTRL_CYCCNTENA_Msk;
 897              		.loc 1 335 2 is_stmt 1 view .LVU228
 898              		.loc 1 335 5 is_stmt 0 view .LVU229
 899 0014 1A68     		ldr	r2, [r3]
 900              		.loc 1 335 12 view .LVU230
 901 0016 42F00102 		orr	r2, r2, #1
 902 001a 1A60     		str	r2, [r3]
 336:Core/Src/main.c **** }
 903              		.loc 1 336 1 view .LVU231
 904 001c 7047     		bx	lr
 905              	.L50:
 906 001e 00BF     		.align	2
 907              	.L49:
 908 0020 00ED00E0 		.word	-536810240
 909 0024 001000E0 		.word	-536866816
 910              		.cfi_endproc
 911              	.LFE165:
 913              		.section	.text.Error_Handler,"ax",%progbits
 914              		.align	1
 915              		.global	Error_Handler
 916              		.syntax unified
 917              		.thumb
 918              		.thumb_func
 920              	Error_Handler:
 921              	.LFB166:
 337:Core/Src/main.c **** /* USER CODE END 4 */
 338:Core/Src/main.c **** 
 339:Core/Src/main.c **** /**
 340:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 341:Core/Src/main.c ****   * @retval None
 342:Core/Src/main.c ****   */
 343:Core/Src/main.c **** void Error_Handler(void)
 344:Core/Src/main.c **** {
 922              		.loc 1 344 1 is_stmt 1 view -0
 923              		.cfi_startproc
 924              		@ Volatile: function does not return.
 925              		@ args = 0, pretend = 0, frame = 0
 926              		@ frame_needed = 0, uses_anonymous_args = 0
 927              		@ link register save eliminated.
 345:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 346:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 347:Core/Src/main.c ****   __disable_irq();
 928              		.loc 1 347 3 view .LVU233
 929              	.LBB25:
 930              	.LBI25:
 931              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
ARM GAS  C:\Users\User\AppData\Local\Temp\ccp9VHyh.s 			page 25


   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
ARM GAS  C:\Users\User\AppData\Local\Temp\ccp9VHyh.s 			page 26


  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\User\AppData\Local\Temp\ccp9VHyh.s 			page 27


 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccp9VHyh.s 			page 28


 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccp9VHyh.s 			page 29


 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\User\AppData\Local\Temp\ccp9VHyh.s 			page 30


 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
ARM GAS  C:\Users\User\AppData\Local\Temp\ccp9VHyh.s 			page 31


 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
ARM GAS  C:\Users\User\AppData\Local\Temp\ccp9VHyh.s 			page 32


 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccp9VHyh.s 			page 33


 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
ARM GAS  C:\Users\User\AppData\Local\Temp\ccp9VHyh.s 			page 34


 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
ARM GAS  C:\Users\User\AppData\Local\Temp\ccp9VHyh.s 			page 35


 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
ARM GAS  C:\Users\User\AppData\Local\Temp\ccp9VHyh.s 			page 36


 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\User\AppData\Local\Temp\ccp9VHyh.s 			page 37


 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
ARM GAS  C:\Users\User\AppData\Local\Temp\ccp9VHyh.s 			page 38


 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccp9VHyh.s 			page 39


 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
ARM GAS  C:\Users\User\AppData\Local\Temp\ccp9VHyh.s 			page 40


 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\User\AppData\Local\Temp\ccp9VHyh.s 			page 41


 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 932              		.loc 2 960 27 view .LVU234
 933              	.LBB26:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 934              		.loc 2 962 3 view .LVU235
 935              		.syntax unified
 936              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 937 0000 72B6     		cpsid i
 938              	@ 0 "" 2
 939              		.thumb
ARM GAS  C:\Users\User\AppData\Local\Temp\ccp9VHyh.s 			page 42


 940              		.syntax unified
 941              	.L52:
 942              	.LBE26:
 943              	.LBE25:
 348:Core/Src/main.c ****   while (1)
 944              		.loc 1 348 3 view .LVU236
 349:Core/Src/main.c ****   {
 350:Core/Src/main.c ****   }
 945              		.loc 1 350 3 view .LVU237
 348:Core/Src/main.c ****   while (1)
 946              		.loc 1 348 9 view .LVU238
 947 0002 FEE7     		b	.L52
 948              		.cfi_endproc
 949              	.LFE166:
 951              		.section	.text.SystemClock_Config,"ax",%progbits
 952              		.align	1
 953              		.global	SystemClock_Config
 954              		.syntax unified
 955              		.thumb
 956              		.thumb_func
 958              	SystemClock_Config:
 959              	.LFB160:
 176:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 960              		.loc 1 176 1 view -0
 961              		.cfi_startproc
 962              		@ args = 0, pretend = 0, frame = 80
 963              		@ frame_needed = 0, uses_anonymous_args = 0
 964 0000 00B5     		push	{lr}
 965              	.LCFI12:
 966              		.cfi_def_cfa_offset 4
 967              		.cfi_offset 14, -4
 968 0002 95B0     		sub	sp, sp, #84
 969              	.LCFI13:
 970              		.cfi_def_cfa_offset 88
 177:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 971              		.loc 1 177 3 view .LVU240
 177:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 972              		.loc 1 177 22 is_stmt 0 view .LVU241
 973 0004 3422     		movs	r2, #52
 974 0006 0021     		movs	r1, #0
 975 0008 07A8     		add	r0, sp, #28
 976 000a FFF7FEFF 		bl	memset
 977              	.LVL87:
 178:Core/Src/main.c **** 
 978              		.loc 1 178 3 is_stmt 1 view .LVU242
 178:Core/Src/main.c **** 
 979              		.loc 1 178 22 is_stmt 0 view .LVU243
 980 000e 0023     		movs	r3, #0
 981 0010 0293     		str	r3, [sp, #8]
 982 0012 0393     		str	r3, [sp, #12]
 983 0014 0493     		str	r3, [sp, #16]
 984 0016 0593     		str	r3, [sp, #20]
 985 0018 0693     		str	r3, [sp, #24]
 182:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 986              		.loc 1 182 3 is_stmt 1 view .LVU244
 987              	.LBB27:
 182:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
ARM GAS  C:\Users\User\AppData\Local\Temp\ccp9VHyh.s 			page 43


 988              		.loc 1 182 3 view .LVU245
 989 001a 0093     		str	r3, [sp]
 182:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 990              		.loc 1 182 3 view .LVU246
 991 001c 214A     		ldr	r2, .L59
 992 001e 116C     		ldr	r1, [r2, #64]
 993 0020 41F08051 		orr	r1, r1, #268435456
 994 0024 1164     		str	r1, [r2, #64]
 182:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 995              		.loc 1 182 3 view .LVU247
 996 0026 126C     		ldr	r2, [r2, #64]
 997 0028 02F08052 		and	r2, r2, #268435456
 998 002c 0092     		str	r2, [sp]
 182:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 999              		.loc 1 182 3 view .LVU248
 1000 002e 009A     		ldr	r2, [sp]
 1001              	.LBE27:
 182:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1002              		.loc 1 182 3 view .LVU249
 183:Core/Src/main.c **** 
 1003              		.loc 1 183 3 view .LVU250
 1004              	.LBB28:
 183:Core/Src/main.c **** 
 1005              		.loc 1 183 3 view .LVU251
 1006 0030 0193     		str	r3, [sp, #4]
 183:Core/Src/main.c **** 
 1007              		.loc 1 183 3 view .LVU252
 1008 0032 1D4A     		ldr	r2, .L59+4
 1009 0034 1368     		ldr	r3, [r2]
 1010 0036 23F44043 		bic	r3, r3, #49152
 1011 003a 43F48043 		orr	r3, r3, #16384
 1012 003e 1360     		str	r3, [r2]
 183:Core/Src/main.c **** 
 1013              		.loc 1 183 3 view .LVU253
 1014 0040 1368     		ldr	r3, [r2]
 1015 0042 03F44043 		and	r3, r3, #49152
 1016 0046 0193     		str	r3, [sp, #4]
 183:Core/Src/main.c **** 
 1017              		.loc 1 183 3 view .LVU254
 1018 0048 019B     		ldr	r3, [sp, #4]
 1019              	.LBE28:
 183:Core/Src/main.c **** 
 1020              		.loc 1 183 3 view .LVU255
 188:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1021              		.loc 1 188 3 view .LVU256
 188:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1022              		.loc 1 188 36 is_stmt 0 view .LVU257
 1023 004a 0123     		movs	r3, #1
 1024 004c 0793     		str	r3, [sp, #28]
 189:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1025              		.loc 1 189 3 is_stmt 1 view .LVU258
 189:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1026              		.loc 1 189 30 is_stmt 0 view .LVU259
 1027 004e 4FF48033 		mov	r3, #65536
 1028 0052 0893     		str	r3, [sp, #32]
 190:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1029              		.loc 1 190 3 is_stmt 1 view .LVU260
ARM GAS  C:\Users\User\AppData\Local\Temp\ccp9VHyh.s 			page 44


 190:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1030              		.loc 1 190 34 is_stmt 0 view .LVU261
 1031 0054 0223     		movs	r3, #2
 1032 0056 0D93     		str	r3, [sp, #52]
 191:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 15;
 1033              		.loc 1 191 3 is_stmt 1 view .LVU262
 191:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 15;
 1034              		.loc 1 191 35 is_stmt 0 view .LVU263
 1035 0058 4FF48002 		mov	r2, #4194304
 1036 005c 0E92     		str	r2, [sp, #56]
 192:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 1037              		.loc 1 192 3 is_stmt 1 view .LVU264
 192:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 1038              		.loc 1 192 30 is_stmt 0 view .LVU265
 1039 005e 0F22     		movs	r2, #15
 1040 0060 0F92     		str	r2, [sp, #60]
 193:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1041              		.loc 1 193 3 is_stmt 1 view .LVU266
 193:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1042              		.loc 1 193 30 is_stmt 0 view .LVU267
 1043 0062 9022     		movs	r2, #144
 1044 0064 1092     		str	r2, [sp, #64]
 194:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 1045              		.loc 1 194 3 is_stmt 1 view .LVU268
 194:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 1046              		.loc 1 194 30 is_stmt 0 view .LVU269
 1047 0066 1193     		str	r3, [sp, #68]
 195:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 1048              		.loc 1 195 3 is_stmt 1 view .LVU270
 195:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 1049              		.loc 1 195 30 is_stmt 0 view .LVU271
 1050 0068 1293     		str	r3, [sp, #72]
 196:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1051              		.loc 1 196 3 is_stmt 1 view .LVU272
 196:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1052              		.loc 1 196 30 is_stmt 0 view .LVU273
 1053 006a 1393     		str	r3, [sp, #76]
 197:Core/Src/main.c ****   {
 1054              		.loc 1 197 3 is_stmt 1 view .LVU274
 197:Core/Src/main.c ****   {
 1055              		.loc 1 197 7 is_stmt 0 view .LVU275
 1056 006c 07A8     		add	r0, sp, #28
 1057 006e FFF7FEFF 		bl	HAL_RCC_OscConfig
 1058              	.LVL88:
 197:Core/Src/main.c ****   {
 1059              		.loc 1 197 6 discriminator 1 view .LVU276
 1060 0072 98B9     		cbnz	r0, .L57
 204:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1061              		.loc 1 204 3 is_stmt 1 view .LVU277
 204:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1062              		.loc 1 204 31 is_stmt 0 view .LVU278
 1063 0074 0F23     		movs	r3, #15
 1064 0076 0293     		str	r3, [sp, #8]
 206:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1065              		.loc 1 206 3 is_stmt 1 view .LVU279
 206:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1066              		.loc 1 206 34 is_stmt 0 view .LVU280
ARM GAS  C:\Users\User\AppData\Local\Temp\ccp9VHyh.s 			page 45


 1067 0078 0223     		movs	r3, #2
 1068 007a 0393     		str	r3, [sp, #12]
 207:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1069              		.loc 1 207 3 is_stmt 1 view .LVU281
 207:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1070              		.loc 1 207 35 is_stmt 0 view .LVU282
 1071 007c 0023     		movs	r3, #0
 1072 007e 0493     		str	r3, [sp, #16]
 208:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1073              		.loc 1 208 3 is_stmt 1 view .LVU283
 208:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1074              		.loc 1 208 36 is_stmt 0 view .LVU284
 1075 0080 4FF4A053 		mov	r3, #5120
 1076 0084 0593     		str	r3, [sp, #20]
 209:Core/Src/main.c **** 
 1077              		.loc 1 209 3 is_stmt 1 view .LVU285
 209:Core/Src/main.c **** 
 1078              		.loc 1 209 36 is_stmt 0 view .LVU286
 1079 0086 4FF48053 		mov	r3, #4096
 1080 008a 0693     		str	r3, [sp, #24]
 211:Core/Src/main.c ****   {
 1081              		.loc 1 211 3 is_stmt 1 view .LVU287
 211:Core/Src/main.c ****   {
 1082              		.loc 1 211 7 is_stmt 0 view .LVU288
 1083 008c 0321     		movs	r1, #3
 1084 008e 02A8     		add	r0, sp, #8
 1085 0090 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1086              	.LVL89:
 211:Core/Src/main.c ****   {
 1087              		.loc 1 211 6 discriminator 1 view .LVU289
 1088 0094 20B9     		cbnz	r0, .L58
 215:Core/Src/main.c **** 
 1089              		.loc 1 215 1 view .LVU290
 1090 0096 15B0     		add	sp, sp, #84
 1091              	.LCFI14:
 1092              		.cfi_remember_state
 1093              		.cfi_def_cfa_offset 4
 1094              		@ sp needed
 1095 0098 5DF804FB 		ldr	pc, [sp], #4
 1096              	.L57:
 1097              	.LCFI15:
 1098              		.cfi_restore_state
 199:Core/Src/main.c ****   }
 1099              		.loc 1 199 5 is_stmt 1 view .LVU291
 1100 009c FFF7FEFF 		bl	Error_Handler
 1101              	.LVL90:
 1102              	.L58:
 213:Core/Src/main.c ****   }
 1103              		.loc 1 213 5 view .LVU292
 1104 00a0 FFF7FEFF 		bl	Error_Handler
 1105              	.LVL91:
 1106              	.L60:
 1107              		.align	2
 1108              	.L59:
 1109 00a4 00380240 		.word	1073887232
 1110 00a8 00700040 		.word	1073770496
 1111              		.cfi_endproc
ARM GAS  C:\Users\User\AppData\Local\Temp\ccp9VHyh.s 			page 46


 1112              	.LFE160:
 1114              		.global	__aeabi_ui2d
 1115              		.section	.text.main,"ax",%progbits
 1116              		.align	1
 1117              		.global	main
 1118              		.syntax unified
 1119              		.thumb
 1120              		.thumb_func
 1122              	main:
 1123              	.LFB159:
  88:Core/Src/main.c **** 
 1124              		.loc 1 88 1 view -0
 1125              		.cfi_startproc
 1126              		@ args = 0, pretend = 0, frame = 0
 1127              		@ frame_needed = 0, uses_anonymous_args = 0
 1128 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1129              	.LCFI16:
 1130              		.cfi_def_cfa_offset 32
 1131              		.cfi_offset 4, -32
 1132              		.cfi_offset 5, -28
 1133              		.cfi_offset 6, -24
 1134              		.cfi_offset 7, -20
 1135              		.cfi_offset 8, -16
 1136              		.cfi_offset 9, -12
 1137              		.cfi_offset 10, -8
 1138              		.cfi_offset 14, -4
  97:Core/Src/main.c **** 
 1139              		.loc 1 97 3 view .LVU294
 1140 0004 FFF7FEFF 		bl	HAL_Init
 1141              	.LVL92:
 104:Core/Src/main.c **** 
 1142              		.loc 1 104 3 view .LVU295
 1143 0008 FFF7FEFF 		bl	SystemClock_Config
 1144              	.LVL93:
 111:Core/Src/main.c ****   DWT_Init();
 1145              		.loc 1 111 3 view .LVU296
 1146 000c FFF7FEFF 		bl	MX_GPIO_Init
 1147              	.LVL94:
 112:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1148              		.loc 1 112 3 view .LVU297
 1149 0010 FFF7FEFF 		bl	DWT_Init
 1150              	.LVL95:
 116:Core/Src/main.c ****           //TODO: Turn on LED 0 to signify the start of the operation
 1151              		.loc 1 116 3 view .LVU298
 1152              	.LBB29:
 116:Core/Src/main.c ****           //TODO: Turn on LED 0 to signify the start of the operation
 1153              		.loc 1 116 8 view .LVU299
 116:Core/Src/main.c ****           //TODO: Turn on LED 0 to signify the start of the operation
 1154              		.loc 1 116 12 is_stmt 0 view .LVU300
 1155 0014 0024     		movs	r4, #0
 116:Core/Src/main.c ****           //TODO: Turn on LED 0 to signify the start of the operation
 1156              		.loc 1 116 3 view .LVU301
 1157 0016 62E0     		b	.L62
 1158              	.LVL96:
 1159              	.L63:
 118:Core/Src/main.c **** 
 1160              		.loc 1 118 11 is_stmt 1 view .LVU302
ARM GAS  C:\Users\User\AppData\Local\Temp\ccp9VHyh.s 			page 47


 1161 0018 354D     		ldr	r5, .L66+8
 1162 001a 0122     		movs	r2, #1
 1163 001c 1146     		mov	r1, r2
 1164 001e 2846     		mov	r0, r5
 1165 0020 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1166              	.LVL97:
 120:Core/Src/main.c **** 
 1167              		.loc 1 120 11 view .LVU303
 120:Core/Src/main.c **** 
 1168              		.loc 1 120 24 is_stmt 0 view .LVU304
 1169 0024 FFF7FEFF 		bl	HAL_GetTick
 1170              	.LVL98:
 120:Core/Src/main.c **** 
 1171              		.loc 1 120 22 discriminator 1 view .LVU305
 1172 0028 DFF8E8A0 		ldr	r10, .L66+44
 1173 002c CAF80000 		str	r0, [r10]
 122:Core/Src/main.c ****           start_cycles = DWT->CYCCNT;
 1174              		.loc 1 122 11 is_stmt 1 view .LVU306
 122:Core/Src/main.c ****           start_cycles = DWT->CYCCNT;
 1175              		.loc 1 122 23 is_stmt 0 view .LVU307
 1176 0030 304E     		ldr	r6, .L66+12
 1177 0032 0027     		movs	r7, #0
 1178 0034 7760     		str	r7, [r6, #4]
 123:Core/Src/main.c **** 
 1179              		.loc 1 123 11 is_stmt 1 view .LVU308
 123:Core/Src/main.c **** 
 1180              		.loc 1 123 29 is_stmt 0 view .LVU309
 1181 0036 7368     		ldr	r3, [r6, #4]
 123:Core/Src/main.c **** 
 1182              		.loc 1 123 24 view .LVU310
 1183 0038 DFF8DC90 		ldr	r9, .L66+48
 1184 003c C9F80030 		str	r3, [r9]
 126:Core/Src/main.c ****           //checksum_array[i] = calculate_mandelbrot_float(size_array[i], size_array[i], MAX_ITER);
 1185              		.loc 1 126 11 is_stmt 1 view .LVU311
 126:Core/Src/main.c ****           //checksum_array[i] = calculate_mandelbrot_float(size_array[i], size_array[i], MAX_ITER);
 1186              		.loc 1 126 31 is_stmt 0 view .LVU312
 1187 0040 DFF8D880 		ldr	r8, .L66+52
 1188 0044 58F82400 		ldr	r0, [r8, r4, lsl #2]
 1189 0048 6422     		movs	r2, #100
 1190 004a 0146     		mov	r1, r0
 1191 004c FFF7FEFF 		bl	calculate_mandelbrot_double
 1192              	.LVL99:
 126:Core/Src/main.c ****           //checksum_array[i] = calculate_mandelbrot_float(size_array[i], size_array[i], MAX_ITER);
 1193              		.loc 1 126 29 discriminator 1 view .LVU313
 1194 0050 294B     		ldr	r3, .L66+16
 1195 0052 03EBC403 		add	r3, r3, r4, lsl #3
 1196 0056 C3E90001 		strd	r0, [r3]
 129:Core/Src/main.c ****           execution_time_array[i] = end_time - start_time;
 1197              		.loc 1 129 11 is_stmt 1 view .LVU314
 129:Core/Src/main.c ****           execution_time_array[i] = end_time - start_time;
 1198              		.loc 1 129 22 is_stmt 0 view .LVU315
 1199 005a FFF7FEFF 		bl	HAL_GetTick
 1200              	.LVL100:
 129:Core/Src/main.c ****           execution_time_array[i] = end_time - start_time;
 1201              		.loc 1 129 20 discriminator 1 view .LVU316
 1202 005e 274B     		ldr	r3, .L66+20
 1203 0060 1860     		str	r0, [r3]
ARM GAS  C:\Users\User\AppData\Local\Temp\ccp9VHyh.s 			page 48


 130:Core/Src/main.c **** 
 1204              		.loc 1 130 11 is_stmt 1 view .LVU317
 130:Core/Src/main.c **** 
 1205              		.loc 1 130 46 is_stmt 0 view .LVU318
 1206 0062 DAF80030 		ldr	r3, [r10]
 1207 0066 C01A     		subs	r0, r0, r3
 130:Core/Src/main.c **** 
 1208              		.loc 1 130 35 view .LVU319
 1209 0068 254B     		ldr	r3, .L66+24
 1210 006a 43F82400 		str	r0, [r3, r4, lsl #2]
 132:Core/Src/main.c ****           CPU_cycles_array[i] = end_cycles - start_cycles;
 1211              		.loc 1 132 11 is_stmt 1 view .LVU320
 132:Core/Src/main.c ****           CPU_cycles_array[i] = end_cycles - start_cycles;
 1212              		.loc 1 132 27 is_stmt 0 view .LVU321
 1213 006e 7068     		ldr	r0, [r6, #4]
 132:Core/Src/main.c ****           CPU_cycles_array[i] = end_cycles - start_cycles;
 1214              		.loc 1 132 22 view .LVU322
 1215 0070 244B     		ldr	r3, .L66+28
 1216 0072 1860     		str	r0, [r3]
 133:Core/Src/main.c ****           CPU_time_array[i] = CPU_cycles_array[i] / (120*(1e6));
 1217              		.loc 1 133 11 is_stmt 1 view .LVU323
 133:Core/Src/main.c ****           CPU_time_array[i] = CPU_cycles_array[i] / (120*(1e6));
 1218              		.loc 1 133 44 is_stmt 0 view .LVU324
 1219 0074 D9F80030 		ldr	r3, [r9]
 1220 0078 C01A     		subs	r0, r0, r3
 133:Core/Src/main.c ****           CPU_time_array[i] = CPU_cycles_array[i] / (120*(1e6));
 1221              		.loc 1 133 31 view .LVU325
 1222 007a 234B     		ldr	r3, .L66+32
 1223 007c 43F82400 		str	r0, [r3, r4, lsl #2]
 134:Core/Src/main.c **** 
 1224              		.loc 1 134 11 is_stmt 1 view .LVU326
 134:Core/Src/main.c **** 
 1225              		.loc 1 134 51 is_stmt 0 view .LVU327
 1226 0080 FFF7FEFF 		bl	__aeabi_ui2d
 1227              	.LVL101:
 1228 0084 18A3     		adr	r3, .L66
 1229 0086 D3E90023 		ldrd	r2, [r3]
 1230 008a FFF7FEFF 		bl	__aeabi_ddiv
 1231              	.LVL102:
 1232 008e FFF7FEFF 		bl	__aeabi_d2f
 1233              	.LVL103:
 1234 0092 07EE100A 		vmov	s14, r0
 134:Core/Src/main.c **** 
 1235              		.loc 1 134 29 view .LVU328
 1236 0096 1D4B     		ldr	r3, .L66+36
 1237 0098 03EB8403 		add	r3, r3, r4, lsl #2
 1238 009c 1860     		str	r0, [r3]	@ float
 136:Core/Src/main.c **** 
 1239              		.loc 1 136 11 is_stmt 1 view .LVU329
 136:Core/Src/main.c **** 
 1240              		.loc 1 136 44 is_stmt 0 view .LVU330
 1241 009e 58F82430 		ldr	r3, [r8, r4, lsl #2]
 136:Core/Src/main.c **** 
 1242              		.loc 1 136 47 view .LVU331
 1243 00a2 03FB03F3 		mul	r3, r3, r3
 136:Core/Src/main.c **** 
 1244              		.loc 1 136 63 view .LVU332
ARM GAS  C:\Users\User\AppData\Local\Temp\ccp9VHyh.s 			page 49


 1245 00a6 07EE903A 		vmov	s15, r3	@ int
 1246 00aa F8EEE77A 		vcvt.f32.s32	s15, s15
 1247 00ae C7EE876A 		vdiv.f32	s13, s15, s14
 136:Core/Src/main.c **** 
 1248              		.loc 1 136 31 view .LVU333
 1249 00b2 FCEEE66A 		vcvt.u32.f32	s13, s13
 1250 00b6 164B     		ldr	r3, .L66+40
 1251 00b8 16EE902A 		vmov	r2, s13	@ int
 1252 00bc 43F82420 		str	r2, [r3, r4, lsl #2]
 139:Core/Src/main.c **** 
 1253              		.loc 1 139 11 is_stmt 1 view .LVU334
 1254 00c0 0122     		movs	r2, #1
 1255 00c2 0221     		movs	r1, #2
 1256 00c4 2846     		mov	r0, r5
 1257 00c6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1258              	.LVL104:
 142:Core/Src/main.c **** 
 1259              		.loc 1 142 11 view .LVU335
 1260 00ca 4FF47A70 		mov	r0, #1000
 1261 00ce FFF7FEFF 		bl	HAL_Delay
 1262              	.LVL105:
 145:Core/Src/main.c ****       }
 1263              		.loc 1 145 11 view .LVU336
 1264 00d2 3A46     		mov	r2, r7
 1265 00d4 0321     		movs	r1, #3
 1266 00d6 2846     		mov	r0, r5
 1267 00d8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1268              	.LVL106:
 116:Core/Src/main.c ****           //TODO: Turn on LED 0 to signify the start of the operation
 1269              		.loc 1 116 27 discriminator 3 view .LVU337
 1270 00dc 0134     		adds	r4, r4, #1
 1271              	.LVL107:
 1272              	.L62:
 116:Core/Src/main.c ****           //TODO: Turn on LED 0 to signify the start of the operation
 1273              		.loc 1 116 21 discriminator 1 view .LVU338
 1274 00de 042C     		cmp	r4, #4
 1275 00e0 9ADD     		ble	.L63
 1276              	.L64:
 1277              	.LBE29:
 150:Core/Src/main.c ****   {
 1278              		.loc 1 150 3 view .LVU339
 167:Core/Src/main.c ****   /* USER CODE END 3 */
 1279              		.loc 1 167 3 view .LVU340
 150:Core/Src/main.c ****   {
 1280              		.loc 1 150 9 view .LVU341
 1281 00e2 FEE7     		b	.L64
 1282              	.L67:
 1283 00e4 AFF30080 		.align	3
 1284              	.L66:
 1285 00e8 00000000 		.word	0
 1286 00ec 389C9C41 		.word	1100782648
 1287 00f0 00040240 		.word	1073873920
 1288 00f4 001000E0 		.word	-536866816
 1289 00f8 00000000 		.word	checksum_array
 1290 00fc 00000000 		.word	end_time
 1291 0100 00000000 		.word	execution_time_array
 1292 0104 00000000 		.word	end_cycles
ARM GAS  C:\Users\User\AppData\Local\Temp\ccp9VHyh.s 			page 50


 1293 0108 00000000 		.word	CPU_cycles_array
 1294 010c 00000000 		.word	CPU_time_array
 1295 0110 00000000 		.word	throughput_array
 1296 0114 00000000 		.word	start_time
 1297 0118 00000000 		.word	start_cycles
 1298 011c 00000000 		.word	size_array
 1299              		.cfi_endproc
 1300              	.LFE159:
 1302              		.global	throughput_array
 1303              		.section	.bss.throughput_array,"aw",%nobits
 1304              		.align	2
 1307              	throughput_array:
 1308 0000 00000000 		.space	20
 1308      00000000 
 1308      00000000 
 1308      00000000 
 1308      00000000 
 1309              		.global	CPU_time_array
 1310              		.section	.bss.CPU_time_array,"aw",%nobits
 1311              		.align	2
 1314              	CPU_time_array:
 1315 0000 00000000 		.space	20
 1315      00000000 
 1315      00000000 
 1315      00000000 
 1315      00000000 
 1316              		.global	CPU_cycles_array
 1317              		.section	.bss.CPU_cycles_array,"aw",%nobits
 1318              		.align	2
 1321              	CPU_cycles_array:
 1322 0000 00000000 		.space	20
 1322      00000000 
 1322      00000000 
 1322      00000000 
 1322      00000000 
 1323              		.global	execution_time_array
 1324              		.section	.bss.execution_time_array,"aw",%nobits
 1325              		.align	2
 1328              	execution_time_array:
 1329 0000 00000000 		.space	20
 1329      00000000 
 1329      00000000 
 1329      00000000 
 1329      00000000 
 1330              		.global	checksum_array
 1331              		.section	.bss.checksum_array,"aw",%nobits
 1332              		.align	3
 1335              	checksum_array:
 1336 0000 00000000 		.space	40
 1336      00000000 
 1336      00000000 
 1336      00000000 
 1336      00000000 
 1337              		.global	size_array
 1338              		.section	.data.size_array,"aw"
 1339              		.align	2
 1342              	size_array:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccp9VHyh.s 			page 51


 1343 0000 80000000 		.word	128
 1344 0004 A0000000 		.word	160
 1345 0008 C0000000 		.word	192
 1346 000c E0000000 		.word	224
 1347 0010 00010000 		.word	256
 1348              		.global	init_height
 1349              		.section	.data.init_height,"aw"
 1350              		.align	2
 1353              	init_height:
 1354 0000 80000000 		.word	128
 1355              		.global	init_width
 1356              		.section	.data.init_width,"aw"
 1357              		.align	2
 1360              	init_width:
 1361 0000 80000000 		.word	128
 1362              		.global	throughput
 1363              		.section	.bss.throughput,"aw",%nobits
 1364              		.align	2
 1367              	throughput:
 1368 0000 00000000 		.space	4
 1369              		.global	CPU_cycles
 1370              		.section	.bss.CPU_cycles,"aw",%nobits
 1371              		.align	2
 1374              	CPU_cycles:
 1375 0000 00000000 		.space	4
 1376              		.global	end_cycles
 1377              		.section	.bss.end_cycles,"aw",%nobits
 1378              		.align	2
 1381              	end_cycles:
 1382 0000 00000000 		.space	4
 1383              		.global	start_cycles
 1384              		.section	.bss.start_cycles,"aw",%nobits
 1385              		.align	2
 1388              	start_cycles:
 1389 0000 00000000 		.space	4
 1390              		.global	checksum
 1391              		.section	.bss.checksum,"aw",%nobits
 1392              		.align	3
 1395              	checksum:
 1396 0000 00000000 		.space	8
 1396      00000000 
 1397              		.global	execution_time
 1398              		.section	.bss.execution_time,"aw",%nobits
 1399              		.align	2
 1402              	execution_time:
 1403 0000 00000000 		.space	4
 1404              		.global	end_time
 1405              		.section	.bss.end_time,"aw",%nobits
 1406              		.align	2
 1409              	end_time:
 1410 0000 00000000 		.space	4
 1411              		.global	start_time
 1412              		.section	.bss.start_time,"aw",%nobits
 1413              		.align	2
 1416              	start_time:
 1417 0000 00000000 		.space	4
 1418              		.text
ARM GAS  C:\Users\User\AppData\Local\Temp\ccp9VHyh.s 			page 52


 1419              	.Letext0:
 1420              		.file 3 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1421              		.file 4 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1422              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 1423              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 1424              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1425              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1426              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1427              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1428              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1429              		.file 12 "<built-in>"
ARM GAS  C:\Users\User\AppData\Local\Temp\ccp9VHyh.s 			page 53


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\User\AppData\Local\Temp\ccp9VHyh.s:21     .text.MX_GPIO_Init:00000000 $t
C:\Users\User\AppData\Local\Temp\ccp9VHyh.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\User\AppData\Local\Temp\ccp9VHyh.s:133    .text.MX_GPIO_Init:00000074 $d
C:\Users\User\AppData\Local\Temp\ccp9VHyh.s:139    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 $t
C:\Users\User\AppData\Local\Temp\ccp9VHyh.s:145    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 calculate_mandelbrot_fixed_point_arithmetic
C:\Users\User\AppData\Local\Temp\ccp9VHyh.s:337    .text.calculate_mandelbrot_fixed_point_arithmetic:000000b4 $d
C:\Users\User\AppData\Local\Temp\ccp9VHyh.s:1395   .bss.checksum:00000000 checksum
C:\Users\User\AppData\Local\Temp\ccp9VHyh.s:350    .text.calculate_mandelbrot_double:00000000 $t
C:\Users\User\AppData\Local\Temp\ccp9VHyh.s:356    .text.calculate_mandelbrot_double:00000000 calculate_mandelbrot_double
C:\Users\User\AppData\Local\Temp\ccp9VHyh.s:629    .text.calculate_mandelbrot_double:00000154 $d
C:\Users\User\AppData\Local\Temp\ccp9VHyh.s:640    .text.calculate_mandelbrot_float:00000000 $t
C:\Users\User\AppData\Local\Temp\ccp9VHyh.s:646    .text.calculate_mandelbrot_float:00000000 calculate_mandelbrot_float
C:\Users\User\AppData\Local\Temp\ccp9VHyh.s:862    .text.calculate_mandelbrot_float:000000fc $d
C:\Users\User\AppData\Local\Temp\ccp9VHyh.s:872    .text.DWT_Init:00000000 $t
C:\Users\User\AppData\Local\Temp\ccp9VHyh.s:878    .text.DWT_Init:00000000 DWT_Init
C:\Users\User\AppData\Local\Temp\ccp9VHyh.s:908    .text.DWT_Init:00000020 $d
C:\Users\User\AppData\Local\Temp\ccp9VHyh.s:914    .text.Error_Handler:00000000 $t
C:\Users\User\AppData\Local\Temp\ccp9VHyh.s:920    .text.Error_Handler:00000000 Error_Handler
C:\Users\User\AppData\Local\Temp\ccp9VHyh.s:952    .text.SystemClock_Config:00000000 $t
C:\Users\User\AppData\Local\Temp\ccp9VHyh.s:958    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\User\AppData\Local\Temp\ccp9VHyh.s:1109   .text.SystemClock_Config:000000a4 $d
C:\Users\User\AppData\Local\Temp\ccp9VHyh.s:1116   .text.main:00000000 $t
C:\Users\User\AppData\Local\Temp\ccp9VHyh.s:1122   .text.main:00000000 main
C:\Users\User\AppData\Local\Temp\ccp9VHyh.s:1285   .text.main:000000e8 $d
C:\Users\User\AppData\Local\Temp\ccp9VHyh.s:1335   .bss.checksum_array:00000000 checksum_array
C:\Users\User\AppData\Local\Temp\ccp9VHyh.s:1409   .bss.end_time:00000000 end_time
C:\Users\User\AppData\Local\Temp\ccp9VHyh.s:1328   .bss.execution_time_array:00000000 execution_time_array
C:\Users\User\AppData\Local\Temp\ccp9VHyh.s:1381   .bss.end_cycles:00000000 end_cycles
C:\Users\User\AppData\Local\Temp\ccp9VHyh.s:1321   .bss.CPU_cycles_array:00000000 CPU_cycles_array
C:\Users\User\AppData\Local\Temp\ccp9VHyh.s:1314   .bss.CPU_time_array:00000000 CPU_time_array
C:\Users\User\AppData\Local\Temp\ccp9VHyh.s:1307   .bss.throughput_array:00000000 throughput_array
C:\Users\User\AppData\Local\Temp\ccp9VHyh.s:1416   .bss.start_time:00000000 start_time
C:\Users\User\AppData\Local\Temp\ccp9VHyh.s:1388   .bss.start_cycles:00000000 start_cycles
C:\Users\User\AppData\Local\Temp\ccp9VHyh.s:1342   .data.size_array:00000000 size_array
C:\Users\User\AppData\Local\Temp\ccp9VHyh.s:1304   .bss.throughput_array:00000000 $d
C:\Users\User\AppData\Local\Temp\ccp9VHyh.s:1311   .bss.CPU_time_array:00000000 $d
C:\Users\User\AppData\Local\Temp\ccp9VHyh.s:1318   .bss.CPU_cycles_array:00000000 $d
C:\Users\User\AppData\Local\Temp\ccp9VHyh.s:1325   .bss.execution_time_array:00000000 $d
C:\Users\User\AppData\Local\Temp\ccp9VHyh.s:1332   .bss.checksum_array:00000000 $d
C:\Users\User\AppData\Local\Temp\ccp9VHyh.s:1339   .data.size_array:00000000 $d
C:\Users\User\AppData\Local\Temp\ccp9VHyh.s:1353   .data.init_height:00000000 init_height
C:\Users\User\AppData\Local\Temp\ccp9VHyh.s:1350   .data.init_height:00000000 $d
C:\Users\User\AppData\Local\Temp\ccp9VHyh.s:1360   .data.init_width:00000000 init_width
C:\Users\User\AppData\Local\Temp\ccp9VHyh.s:1357   .data.init_width:00000000 $d
C:\Users\User\AppData\Local\Temp\ccp9VHyh.s:1367   .bss.throughput:00000000 throughput
C:\Users\User\AppData\Local\Temp\ccp9VHyh.s:1364   .bss.throughput:00000000 $d
C:\Users\User\AppData\Local\Temp\ccp9VHyh.s:1374   .bss.CPU_cycles:00000000 CPU_cycles
C:\Users\User\AppData\Local\Temp\ccp9VHyh.s:1371   .bss.CPU_cycles:00000000 $d
C:\Users\User\AppData\Local\Temp\ccp9VHyh.s:1378   .bss.end_cycles:00000000 $d
C:\Users\User\AppData\Local\Temp\ccp9VHyh.s:1385   .bss.start_cycles:00000000 $d
C:\Users\User\AppData\Local\Temp\ccp9VHyh.s:1392   .bss.checksum:00000000 $d
C:\Users\User\AppData\Local\Temp\ccp9VHyh.s:1402   .bss.execution_time:00000000 execution_time
C:\Users\User\AppData\Local\Temp\ccp9VHyh.s:1399   .bss.execution_time:00000000 $d
C:\Users\User\AppData\Local\Temp\ccp9VHyh.s:1406   .bss.end_time:00000000 $d
C:\Users\User\AppData\Local\Temp\ccp9VHyh.s:1413   .bss.start_time:00000000 $d
ARM GAS  C:\Users\User\AppData\Local\Temp\ccp9VHyh.s 			page 54



UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
__aeabi_i2d
__aeabi_ddiv
__aeabi_dmul
__aeabi_dsub
__aeabi_dadd
__aeabi_dcmple
__aeabi_f2d
__aeabi_d2f
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
__aeabi_ui2d
HAL_Init
HAL_GetTick
HAL_Delay
