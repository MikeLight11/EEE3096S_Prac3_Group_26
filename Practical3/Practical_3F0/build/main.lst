ARM GAS  C:\Users\User\AppData\Local\Temp\cc4VAsDi.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB67:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include <stdio.h>
  22:Core/Src/main.c **** #include <sys/time.h>
  23:Core/Src/main.c **** #include <time.h>
  24:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* USER CODE END Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  31:Core/Src/main.c **** #define MAX_ITER 250
  32:Core/Src/main.c **** /* USER CODE END PTD */
  33:Core/Src/main.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\cc4VAsDi.s 			page 2


  34:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* USER CODE END PD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE BEGIN PV */
  47:Core/Src/main.c **** //TODO: Define variables you think you might need
  48:Core/Src/main.c **** uint32_t start_time;       // Clock time at start of operation
  49:Core/Src/main.c **** uint32_t end_time;         // Clock time at end of operation
  50:Core/Src/main.c **** uint32_t execution_time;   // Difference between start and end time
  51:Core/Src/main.c **** uint64_t checksum;         // Sum returned by Mandelbrot function
  52:Core/Src/main.c **** uint32_t start_cycles;     // Cycles at start of operation
  53:Core/Src/main.c **** uint32_t end_cycles;       // Cycles at end of operation
  54:Core/Src/main.c **** uint32_t CPU_cycles;       // Difference between start and end cycles
  55:Core/Src/main.c **** uint32_t throughput;       // Pixel throughput
  56:Core/Src/main.c **** int init_width = 128;            // Initial height of 2D plane
  57:Core/Src/main.c **** int init_height = 128;           // Initial width of 2D plane
  58:Core/Src/main.c **** int size_array[] = {128, 160, 192, 224, 256};
  59:Core/Src/main.c **** uint64_t checksum_array[5] = {0}; // Array to hold checksums for different sizes
  60:Core/Src/main.c **** uint32_t execution_time_array[5] = {0}; // Array to hold execution times for different sizes
  61:Core/Src/main.c **** uint32_t CPU_cycles_array[5]={0};
  62:Core/Src/main.c **** float CPU_time_array[5]={0};
  63:Core/Src/main.c **** uint32_t throughput_array[5]={0};
  64:Core/Src/main.c **** // - Performance timing variables (e.g execution time, throughput, pixels per second, clock cycles)
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* USER CODE END PV */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  69:Core/Src/main.c **** void SystemClock_Config(void);
  70:Core/Src/main.c **** static void MX_GPIO_Init(void);
  71:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  72:Core/Src/main.c **** //TODO: Define any function prototypes you might need such as the calculate Mandelbrot function amo
  73:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations);
  74:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations);
  75:Core/Src/main.c **** void Timer_Init(void);
  76:Core/Src/main.c **** /* USER CODE END PFP */
  77:Core/Src/main.c **** 
  78:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  79:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c **** /* USER CODE END 0 */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** /**
  84:Core/Src/main.c ****   * @brief  The application entry point.
  85:Core/Src/main.c ****   * @retval int
  86:Core/Src/main.c ****   */
  87:Core/Src/main.c **** int main(void)
  88:Core/Src/main.c **** {
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
ARM GAS  C:\Users\User\AppData\Local\Temp\cc4VAsDi.s 			page 3


  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* USER CODE END 1 */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  97:Core/Src/main.c ****   HAL_Init();
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* USER CODE END Init */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* Configure the system clock */
 104:Core/Src/main.c ****   SystemClock_Config();
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* USER CODE END SysInit */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* Initialize all configured peripherals */
 111:Core/Src/main.c ****   MX_GPIO_Init();
 112:Core/Src/main.c ****   TIM2_Init();
 113:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* USER CODE END 2 */
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   for (int i = 0; i < 5; i++) {
 118:Core/Src/main.c ****             //TODO: Turn on LED 0 to signify the start of the operation
 119:Core/Src/main.c ****             HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****             start_time = HAL_GetTick();
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****             TIM2->CNT = 0;  // Reset counter
 124:Core/Src/main.c ****             start_cycles = TIM2->CNT;
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****             checksum_array[i] = calculate_mandelbrot_fixed_point_arithmetic(size_array[i], size_arr
 127:Core/Src/main.c ****             //checksum_array[i] = calculate_mandelbrot_double(size_array[i], size_array[i], MAX_ITE
 128:Core/Src/main.c ****             end_time = HAL_GetTick();
 129:Core/Src/main.c ****             execution_time_array[i] = end_time - start_time;
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****             end_cycles = TIM2->CNT;
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****             CPU_cycles_array[i] = end_cycles - start_cycles;
 134:Core/Src/main.c ****             CPU_time_array[i] = CPU_cycles_array[i] / (48*(1e6));
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****             throughput_array[i] = (size_array[i]*size_array[i]) / CPU_time_array[i];
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****             //TODO: Turn on LED 1 to signify the end of the operation
 139:Core/Src/main.c ****             HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
 140:Core/Src/main.c **** 
 141:Core/Src/main.c ****             //TODO: Hold the LEDs on for a 1s delay
 142:Core/Src/main.c ****             HAL_Delay(1000);
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****             //TODO: Turn off the LEDs
 145:Core/Src/main.c ****             HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1, GPIO_PIN_RESET);
 146:Core/Src/main.c ****         }
 147:Core/Src/main.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\cc4VAsDi.s 			page 4


 148:Core/Src/main.c ****   /* Infinite loop */
 149:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 150:Core/Src/main.c ****   while (1)
 151:Core/Src/main.c ****   {
 152:Core/Src/main.c ****     /* USER CODE END WHILE */
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 155:Core/Src/main.c **** 	  //TODO: Visual indicator: Turn on LED0 to signal processing start
 156:Core/Src/main.c **** 
 157:Core/Src/main.c **** 
 158:Core/Src/main.c **** 	  //TODO: Benchmark and Profile Performance
 159:Core/Src/main.c **** 
 160:Core/Src/main.c **** 
 161:Core/Src/main.c **** 	  //TODO: Visual indicator: Turn on LED1 to signal processing start
 162:Core/Src/main.c **** 
 163:Core/Src/main.c **** 
 164:Core/Src/main.c **** 	  //TODO: Keep the LEDs ON for 2s
 165:Core/Src/main.c **** 
 166:Core/Src/main.c **** 	  // TODO: Turn OFF LEDs
 167:Core/Src/main.c **** 
 168:Core/Src/main.c **** 
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****   }
 171:Core/Src/main.c ****   /* USER CODE END 3 */
 172:Core/Src/main.c **** }
 173:Core/Src/main.c **** 
 174:Core/Src/main.c **** /**
 175:Core/Src/main.c ****   * @brief System Clock Configuration
 176:Core/Src/main.c ****   * @retval None
 177:Core/Src/main.c ****   */
 178:Core/Src/main.c **** void SystemClock_Config(void)
 179:Core/Src/main.c **** {
 180:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 181:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 182:Core/Src/main.c **** 
 183:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 184:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 185:Core/Src/main.c ****   */
 186:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 187:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 188:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 189:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 190:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 191:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
 192:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 193:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 194:Core/Src/main.c ****   {
 195:Core/Src/main.c ****     Error_Handler();
 196:Core/Src/main.c ****   }
 197:Core/Src/main.c **** 
 198:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 199:Core/Src/main.c ****   */
 200:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 201:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 202:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 203:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 204:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
ARM GAS  C:\Users\User\AppData\Local\Temp\cc4VAsDi.s 			page 5


 205:Core/Src/main.c **** 
 206:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 207:Core/Src/main.c ****   {
 208:Core/Src/main.c ****     Error_Handler();
 209:Core/Src/main.c ****   }
 210:Core/Src/main.c **** }
 211:Core/Src/main.c **** 
 212:Core/Src/main.c **** /**
 213:Core/Src/main.c ****   * @brief GPIO Initialization Function
 214:Core/Src/main.c ****   * @param None
 215:Core/Src/main.c ****   * @retval None
 216:Core/Src/main.c ****   */
 217:Core/Src/main.c **** static void MX_GPIO_Init(void)
 218:Core/Src/main.c **** {
  26              		.loc 1 218 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 10B5     		push	{r4, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 4, -8
  34              		.cfi_offset 14, -4
  35 0002 88B0     		sub	sp, sp, #32
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 40
 219:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  38              		.loc 1 219 3 view .LVU1
  39              		.loc 1 219 20 is_stmt 0 view .LVU2
  40 0004 1422     		movs	r2, #20
  41 0006 0021     		movs	r1, #0
  42 0008 03A8     		add	r0, sp, #12
  43 000a FFF7FEFF 		bl	memset
  44              	.LVL0:
 220:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 221:Core/Src/main.c **** 
 222:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 223:Core/Src/main.c **** 
 224:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 225:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  45              		.loc 1 225 3 is_stmt 1 view .LVU3
  46              	.LBB4:
  47              		.loc 1 225 3 view .LVU4
  48              		.loc 1 225 3 view .LVU5
  49 000e 174B     		ldr	r3, .L2
  50 0010 5A69     		ldr	r2, [r3, #20]
  51 0012 8021     		movs	r1, #128
  52 0014 C903     		lsls	r1, r1, #15
  53 0016 0A43     		orrs	r2, r1
  54 0018 5A61     		str	r2, [r3, #20]
  55              		.loc 1 225 3 view .LVU6
  56 001a 5A69     		ldr	r2, [r3, #20]
  57 001c 0A40     		ands	r2, r1
  58 001e 0092     		str	r2, [sp]
  59              		.loc 1 225 3 view .LVU7
  60 0020 009A     		ldr	r2, [sp]
  61              	.LBE4:
ARM GAS  C:\Users\User\AppData\Local\Temp\cc4VAsDi.s 			page 6


  62              		.loc 1 225 3 view .LVU8
 226:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  63              		.loc 1 226 3 view .LVU9
  64              	.LBB5:
  65              		.loc 1 226 3 view .LVU10
  66              		.loc 1 226 3 view .LVU11
  67 0022 5A69     		ldr	r2, [r3, #20]
  68 0024 8021     		movs	r1, #128
  69 0026 C902     		lsls	r1, r1, #11
  70 0028 0A43     		orrs	r2, r1
  71 002a 5A61     		str	r2, [r3, #20]
  72              		.loc 1 226 3 view .LVU12
  73 002c 5A69     		ldr	r2, [r3, #20]
  74 002e 0A40     		ands	r2, r1
  75 0030 0192     		str	r2, [sp, #4]
  76              		.loc 1 226 3 view .LVU13
  77 0032 019A     		ldr	r2, [sp, #4]
  78              	.LBE5:
  79              		.loc 1 226 3 view .LVU14
 227:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  80              		.loc 1 227 3 view .LVU15
  81              	.LBB6:
  82              		.loc 1 227 3 view .LVU16
  83              		.loc 1 227 3 view .LVU17
  84 0034 5A69     		ldr	r2, [r3, #20]
  85 0036 8021     		movs	r1, #128
  86 0038 8902     		lsls	r1, r1, #10
  87 003a 0A43     		orrs	r2, r1
  88 003c 5A61     		str	r2, [r3, #20]
  89              		.loc 1 227 3 view .LVU18
  90 003e 5B69     		ldr	r3, [r3, #20]
  91 0040 0B40     		ands	r3, r1
  92 0042 0293     		str	r3, [sp, #8]
  93              		.loc 1 227 3 view .LVU19
  94 0044 029B     		ldr	r3, [sp, #8]
  95              	.LBE6:
  96              		.loc 1 227 3 view .LVU20
 228:Core/Src/main.c **** 
 229:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 230:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
  97              		.loc 1 230 3 view .LVU21
  98 0046 0A4C     		ldr	r4, .L2+4
  99 0048 0022     		movs	r2, #0
 100 004a FF21     		movs	r1, #255
 101 004c 2000     		movs	r0, r4
 102 004e FFF7FEFF 		bl	HAL_GPIO_WritePin
 103              	.LVL1:
 231:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7, GPIO_PIN_RESET);
 232:Core/Src/main.c **** 
 233:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 PB2 PB3
 234:Core/Src/main.c ****                            PB4 PB5 PB6 PB7 */
 235:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 104              		.loc 1 235 3 view .LVU22
 105              		.loc 1 235 23 is_stmt 0 view .LVU23
 106 0052 FF23     		movs	r3, #255
 107 0054 0393     		str	r3, [sp, #12]
 236:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
ARM GAS  C:\Users\User\AppData\Local\Temp\cc4VAsDi.s 			page 7


 237:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 108              		.loc 1 237 3 is_stmt 1 view .LVU24
 109              		.loc 1 237 24 is_stmt 0 view .LVU25
 110 0056 FE3B     		subs	r3, r3, #254
 111 0058 0493     		str	r3, [sp, #16]
 238:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 112              		.loc 1 238 3 is_stmt 1 view .LVU26
 113              		.loc 1 238 24 is_stmt 0 view .LVU27
 114 005a 0023     		movs	r3, #0
 115 005c 0593     		str	r3, [sp, #20]
 239:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 116              		.loc 1 239 3 is_stmt 1 view .LVU28
 117              		.loc 1 239 25 is_stmt 0 view .LVU29
 118 005e 0693     		str	r3, [sp, #24]
 240:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 119              		.loc 1 240 3 is_stmt 1 view .LVU30
 120 0060 03A9     		add	r1, sp, #12
 121 0062 2000     		movs	r0, r4
 122 0064 FFF7FEFF 		bl	HAL_GPIO_Init
 123              	.LVL2:
 241:Core/Src/main.c **** 
 242:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 243:Core/Src/main.c **** 
 244:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 245:Core/Src/main.c **** }
 124              		.loc 1 245 1 is_stmt 0 view .LVU31
 125 0068 08B0     		add	sp, sp, #32
 126              		@ sp needed
 127 006a 10BD     		pop	{r4, pc}
 128              	.L3:
 129              		.align	2
 130              	.L2:
 131 006c 00100240 		.word	1073876992
 132 0070 00040048 		.word	1207960576
 133              		.cfi_endproc
 134              	.LFE67:
 136              		.global	__aeabi_idiv
 137              		.section	.text.calculate_mandelbrot_fixed_point_arithmetic,"ax",%progbits
 138              		.align	1
 139              		.global	calculate_mandelbrot_fixed_point_arithmetic
 140              		.syntax unified
 141              		.code	16
 142              		.thumb_func
 144              	calculate_mandelbrot_fixed_point_arithmetic:
 145              	.LVL3:
 146              	.LFB68:
 246:Core/Src/main.c **** 
 247:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 248:Core/Src/main.c **** //TODO: Function signatures you defined previously , implement them here
 249:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations){
 147              		.loc 1 249 96 is_stmt 1 view -0
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 24
 150              		@ frame_needed = 0, uses_anonymous_args = 0
 151              		.loc 1 249 96 is_stmt 0 view .LVU33
 152 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 153              	.LCFI2:
ARM GAS  C:\Users\User\AppData\Local\Temp\cc4VAsDi.s 			page 8


 154              		.cfi_def_cfa_offset 20
 155              		.cfi_offset 4, -20
 156              		.cfi_offset 5, -16
 157              		.cfi_offset 6, -12
 158              		.cfi_offset 7, -8
 159              		.cfi_offset 14, -4
 160 0002 DE46     		mov	lr, fp
 161 0004 5746     		mov	r7, r10
 162 0006 4E46     		mov	r6, r9
 163 0008 4546     		mov	r5, r8
 164 000a E0B5     		push	{r5, r6, r7, lr}
 165              	.LCFI3:
 166              		.cfi_def_cfa_offset 36
 167              		.cfi_offset 8, -36
 168              		.cfi_offset 9, -32
 169              		.cfi_offset 10, -28
 170              		.cfi_offset 11, -24
 171 000c 87B0     		sub	sp, sp, #28
 172              	.LCFI4:
 173              		.cfi_def_cfa_offset 64
 174 000e 0390     		str	r0, [sp, #12]
 175 0010 0591     		str	r1, [sp, #20]
 176 0012 9246     		mov	r10, r2
 250:Core/Src/main.c ****     const int SCALE = 1000;
 177              		.loc 1 250 5 is_stmt 1 view .LVU34
 178              	.LVL4:
 251:Core/Src/main.c ****     const int THREE_FIVE = 3500;
 179              		.loc 1 251 5 view .LVU35
 252:Core/Src/main.c ****     const int TWO = 2000;
 180              		.loc 1 252 5 view .LVU36
 253:Core/Src/main.c ****     const int TWO_FIVE = 2500;
 181              		.loc 1 253 5 view .LVU37
 254:Core/Src/main.c ****     const int ONE = 1000;
 182              		.loc 1 254 5 view .LVU38
 255:Core/Src/main.c ****     const int FOUR = 4000;
 183              		.loc 1 255 5 view .LVU39
 256:Core/Src/main.c **** 
 257:Core/Src/main.c ****     checksum = 0;
 184              		.loc 1 257 5 view .LVU40
 185              		.loc 1 257 14 is_stmt 0 view .LVU41
 186 0014 324B     		ldr	r3, .L14
 187 0016 0020     		movs	r0, #0
 188              	.LVL5:
 189              		.loc 1 257 14 view .LVU42
 190 0018 0021     		movs	r1, #0
 191              	.LVL6:
 192              		.loc 1 257 14 view .LVU43
 193 001a 1860     		str	r0, [r3]
 194 001c 5960     		str	r1, [r3, #4]
 258:Core/Src/main.c ****     for (int32_t y = 0; y < height; y++) {
 195              		.loc 1 258 5 is_stmt 1 view .LVU44
 196              	.LBB7:
 197              		.loc 1 258 10 view .LVU45
 198              	.LVL7:
 199              		.loc 1 258 18 is_stmt 0 view .LVU46
 200 001e 0023     		movs	r3, #0
 201 0020 0493     		str	r3, [sp, #16]
ARM GAS  C:\Users\User\AppData\Local\Temp\cc4VAsDi.s 			page 9


 202              		.loc 1 258 5 view .LVU47
 203 0022 4BE0     		b	.L5
 204              	.LVL8:
 205              	.L8:
 206              	.LBB8:
 207              	.LBB9:
 208              	.LBB10:
 259:Core/Src/main.c ****         for (int32_t x = 0; x < width; x++) {
 260:Core/Src/main.c ****             int32_t x0 = ((int32_t)x * THREE_FIVE) / width - TWO_FIVE;
 261:Core/Src/main.c ****             int32_t y0 = ((int32_t)y * TWO) / height - ONE;
 262:Core/Src/main.c ****             int32_t xi = 0;
 263:Core/Src/main.c ****             int32_t yi = 0;
 264:Core/Src/main.c ****             int32_t iteration = 0;
 265:Core/Src/main.c ****             while (((((int32_t)xi * xi + (int32_t)yi * yi) / SCALE) <= FOUR) && (iteration < max_it
 266:Core/Src/main.c ****                 int32_t xi_temp = ((int32_t)xi * xi - (int32_t)yi * yi) / SCALE + x0;
 209              		.loc 1 266 17 is_stmt 1 view .LVU48
 210              		.loc 1 266 53 is_stmt 0 view .LVU49
 211 0024 C01A     		subs	r0, r0, r3
 212              		.loc 1 266 73 view .LVU50
 213 0026 FA21     		movs	r1, #250
 214 0028 8900     		lsls	r1, r1, #2
 215 002a FFF7FEFF 		bl	__aeabi_idiv
 216              	.LVL9:
 217              		.loc 1 266 25 view .LVU51
 218 002e 4844     		add	r0, r0, r9
 219 0030 8246     		mov	r10, r0
 220              	.LVL10:
 267:Core/Src/main.c ****                 int32_t yi_temp = ((int32_t)2 * xi * yi) / SCALE + y0;
 221              		.loc 1 267 17 is_stmt 1 view .LVU52
 222              		.loc 1 267 52 is_stmt 0 view .LVU53
 223 0032 2800     		movs	r0, r5
 224              	.LVL11:
 225              		.loc 1 267 52 view .LVU54
 226 0034 6043     		muls	r0, r4
 227              		.loc 1 267 58 view .LVU55
 228 0036 FA21     		movs	r1, #250
 229 0038 4900     		lsls	r1, r1, #1
 230 003a FFF7FEFF 		bl	__aeabi_idiv
 231              	.LVL12:
 232              		.loc 1 267 25 view .LVU56
 233 003e 4044     		add	r0, r0, r8
 234 0040 0500     		movs	r5, r0
 235              	.LVL13:
 268:Core/Src/main.c ****                 xi = xi_temp;
 236              		.loc 1 268 17 is_stmt 1 view .LVU57
 269:Core/Src/main.c ****                 yi = yi_temp;
 237              		.loc 1 269 17 view .LVU58
 270:Core/Src/main.c ****                 iteration++;
 238              		.loc 1 270 17 view .LVU59
 239              		.loc 1 270 26 is_stmt 0 view .LVU60
 240 0042 0137     		adds	r7, r7, #1
 241              	.LVL14:
 268:Core/Src/main.c ****                 xi = xi_temp;
 242              		.loc 1 268 20 view .LVU61
 243 0044 5446     		mov	r4, r10
 244              	.LVL15:
 245              	.L6:
ARM GAS  C:\Users\User\AppData\Local\Temp\cc4VAsDi.s 			page 10


 268:Core/Src/main.c ****                 xi = xi_temp;
 246              		.loc 1 268 20 view .LVU62
 247              	.LBE10:
 265:Core/Src/main.c ****                 int32_t xi_temp = ((int32_t)xi * xi - (int32_t)yi * yi) / SCALE + x0;
 248              		.loc 1 265 78 is_stmt 1 view .LVU63
 265:Core/Src/main.c ****                 int32_t xi_temp = ((int32_t)xi * xi - (int32_t)yi * yi) / SCALE + x0;
 249              		.loc 1 265 35 is_stmt 0 view .LVU64
 250 0046 2000     		movs	r0, r4
 251 0048 6043     		muls	r0, r4
 265:Core/Src/main.c ****                 int32_t xi_temp = ((int32_t)xi * xi - (int32_t)yi * yi) / SCALE + x0;
 252              		.loc 1 265 54 view .LVU65
 253 004a 2B00     		movs	r3, r5
 254 004c 6B43     		muls	r3, r5
 265:Core/Src/main.c ****                 int32_t xi_temp = ((int32_t)xi * xi - (int32_t)yi * yi) / SCALE + x0;
 255              		.loc 1 265 40 view .LVU66
 256 004e C118     		adds	r1, r0, r3
 265:Core/Src/main.c ****                 int32_t xi_temp = ((int32_t)xi * xi - (int32_t)yi * yi) / SCALE + x0;
 257              		.loc 1 265 78 view .LVU67
 258 0050 244A     		ldr	r2, .L14+4
 259 0052 9142     		cmp	r1, r2
 260 0054 01DC     		bgt	.L7
 265:Core/Src/main.c ****                 int32_t xi_temp = ((int32_t)xi * xi - (int32_t)yi * yi) / SCALE + x0;
 261              		.loc 1 265 78 discriminator 1 view .LVU68
 262 0056 B742     		cmp	r7, r6
 263 0058 E4DB     		blt	.L8
 264              	.L7:
 271:Core/Src/main.c ****             }
 272:Core/Src/main.c ****             checksum += iteration;
 265              		.loc 1 272 22 view .LVU69
 266 005a B246     		mov	r10, r6
 267              		.loc 1 272 13 is_stmt 1 view .LVU70
 268              		.loc 1 272 22 is_stmt 0 view .LVU71
 269 005c 2049     		ldr	r1, .L14
 270 005e 0097     		str	r7, [sp]
 271 0060 FB17     		asrs	r3, r7, #31
 272 0062 0193     		str	r3, [sp, #4]
 273 0064 0A68     		ldr	r2, [r1]
 274 0066 4B68     		ldr	r3, [r1, #4]
 275 0068 009C     		ldr	r4, [sp]
 276 006a 019D     		ldr	r5, [sp, #4]
 277              	.LVL16:
 278              		.loc 1 272 22 view .LVU72
 279 006c 1219     		adds	r2, r2, r4
 280 006e 6B41     		adcs	r3, r3, r5
 281 0070 0A60     		str	r2, [r1]
 282 0072 4B60     		str	r3, [r1, #4]
 283              	.LBE9:
 259:Core/Src/main.c ****             int32_t x0 = ((int32_t)x * THREE_FIVE) / width - TWO_FIVE;
 284              		.loc 1 259 41 is_stmt 1 discriminator 2 view .LVU73
 285 0074 0123     		movs	r3, #1
 286 0076 9C46     		mov	ip, r3
 287 0078 E344     		add	fp, fp, ip
 288              	.LVL17:
 289              	.L10:
 259:Core/Src/main.c ****             int32_t x0 = ((int32_t)x * THREE_FIVE) / width - TWO_FIVE;
 290              		.loc 1 259 31 discriminator 1 view .LVU74
 291 007a 039B     		ldr	r3, [sp, #12]
ARM GAS  C:\Users\User\AppData\Local\Temp\cc4VAsDi.s 			page 11


 292 007c 9B45     		cmp	fp, r3
 293 007e 1ADA     		bge	.L12
 294              	.LBB11:
 260:Core/Src/main.c ****             int32_t y0 = ((int32_t)y * TWO) / height - ONE;
 295              		.loc 1 260 13 view .LVU75
 260:Core/Src/main.c ****             int32_t y0 = ((int32_t)y * TWO) / height - ONE;
 296              		.loc 1 260 38 is_stmt 0 view .LVU76
 297 0080 1948     		ldr	r0, .L14+8
 298 0082 5B46     		mov	r3, fp
 299 0084 5843     		muls	r0, r3
 260:Core/Src/main.c ****             int32_t y0 = ((int32_t)y * TWO) / height - ONE;
 300              		.loc 1 260 52 view .LVU77
 301 0086 0399     		ldr	r1, [sp, #12]
 302 0088 FFF7FEFF 		bl	__aeabi_idiv
 303              	.LVL18:
 260:Core/Src/main.c ****             int32_t y0 = ((int32_t)y * TWO) / height - ONE;
 304              		.loc 1 260 21 view .LVU78
 305 008c 174B     		ldr	r3, .L14+12
 306 008e 9946     		mov	r9, r3
 307 0090 8144     		add	r9, r9, r0
 308              	.LVL19:
 261:Core/Src/main.c ****             int32_t xi = 0;
 309              		.loc 1 261 13 is_stmt 1 view .LVU79
 261:Core/Src/main.c ****             int32_t xi = 0;
 310              		.loc 1 261 38 is_stmt 0 view .LVU80
 311 0092 049B     		ldr	r3, [sp, #16]
 312 0094 5801     		lsls	r0, r3, #5
 313 0096 C01A     		subs	r0, r0, r3
 314 0098 8000     		lsls	r0, r0, #2
 315 009a 9C46     		mov	ip, r3
 316 009c 6044     		add	r0, r0, ip
 317 009e 0001     		lsls	r0, r0, #4
 261:Core/Src/main.c ****             int32_t xi = 0;
 318              		.loc 1 261 45 view .LVU81
 319 00a0 0599     		ldr	r1, [sp, #20]
 320 00a2 FFF7FEFF 		bl	__aeabi_idiv
 321              	.LVL20:
 261:Core/Src/main.c ****             int32_t xi = 0;
 322              		.loc 1 261 21 view .LVU82
 323 00a6 124B     		ldr	r3, .L14+16
 324 00a8 9846     		mov	r8, r3
 325 00aa 8044     		add	r8, r8, r0
 326              	.LVL21:
 262:Core/Src/main.c ****             int32_t yi = 0;
 327              		.loc 1 262 13 is_stmt 1 view .LVU83
 263:Core/Src/main.c ****             int32_t iteration = 0;
 328              		.loc 1 263 13 view .LVU84
 264:Core/Src/main.c ****             while (((((int32_t)xi * xi + (int32_t)yi * yi) / SCALE) <= FOUR) && (iteration < max_it
 329              		.loc 1 264 13 view .LVU85
 265:Core/Src/main.c ****                 int32_t xi_temp = ((int32_t)xi * xi - (int32_t)yi * yi) / SCALE + x0;
 330              		.loc 1 265 13 view .LVU86
 264:Core/Src/main.c ****             while (((((int32_t)xi * xi + (int32_t)yi * yi) / SCALE) <= FOUR) && (iteration < max_it
 331              		.loc 1 264 21 is_stmt 0 view .LVU87
 332 00ac 0027     		movs	r7, #0
 263:Core/Src/main.c ****             int32_t iteration = 0;
 333              		.loc 1 263 21 view .LVU88
 334 00ae 0025     		movs	r5, #0
ARM GAS  C:\Users\User\AppData\Local\Temp\cc4VAsDi.s 			page 12


 262:Core/Src/main.c ****             int32_t yi = 0;
 335              		.loc 1 262 21 view .LVU89
 336 00b0 0024     		movs	r4, #0
 337 00b2 5646     		mov	r6, r10
 265:Core/Src/main.c ****                 int32_t xi_temp = ((int32_t)xi * xi - (int32_t)yi * yi) / SCALE + x0;
 338              		.loc 1 265 19 view .LVU90
 339 00b4 C7E7     		b	.L6
 340              	.LVL22:
 341              	.L12:
 265:Core/Src/main.c ****                 int32_t xi_temp = ((int32_t)xi * xi - (int32_t)yi * yi) / SCALE + x0;
 342              		.loc 1 265 19 view .LVU91
 343              	.LBE11:
 344              	.LBE8:
 258:Core/Src/main.c ****         for (int32_t x = 0; x < width; x++) {
 345              		.loc 1 258 38 is_stmt 1 discriminator 2 view .LVU92
 346 00b6 049B     		ldr	r3, [sp, #16]
 347 00b8 0133     		adds	r3, r3, #1
 348 00ba 0493     		str	r3, [sp, #16]
 349              	.LVL23:
 350              	.L5:
 258:Core/Src/main.c ****         for (int32_t x = 0; x < width; x++) {
 351              		.loc 1 258 27 discriminator 1 view .LVU93
 352 00bc 049B     		ldr	r3, [sp, #16]
 353 00be 059A     		ldr	r2, [sp, #20]
 354 00c0 9342     		cmp	r3, r2
 355 00c2 02DA     		bge	.L13
 356              	.LBB12:
 259:Core/Src/main.c ****             int32_t x0 = ((int32_t)x * THREE_FIVE) / width - TWO_FIVE;
 357              		.loc 1 259 22 is_stmt 0 view .LVU94
 358 00c4 0023     		movs	r3, #0
 359 00c6 9B46     		mov	fp, r3
 360 00c8 D7E7     		b	.L10
 361              	.LVL24:
 362              	.L13:
 259:Core/Src/main.c ****             int32_t x0 = ((int32_t)x * THREE_FIVE) / width - TWO_FIVE;
 363              		.loc 1 259 22 view .LVU95
 364              	.LBE12:
 365              	.LBE7:
 273:Core/Src/main.c ****         }
 274:Core/Src/main.c ****     }
 275:Core/Src/main.c ****     return checksum;
 366              		.loc 1 275 5 is_stmt 1 view .LVU96
 367              		.loc 1 275 12 is_stmt 0 view .LVU97
 368 00ca 054B     		ldr	r3, .L14
 369              	.LVL25:
 370              		.loc 1 275 12 discriminator 1 view .LVU98
 371 00cc 1868     		ldr	r0, [r3]
 372 00ce 5968     		ldr	r1, [r3, #4]
 276:Core/Src/main.c **** }
 373              		.loc 1 276 1 view .LVU99
 374 00d0 07B0     		add	sp, sp, #28
 375              		@ sp needed
 376              	.LVL26:
 377              		.loc 1 276 1 view .LVU100
 378 00d2 F0BC     		pop	{r4, r5, r6, r7}
 379 00d4 BB46     		mov	fp, r7
 380 00d6 B246     		mov	r10, r6
ARM GAS  C:\Users\User\AppData\Local\Temp\cc4VAsDi.s 			page 13


 381 00d8 A946     		mov	r9, r5
 382 00da A046     		mov	r8, r4
 383 00dc F0BD     		pop	{r4, r5, r6, r7, pc}
 384              	.L15:
 385 00de C046     		.align	2
 386              	.L14:
 387 00e0 00000000 		.word	checksum
 388 00e4 E70C3D00 		.word	4000999
 389 00e8 AC0D0000 		.word	3500
 390 00ec 3CF6FFFF 		.word	-2500
 391 00f0 18FCFFFF 		.word	-1000
 392              		.cfi_endproc
 393              	.LFE68:
 395              		.global	__aeabi_i2d
 396              		.global	__aeabi_ddiv
 397              		.global	__aeabi_dmul
 398              		.global	__aeabi_dsub
 399              		.global	__aeabi_dadd
 400              		.global	__aeabi_dcmple
 401              		.section	.text.calculate_mandelbrot_double,"ax",%progbits
 402              		.align	1
 403              		.global	calculate_mandelbrot_double
 404              		.syntax unified
 405              		.code	16
 406              		.thumb_func
 408              	calculate_mandelbrot_double:
 409              	.LVL27:
 410              	.LFB69:
 277:Core/Src/main.c **** 
 278:Core/Src/main.c **** //TODO: Mandelbroat using variable type double
 279:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations){
 411              		.loc 1 279 80 is_stmt 1 view -0
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 56
 414              		@ frame_needed = 0, uses_anonymous_args = 0
 415              		.loc 1 279 80 is_stmt 0 view .LVU102
 416 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 417              	.LCFI5:
 418              		.cfi_def_cfa_offset 20
 419              		.cfi_offset 4, -20
 420              		.cfi_offset 5, -16
 421              		.cfi_offset 6, -12
 422              		.cfi_offset 7, -8
 423              		.cfi_offset 14, -4
 424 0002 DE46     		mov	lr, fp
 425 0004 5746     		mov	r7, r10
 426 0006 4E46     		mov	r6, r9
 427 0008 4546     		mov	r5, r8
 428 000a E0B5     		push	{r5, r6, r7, lr}
 429              	.LCFI6:
 430              		.cfi_def_cfa_offset 36
 431              		.cfi_offset 8, -36
 432              		.cfi_offset 9, -32
 433              		.cfi_offset 10, -28
 434              		.cfi_offset 11, -24
 435 000c 8FB0     		sub	sp, sp, #60
 436              	.LCFI7:
ARM GAS  C:\Users\User\AppData\Local\Temp\cc4VAsDi.s 			page 14


 437              		.cfi_def_cfa_offset 96
 438 000e 0D91     		str	r1, [sp, #52]
 439 0010 9146     		mov	r9, r2
 280:Core/Src/main.c ****     //uint64_t mandelbrot_sum = 0;
 281:Core/Src/main.c ****     //TODO: Complete the function implementation
 282:Core/Src/main.c ****     checksum = 0;
 440              		.loc 1 282 5 is_stmt 1 view .LVU103
 441              		.loc 1 282 14 is_stmt 0 view .LVU104
 442 0012 5749     		ldr	r1, .L28
 443              	.LVL28:
 444              		.loc 1 282 14 view .LVU105
 445 0014 0022     		movs	r2, #0
 446              	.LVL29:
 447              		.loc 1 282 14 view .LVU106
 448 0016 0023     		movs	r3, #0
 449 0018 0A60     		str	r2, [r1]
 450 001a 4B60     		str	r3, [r1, #4]
 283:Core/Src/main.c ****     for (int y = 0; y <= height-1; y++) {
 451              		.loc 1 283 5 is_stmt 1 view .LVU107
 452              	.LBB13:
 453              		.loc 1 283 10 view .LVU108
 454              	.LVL30:
 455              		.loc 1 283 14 is_stmt 0 view .LVU109
 456 001c 0023     		movs	r3, #0
 457 001e 0C93     		str	r3, [sp, #48]
 458 0020 0B90     		str	r0, [sp, #44]
 459              		.loc 1 283 5 view .LVU110
 460 0022 8EE0     		b	.L17
 461              	.LVL31:
 462              	.L21:
 463              	.LBB14:
 464              	.LBB15:
 465              	.LBB16:
 284:Core/Src/main.c ****         for (int x = 0; x <= width-1; x++) {
 285:Core/Src/main.c ****             double x0 = ((double)x/(double)width)*(3.5)-2.5;
 286:Core/Src/main.c ****             double y0 = ((double)y/(double)height)*(2.0)-1.0;
 287:Core/Src/main.c ****             int iteration = 0;
 288:Core/Src/main.c ****             double xi = 0;
 289:Core/Src/main.c ****             double yi = 0;
 290:Core/Src/main.c ****             while ((xi*xi + yi*yi) <= (4) && iteration < max_iterations) {
 291:Core/Src/main.c ****                 double temp = (xi*xi - yi*yi);
 466              		.loc 1 291 17 is_stmt 1 view .LVU111
 467              		.loc 1 291 24 is_stmt 0 view .LVU112
 468 0024 029A     		ldr	r2, [sp, #8]
 469 0026 039B     		ldr	r3, [sp, #12]
 470 0028 0098     		ldr	r0, [sp]
 471 002a 0199     		ldr	r1, [sp, #4]
 472 002c FFF7FEFF 		bl	__aeabi_dsub
 473              	.LVL32:
 474 0030 0090     		str	r0, [sp]
 475 0032 0191     		str	r1, [sp, #4]
 476              	.LVL33:
 292:Core/Src/main.c ****                 yi = (2*xi*yi)+y0;
 477              		.loc 1 292 17 is_stmt 1 view .LVU113
 478              		.loc 1 292 24 is_stmt 0 view .LVU114
 479 0034 3200     		movs	r2, r6
 480 0036 3B00     		movs	r3, r7
ARM GAS  C:\Users\User\AppData\Local\Temp\cc4VAsDi.s 			page 15


 481 0038 3000     		movs	r0, r6
 482              	.LVL34:
 483              		.loc 1 292 24 view .LVU115
 484 003a 3900     		movs	r1, r7
 485 003c FFF7FEFF 		bl	__aeabi_dadd
 486              	.LVL35:
 487              		.loc 1 292 27 view .LVU116
 488 0040 2200     		movs	r2, r4
 489 0042 2B00     		movs	r3, r5
 490 0044 FFF7FEFF 		bl	__aeabi_dmul
 491              	.LVL36:
 492              		.loc 1 292 20 view .LVU117
 493 0048 069A     		ldr	r2, [sp, #24]
 494 004a 079B     		ldr	r3, [sp, #28]
 495 004c FFF7FEFF 		bl	__aeabi_dadd
 496              	.LVL37:
 497 0050 0400     		movs	r4, r0
 498              	.LVL38:
 499              		.loc 1 292 20 view .LVU118
 500 0052 0D00     		movs	r5, r1
 501              	.LVL39:
 293:Core/Src/main.c ****                 xi = temp+x0;
 502              		.loc 1 293 17 is_stmt 1 view .LVU119
 503              		.loc 1 293 20 is_stmt 0 view .LVU120
 504 0054 009A     		ldr	r2, [sp]
 505 0056 019B     		ldr	r3, [sp, #4]
 506 0058 0498     		ldr	r0, [sp, #16]
 507 005a 0599     		ldr	r1, [sp, #20]
 508 005c FFF7FEFF 		bl	__aeabi_dadd
 509              	.LVL40:
 510 0060 0600     		movs	r6, r0
 511              	.LVL41:
 512              		.loc 1 293 20 view .LVU121
 513 0062 0F00     		movs	r7, r1
 514              	.LVL42:
 294:Core/Src/main.c ****                 iteration++;
 515              		.loc 1 294 17 is_stmt 1 view .LVU122
 516              		.loc 1 294 26 is_stmt 0 view .LVU123
 517 0064 0123     		movs	r3, #1
 518 0066 9C46     		mov	ip, r3
 519 0068 E044     		add	r8, r8, ip
 520              	.LVL43:
 521              	.L18:
 522              		.loc 1 294 26 view .LVU124
 523              	.LBE16:
 290:Core/Src/main.c ****                 double temp = (xi*xi - yi*yi);
 524              		.loc 1 290 43 is_stmt 1 view .LVU125
 290:Core/Src/main.c ****                 double temp = (xi*xi - yi*yi);
 525              		.loc 1 290 23 is_stmt 0 view .LVU126
 526 006a 3200     		movs	r2, r6
 527 006c 3B00     		movs	r3, r7
 528 006e 3000     		movs	r0, r6
 529 0070 3900     		movs	r1, r7
 530 0072 FFF7FEFF 		bl	__aeabi_dmul
 531              	.LVL44:
 532 0076 0090     		str	r0, [sp]
 533 0078 0191     		str	r1, [sp, #4]
ARM GAS  C:\Users\User\AppData\Local\Temp\cc4VAsDi.s 			page 16


 290:Core/Src/main.c ****                 double temp = (xi*xi - yi*yi);
 534              		.loc 1 290 31 view .LVU127
 535 007a 2200     		movs	r2, r4
 536 007c 2B00     		movs	r3, r5
 537 007e 2000     		movs	r0, r4
 538 0080 2900     		movs	r1, r5
 539 0082 FFF7FEFF 		bl	__aeabi_dmul
 540              	.LVL45:
 541 0086 0200     		movs	r2, r0
 542 0088 0B00     		movs	r3, r1
 543 008a 0292     		str	r2, [sp, #8]
 544 008c 0393     		str	r3, [sp, #12]
 290:Core/Src/main.c ****                 double temp = (xi*xi - yi*yi);
 545              		.loc 1 290 27 view .LVU128
 546 008e 0098     		ldr	r0, [sp]
 547 0090 0199     		ldr	r1, [sp, #4]
 548 0092 FFF7FEFF 		bl	__aeabi_dadd
 549              	.LVL46:
 290:Core/Src/main.c ****                 double temp = (xi*xi - yi*yi);
 550              		.loc 1 290 43 view .LVU129
 551 0096 0022     		movs	r2, #0
 552 0098 364B     		ldr	r3, .L28+4
 553 009a FFF7FEFF 		bl	__aeabi_dcmple
 554              	.LVL47:
 555 009e 0028     		cmp	r0, #0
 556 00a0 01D0     		beq	.L19
 290:Core/Src/main.c ****                 double temp = (xi*xi - yi*yi);
 557              		.loc 1 290 43 discriminator 1 view .LVU130
 558 00a2 C845     		cmp	r8, r9
 559 00a4 BEDB     		blt	.L21
 560              	.L19:
 295:Core/Src/main.c ****             }
 296:Core/Src/main.c ****             checksum += iteration;
 561              		.loc 1 296 13 is_stmt 1 view .LVU131
 562              		.loc 1 296 22 is_stmt 0 view .LVU132
 563 00a6 3249     		ldr	r1, .L28
 564 00a8 4346     		mov	r3, r8
 565 00aa 0893     		str	r3, [sp, #32]
 566 00ac DB17     		asrs	r3, r3, #31
 567 00ae 0993     		str	r3, [sp, #36]
 568 00b0 0A68     		ldr	r2, [r1]
 569 00b2 4B68     		ldr	r3, [r1, #4]
 570 00b4 089C     		ldr	r4, [sp, #32]
 571 00b6 099D     		ldr	r5, [sp, #36]
 572              	.LVL48:
 573              		.loc 1 296 22 view .LVU133
 574 00b8 1219     		adds	r2, r2, r4
 575 00ba 6B41     		adcs	r3, r3, r5
 576 00bc 0A60     		str	r2, [r1]
 577 00be 4B60     		str	r3, [r1, #4]
 578              	.LBE15:
 284:Core/Src/main.c ****             double x0 = ((double)x/(double)width)*(3.5)-2.5;
 579              		.loc 1 284 40 is_stmt 1 discriminator 2 view .LVU134
 580 00c0 0A9B     		ldr	r3, [sp, #40]
 581 00c2 0133     		adds	r3, r3, #1
 582 00c4 0A93     		str	r3, [sp, #40]
 583              	.LVL49:
ARM GAS  C:\Users\User\AppData\Local\Temp\cc4VAsDi.s 			page 17


 584              	.L23:
 284:Core/Src/main.c ****             double x0 = ((double)x/(double)width)*(3.5)-2.5;
 585              		.loc 1 284 27 discriminator 1 view .LVU135
 586 00c6 0A9B     		ldr	r3, [sp, #40]
 587 00c8 0B9A     		ldr	r2, [sp, #44]
 588 00ca 9342     		cmp	r3, r2
 589 00cc 36DA     		bge	.L26
 590              	.LBB17:
 285:Core/Src/main.c ****             double y0 = ((double)y/(double)height)*(2.0)-1.0;
 591              		.loc 1 285 13 view .LVU136
 285:Core/Src/main.c ****             double y0 = ((double)y/(double)height)*(2.0)-1.0;
 592              		.loc 1 285 26 is_stmt 0 view .LVU137
 593 00ce 0A98     		ldr	r0, [sp, #40]
 594 00d0 FFF7FEFF 		bl	__aeabi_i2d
 595              	.LVL50:
 596 00d4 0400     		movs	r4, r0
 597 00d6 0D00     		movs	r5, r1
 285:Core/Src/main.c ****             double y0 = ((double)y/(double)height)*(2.0)-1.0;
 598              		.loc 1 285 36 view .LVU138
 599 00d8 0B98     		ldr	r0, [sp, #44]
 600 00da FFF7FEFF 		bl	__aeabi_i2d
 601              	.LVL51:
 602 00de 0200     		movs	r2, r0
 603 00e0 0B00     		movs	r3, r1
 285:Core/Src/main.c ****             double y0 = ((double)y/(double)height)*(2.0)-1.0;
 604              		.loc 1 285 35 view .LVU139
 605 00e2 2000     		movs	r0, r4
 606 00e4 2900     		movs	r1, r5
 607 00e6 FFF7FEFF 		bl	__aeabi_ddiv
 608              	.LVL52:
 285:Core/Src/main.c ****             double y0 = ((double)y/(double)height)*(2.0)-1.0;
 609              		.loc 1 285 50 view .LVU140
 610 00ea 0022     		movs	r2, #0
 611 00ec 224B     		ldr	r3, .L28+8
 612 00ee FFF7FEFF 		bl	__aeabi_dmul
 613              	.LVL53:
 285:Core/Src/main.c ****             double y0 = ((double)y/(double)height)*(2.0)-1.0;
 614              		.loc 1 285 20 view .LVU141
 615 00f2 0022     		movs	r2, #0
 616 00f4 214B     		ldr	r3, .L28+12
 617 00f6 FFF7FEFF 		bl	__aeabi_dsub
 618              	.LVL54:
 619 00fa 0490     		str	r0, [sp, #16]
 620 00fc 0591     		str	r1, [sp, #20]
 621              	.LVL55:
 286:Core/Src/main.c ****             int iteration = 0;
 622              		.loc 1 286 13 is_stmt 1 view .LVU142
 286:Core/Src/main.c ****             int iteration = 0;
 623              		.loc 1 286 26 is_stmt 0 view .LVU143
 624 00fe 5846     		mov	r0, fp
 625              	.LVL56:
 286:Core/Src/main.c ****             int iteration = 0;
 626              		.loc 1 286 26 view .LVU144
 627 0100 FFF7FEFF 		bl	__aeabi_i2d
 628              	.LVL57:
 629 0104 0400     		movs	r4, r0
 630 0106 0D00     		movs	r5, r1
ARM GAS  C:\Users\User\AppData\Local\Temp\cc4VAsDi.s 			page 18


 286:Core/Src/main.c ****             int iteration = 0;
 631              		.loc 1 286 36 view .LVU145
 632 0108 5046     		mov	r0, r10
 633 010a FFF7FEFF 		bl	__aeabi_i2d
 634              	.LVL58:
 635 010e 0200     		movs	r2, r0
 636 0110 0B00     		movs	r3, r1
 286:Core/Src/main.c ****             int iteration = 0;
 637              		.loc 1 286 35 view .LVU146
 638 0112 2000     		movs	r0, r4
 639 0114 2900     		movs	r1, r5
 640 0116 FFF7FEFF 		bl	__aeabi_ddiv
 641              	.LVL59:
 286:Core/Src/main.c ****             int iteration = 0;
 642              		.loc 1 286 51 view .LVU147
 643 011a 0200     		movs	r2, r0
 644 011c 0B00     		movs	r3, r1
 645 011e FFF7FEFF 		bl	__aeabi_dadd
 646              	.LVL60:
 286:Core/Src/main.c ****             int iteration = 0;
 647              		.loc 1 286 20 view .LVU148
 648 0122 0022     		movs	r2, #0
 649 0124 164B     		ldr	r3, .L28+16
 650 0126 FFF7FEFF 		bl	__aeabi_dsub
 651              	.LVL61:
 652 012a 0690     		str	r0, [sp, #24]
 653 012c 0791     		str	r1, [sp, #28]
 654              	.LVL62:
 287:Core/Src/main.c ****             double xi = 0;
 655              		.loc 1 287 13 is_stmt 1 view .LVU149
 288:Core/Src/main.c ****             double yi = 0;
 656              		.loc 1 288 13 view .LVU150
 289:Core/Src/main.c ****             while ((xi*xi + yi*yi) <= (4) && iteration < max_iterations) {
 657              		.loc 1 289 13 view .LVU151
 290:Core/Src/main.c ****                 double temp = (xi*xi - yi*yi);
 658              		.loc 1 290 13 view .LVU152
 289:Core/Src/main.c ****             while ((xi*xi + yi*yi) <= (4) && iteration < max_iterations) {
 659              		.loc 1 289 20 is_stmt 0 view .LVU153
 660 012e 0024     		movs	r4, #0
 661 0130 0025     		movs	r5, #0
 288:Core/Src/main.c ****             double yi = 0;
 662              		.loc 1 288 20 view .LVU154
 663 0132 2600     		movs	r6, r4
 664 0134 2F00     		movs	r7, r5
 287:Core/Src/main.c ****             double xi = 0;
 665              		.loc 1 287 17 view .LVU155
 666 0136 0023     		movs	r3, #0
 667 0138 9846     		mov	r8, r3
 290:Core/Src/main.c ****                 double temp = (xi*xi - yi*yi);
 668              		.loc 1 290 19 view .LVU156
 669 013a 96E7     		b	.L18
 670              	.LVL63:
 671              	.L26:
 290:Core/Src/main.c ****                 double temp = (xi*xi - yi*yi);
 672              		.loc 1 290 19 view .LVU157
 673              	.LBE17:
 674              	.LBE14:
ARM GAS  C:\Users\User\AppData\Local\Temp\cc4VAsDi.s 			page 19


 283:Core/Src/main.c ****         for (int x = 0; x <= width-1; x++) {
 675              		.loc 1 283 37 is_stmt 1 discriminator 2 view .LVU158
 676 013c 0C9B     		ldr	r3, [sp, #48]
 677              	.LVL64:
 283:Core/Src/main.c ****         for (int x = 0; x <= width-1; x++) {
 678              		.loc 1 283 37 is_stmt 0 discriminator 2 view .LVU159
 679 013e 0133     		adds	r3, r3, #1
 680 0140 0C93     		str	r3, [sp, #48]
 681              	.LVL65:
 682              	.L17:
 283:Core/Src/main.c ****         for (int x = 0; x <= width-1; x++) {
 683              		.loc 1 283 23 is_stmt 1 discriminator 1 view .LVU160
 684 0142 0C9B     		ldr	r3, [sp, #48]
 685 0144 0D9A     		ldr	r2, [sp, #52]
 686 0146 9342     		cmp	r3, r2
 687 0148 08DA     		bge	.L27
 688              	.LBB18:
 284:Core/Src/main.c ****             double x0 = ((double)x/(double)width)*(3.5)-2.5;
 689              		.loc 1 284 18 is_stmt 0 view .LVU161
 690 014a 0023     		movs	r3, #0
 691 014c 9A46     		mov	r10, r3
 692 014e 0C9B     		ldr	r3, [sp, #48]
 693 0150 9B46     		mov	fp, r3
 694 0152 5346     		mov	r3, r10
 695 0154 0A93     		str	r3, [sp, #40]
 696 0156 0D9B     		ldr	r3, [sp, #52]
 697 0158 9A46     		mov	r10, r3
 698 015a B4E7     		b	.L23
 699              	.LVL66:
 700              	.L27:
 284:Core/Src/main.c ****             double x0 = ((double)x/(double)width)*(3.5)-2.5;
 701              		.loc 1 284 18 view .LVU162
 702              	.LBE18:
 703              	.LBE13:
 297:Core/Src/main.c ****         }
 298:Core/Src/main.c ****     }
 299:Core/Src/main.c ****     return checksum;
 704              		.loc 1 299 5 is_stmt 1 view .LVU163
 705              		.loc 1 299 12 is_stmt 0 view .LVU164
 706 015c 044B     		ldr	r3, .L28
 707              	.LVL67:
 708              		.loc 1 299 12 discriminator 1 view .LVU165
 709 015e 1868     		ldr	r0, [r3]
 710 0160 5968     		ldr	r1, [r3, #4]
 300:Core/Src/main.c **** }
 711              		.loc 1 300 1 view .LVU166
 712 0162 0FB0     		add	sp, sp, #60
 713              		@ sp needed
 714              	.LVL68:
 715              		.loc 1 300 1 view .LVU167
 716 0164 F0BC     		pop	{r4, r5, r6, r7}
 717 0166 BB46     		mov	fp, r7
 718 0168 B246     		mov	r10, r6
 719 016a A946     		mov	r9, r5
 720 016c A046     		mov	r8, r4
 721 016e F0BD     		pop	{r4, r5, r6, r7, pc}
 722              	.L29:
ARM GAS  C:\Users\User\AppData\Local\Temp\cc4VAsDi.s 			page 20


 723              		.align	2
 724              	.L28:
 725 0170 00000000 		.word	checksum
 726 0174 00001040 		.word	1074790400
 727 0178 00000C40 		.word	1074528256
 728 017c 00000440 		.word	1074003968
 729 0180 0000F03F 		.word	1072693248
 730              		.cfi_endproc
 731              	.LFE69:
 733              		.section	.text.TIM2_Init,"ax",%progbits
 734              		.align	1
 735              		.global	TIM2_Init
 736              		.syntax unified
 737              		.code	16
 738              		.thumb_func
 740              	TIM2_Init:
 741              	.LFB70:
 301:Core/Src/main.c **** 
 302:Core/Src/main.c **** void TIM2_Init(void){
 742              		.loc 1 302 21 is_stmt 1 view -0
 743              		.cfi_startproc
 744              		@ args = 0, pretend = 0, frame = 8
 745              		@ frame_needed = 0, uses_anonymous_args = 0
 746              		@ link register save eliminated.
 747 0000 82B0     		sub	sp, sp, #8
 748              	.LCFI8:
 749              		.cfi_def_cfa_offset 8
 303:Core/Src/main.c **** 	__HAL_RCC_TIM2_CLK_ENABLE();
 750              		.loc 1 303 2 view .LVU169
 751              	.LBB19:
 752              		.loc 1 303 2 view .LVU170
 753              		.loc 1 303 2 view .LVU171
 754 0002 0B4B     		ldr	r3, .L31
 755 0004 DA69     		ldr	r2, [r3, #28]
 756 0006 0121     		movs	r1, #1
 757 0008 0A43     		orrs	r2, r1
 758 000a DA61     		str	r2, [r3, #28]
 759              		.loc 1 303 2 view .LVU172
 760 000c DB69     		ldr	r3, [r3, #28]
 761 000e 0B40     		ands	r3, r1
 762 0010 0193     		str	r3, [sp, #4]
 763              		.loc 1 303 2 view .LVU173
 764 0012 019B     		ldr	r3, [sp, #4]
 765              	.LBE19:
 766              		.loc 1 303 2 view .LVU174
 304:Core/Src/main.c **** 
 305:Core/Src/main.c **** 	TIM2->PSC = 0;              // No prescaler = CPU frequency
 767              		.loc 1 305 2 view .LVU175
 768              		.loc 1 305 12 is_stmt 0 view .LVU176
 769 0014 8023     		movs	r3, #128
 770 0016 DB05     		lsls	r3, r3, #23
 771 0018 0022     		movs	r2, #0
 772 001a 9A62     		str	r2, [r3, #40]
 306:Core/Src/main.c **** 	TIM2->ARR = 0xFFFFFFFF;     // Maximum count before rollover
 773              		.loc 1 306 2 is_stmt 1 view .LVU177
 774              		.loc 1 306 12 is_stmt 0 view .LVU178
 775 001c 0120     		movs	r0, #1
ARM GAS  C:\Users\User\AppData\Local\Temp\cc4VAsDi.s 			page 21


 776 001e 4042     		rsbs	r0, r0, #0
 777 0020 D862     		str	r0, [r3, #44]
 307:Core/Src/main.c **** 	TIM2->CNT = 0;              // Start at zero
 778              		.loc 1 307 2 is_stmt 1 view .LVU179
 779              		.loc 1 307 12 is_stmt 0 view .LVU180
 780 0022 5A62     		str	r2, [r3, #36]
 308:Core/Src/main.c **** 	TIM2->CR1 |= TIM_CR1_CEN;   // Enable counter
 781              		.loc 1 308 2 is_stmt 1 view .LVU181
 782              		.loc 1 308 6 is_stmt 0 view .LVU182
 783 0024 1A68     		ldr	r2, [r3]
 784              		.loc 1 308 12 view .LVU183
 785 0026 0A43     		orrs	r2, r1
 786 0028 1A60     		str	r2, [r3]
 309:Core/Src/main.c **** }
 787              		.loc 1 309 1 view .LVU184
 788 002a 02B0     		add	sp, sp, #8
 789              		@ sp needed
 790 002c 7047     		bx	lr
 791              	.L32:
 792 002e C046     		.align	2
 793              	.L31:
 794 0030 00100240 		.word	1073876992
 795              		.cfi_endproc
 796              	.LFE70:
 798              		.section	.text.Error_Handler,"ax",%progbits
 799              		.align	1
 800              		.global	Error_Handler
 801              		.syntax unified
 802              		.code	16
 803              		.thumb_func
 805              	Error_Handler:
 806              	.LFB71:
 310:Core/Src/main.c **** 
 311:Core/Src/main.c **** /* USER CODE END 4 */
 312:Core/Src/main.c **** 
 313:Core/Src/main.c **** /**
 314:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 315:Core/Src/main.c ****   * @retval None
 316:Core/Src/main.c ****   */
 317:Core/Src/main.c **** void Error_Handler(void)
 318:Core/Src/main.c **** {
 807              		.loc 1 318 1 is_stmt 1 view -0
 808              		.cfi_startproc
 809              		@ Volatile: function does not return.
 810              		@ args = 0, pretend = 0, frame = 0
 811              		@ frame_needed = 0, uses_anonymous_args = 0
 812              		@ link register save eliminated.
 319:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 320:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 321:Core/Src/main.c ****   __disable_irq();
 813              		.loc 1 321 3 view .LVU186
 814              	.LBB20:
 815              	.LBI20:
 816              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
ARM GAS  C:\Users\User\AppData\Local\Temp\cc4VAsDi.s 			page 22


   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\User\AppData\Local\Temp\cc4VAsDi.s 			page 23


  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\cc4VAsDi.s 			page 24


 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 817              		.loc 2 140 27 view .LVU187
 818              	.LBB21:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 819              		.loc 2 142 3 view .LVU188
 820              		.syntax divided
 821              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 822 0000 72B6     		cpsid i
 823              	@ 0 "" 2
 824              		.thumb
 825              		.syntax unified
 826              	.L34:
 827              	.LBE21:
 828              	.LBE20:
 322:Core/Src/main.c ****   while (1)
 829              		.loc 1 322 3 view .LVU189
 323:Core/Src/main.c ****   {
 324:Core/Src/main.c ****   }
 830              		.loc 1 324 3 view .LVU190
 322:Core/Src/main.c ****   while (1)
 831              		.loc 1 322 9 view .LVU191
 832 0002 FEE7     		b	.L34
 833              		.cfi_endproc
 834              	.LFE71:
 836              		.section	.text.SystemClock_Config,"ax",%progbits
 837              		.align	1
 838              		.global	SystemClock_Config
 839              		.syntax unified
 840              		.code	16
 841              		.thumb_func
 843              	SystemClock_Config:
 844              	.LFB66:
 179:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 845              		.loc 1 179 1 view -0
ARM GAS  C:\Users\User\AppData\Local\Temp\cc4VAsDi.s 			page 25


 846              		.cfi_startproc
 847              		@ args = 0, pretend = 0, frame = 64
 848              		@ frame_needed = 0, uses_anonymous_args = 0
 849 0000 00B5     		push	{lr}
 850              	.LCFI9:
 851              		.cfi_def_cfa_offset 4
 852              		.cfi_offset 14, -4
 853 0002 91B0     		sub	sp, sp, #68
 854              	.LCFI10:
 855              		.cfi_def_cfa_offset 72
 180:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 856              		.loc 1 180 3 view .LVU193
 180:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 857              		.loc 1 180 22 is_stmt 0 view .LVU194
 858 0004 3022     		movs	r2, #48
 859 0006 0021     		movs	r1, #0
 860 0008 04A8     		add	r0, sp, #16
 861 000a FFF7FEFF 		bl	memset
 862              	.LVL69:
 181:Core/Src/main.c **** 
 863              		.loc 1 181 3 is_stmt 1 view .LVU195
 181:Core/Src/main.c **** 
 864              		.loc 1 181 22 is_stmt 0 view .LVU196
 865 000e 1022     		movs	r2, #16
 866 0010 0021     		movs	r1, #0
 867 0012 6846     		mov	r0, sp
 868 0014 FFF7FEFF 		bl	memset
 869              	.LVL70:
 186:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 870              		.loc 1 186 3 is_stmt 1 view .LVU197
 186:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 871              		.loc 1 186 36 is_stmt 0 view .LVU198
 872 0018 0223     		movs	r3, #2
 873 001a 0493     		str	r3, [sp, #16]
 187:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 874              		.loc 1 187 3 is_stmt 1 view .LVU199
 187:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 875              		.loc 1 187 30 is_stmt 0 view .LVU200
 876 001c 0122     		movs	r2, #1
 877 001e 0792     		str	r2, [sp, #28]
 188:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 878              		.loc 1 188 3 is_stmt 1 view .LVU201
 188:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 879              		.loc 1 188 41 is_stmt 0 view .LVU202
 880 0020 0F32     		adds	r2, r2, #15
 881 0022 0892     		str	r2, [sp, #32]
 189:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 882              		.loc 1 189 3 is_stmt 1 view .LVU203
 189:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 883              		.loc 1 189 34 is_stmt 0 view .LVU204
 884 0024 0C93     		str	r3, [sp, #48]
 190:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
 885              		.loc 1 190 3 is_stmt 1 view .LVU205
 191:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 886              		.loc 1 191 3 view .LVU206
 191:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 887              		.loc 1 191 32 is_stmt 0 view .LVU207
ARM GAS  C:\Users\User\AppData\Local\Temp\cc4VAsDi.s 			page 26


 888 0026 A023     		movs	r3, #160
 889 0028 9B03     		lsls	r3, r3, #14
 890 002a 0E93     		str	r3, [sp, #56]
 192:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 891              		.loc 1 192 3 is_stmt 1 view .LVU208
 193:Core/Src/main.c ****   {
 892              		.loc 1 193 3 view .LVU209
 193:Core/Src/main.c ****   {
 893              		.loc 1 193 7 is_stmt 0 view .LVU210
 894 002c 04A8     		add	r0, sp, #16
 895 002e FFF7FEFF 		bl	HAL_RCC_OscConfig
 896              	.LVL71:
 193:Core/Src/main.c ****   {
 897              		.loc 1 193 6 discriminator 1 view .LVU211
 898 0032 0028     		cmp	r0, #0
 899 0034 0ED1     		bne	.L38
 200:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 900              		.loc 1 200 3 is_stmt 1 view .LVU212
 200:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 901              		.loc 1 200 31 is_stmt 0 view .LVU213
 902 0036 0723     		movs	r3, #7
 903 0038 0093     		str	r3, [sp]
 202:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 904              		.loc 1 202 3 is_stmt 1 view .LVU214
 202:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 905              		.loc 1 202 34 is_stmt 0 view .LVU215
 906 003a 053B     		subs	r3, r3, #5
 907 003c 0193     		str	r3, [sp, #4]
 203:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 908              		.loc 1 203 3 is_stmt 1 view .LVU216
 203:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 909              		.loc 1 203 35 is_stmt 0 view .LVU217
 910 003e 0023     		movs	r3, #0
 911 0040 0293     		str	r3, [sp, #8]
 204:Core/Src/main.c **** 
 912              		.loc 1 204 3 is_stmt 1 view .LVU218
 204:Core/Src/main.c **** 
 913              		.loc 1 204 36 is_stmt 0 view .LVU219
 914 0042 0393     		str	r3, [sp, #12]
 206:Core/Src/main.c ****   {
 915              		.loc 1 206 3 is_stmt 1 view .LVU220
 206:Core/Src/main.c ****   {
 916              		.loc 1 206 7 is_stmt 0 view .LVU221
 917 0044 0121     		movs	r1, #1
 918 0046 6846     		mov	r0, sp
 919 0048 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 920              	.LVL72:
 206:Core/Src/main.c ****   {
 921              		.loc 1 206 6 discriminator 1 view .LVU222
 922 004c 0028     		cmp	r0, #0
 923 004e 03D1     		bne	.L39
 210:Core/Src/main.c **** 
 924              		.loc 1 210 1 view .LVU223
 925 0050 11B0     		add	sp, sp, #68
 926              		@ sp needed
 927 0052 00BD     		pop	{pc}
 928              	.L38:
ARM GAS  C:\Users\User\AppData\Local\Temp\cc4VAsDi.s 			page 27


 195:Core/Src/main.c ****   }
 929              		.loc 1 195 5 is_stmt 1 view .LVU224
 930 0054 FFF7FEFF 		bl	Error_Handler
 931              	.LVL73:
 932              	.L39:
 208:Core/Src/main.c ****   }
 933              		.loc 1 208 5 view .LVU225
 934 0058 FFF7FEFF 		bl	Error_Handler
 935              	.LVL74:
 936              		.cfi_endproc
 937              	.LFE66:
 939              		.global	__aeabi_ui2d
 940              		.global	__aeabi_d2f
 941              		.global	__aeabi_i2f
 942              		.global	__aeabi_fdiv
 943              		.global	__aeabi_f2uiz
 944              		.section	.text.main,"ax",%progbits
 945              		.align	1
 946              		.global	main
 947              		.syntax unified
 948              		.code	16
 949              		.thumb_func
 951              	main:
 952              	.LFB65:
  88:Core/Src/main.c **** 
 953              		.loc 1 88 1 view -0
 954              		.cfi_startproc
 955              		@ args = 0, pretend = 0, frame = 0
 956              		@ frame_needed = 0, uses_anonymous_args = 0
 957 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 958              	.LCFI11:
 959              		.cfi_def_cfa_offset 20
 960              		.cfi_offset 4, -20
 961              		.cfi_offset 5, -16
 962              		.cfi_offset 6, -12
 963              		.cfi_offset 7, -8
 964              		.cfi_offset 14, -4
 965 0002 D646     		mov	lr, r10
 966 0004 4F46     		mov	r7, r9
 967 0006 4646     		mov	r6, r8
 968 0008 C0B5     		push	{r6, r7, lr}
 969              	.LCFI12:
 970              		.cfi_def_cfa_offset 32
 971              		.cfi_offset 8, -32
 972              		.cfi_offset 9, -28
 973              		.cfi_offset 10, -24
  97:Core/Src/main.c **** 
 974              		.loc 1 97 3 view .LVU227
 975 000a FFF7FEFF 		bl	HAL_Init
 976              	.LVL75:
 104:Core/Src/main.c **** 
 977              		.loc 1 104 3 view .LVU228
 978 000e FFF7FEFF 		bl	SystemClock_Config
 979              	.LVL76:
 111:Core/Src/main.c ****   TIM2_Init();
 980              		.loc 1 111 3 view .LVU229
 981 0012 FFF7FEFF 		bl	MX_GPIO_Init
ARM GAS  C:\Users\User\AppData\Local\Temp\cc4VAsDi.s 			page 28


 982              	.LVL77:
 112:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 983              		.loc 1 112 3 view .LVU230
 984 0016 FFF7FEFF 		bl	TIM2_Init
 985              	.LVL78:
 117:Core/Src/main.c ****             //TODO: Turn on LED 0 to signify the start of the operation
 986              		.loc 1 117 3 view .LVU231
 987              	.LBB22:
 117:Core/Src/main.c ****             //TODO: Turn on LED 0 to signify the start of the operation
 988              		.loc 1 117 8 view .LVU232
 117:Core/Src/main.c ****             //TODO: Turn on LED 0 to signify the start of the operation
 989              		.loc 1 117 12 is_stmt 0 view .LVU233
 990 001a 0025     		movs	r5, #0
 117:Core/Src/main.c ****             //TODO: Turn on LED 0 to signify the start of the operation
 991              		.loc 1 117 3 view .LVU234
 992 001c 57E0     		b	.L41
 993              	.LVL79:
 994              	.L42:
 119:Core/Src/main.c **** 
 995              		.loc 1 119 13 is_stmt 1 view .LVU235
 996 001e 2D4F     		ldr	r7, .L44
 997 0020 0122     		movs	r2, #1
 998 0022 0121     		movs	r1, #1
 999 0024 3800     		movs	r0, r7
 1000 0026 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1001              	.LVL80:
 121:Core/Src/main.c **** 
 1002              		.loc 1 121 13 view .LVU236
 121:Core/Src/main.c **** 
 1003              		.loc 1 121 26 is_stmt 0 view .LVU237
 1004 002a FFF7FEFF 		bl	HAL_GetTick
 1005              	.LVL81:
 121:Core/Src/main.c **** 
 1006              		.loc 1 121 24 discriminator 1 view .LVU238
 1007 002e 2A4B     		ldr	r3, .L44+4
 1008 0030 9A46     		mov	r10, r3
 1009 0032 1860     		str	r0, [r3]
 123:Core/Src/main.c ****             start_cycles = TIM2->CNT;
 1010              		.loc 1 123 13 is_stmt 1 view .LVU239
 123:Core/Src/main.c ****             start_cycles = TIM2->CNT;
 1011              		.loc 1 123 23 is_stmt 0 view .LVU240
 1012 0034 8023     		movs	r3, #128
 1013 0036 DB05     		lsls	r3, r3, #23
 1014 0038 9846     		mov	r8, r3
 1015 003a 0023     		movs	r3, #0
 1016 003c 4246     		mov	r2, r8
 1017 003e 5362     		str	r3, [r2, #36]
 124:Core/Src/main.c **** 
 1018              		.loc 1 124 13 is_stmt 1 view .LVU241
 124:Core/Src/main.c **** 
 1019              		.loc 1 124 32 is_stmt 0 view .LVU242
 1020 0040 536A     		ldr	r3, [r2, #36]
 124:Core/Src/main.c **** 
 1021              		.loc 1 124 26 view .LVU243
 1022 0042 264A     		ldr	r2, .L44+8
 1023 0044 9146     		mov	r9, r2
 1024 0046 1360     		str	r3, [r2]
ARM GAS  C:\Users\User\AppData\Local\Temp\cc4VAsDi.s 			page 29


 126:Core/Src/main.c ****             //checksum_array[i] = calculate_mandelbrot_double(size_array[i], size_array[i], MAX_ITE
 1025              		.loc 1 126 13 is_stmt 1 view .LVU244
 126:Core/Src/main.c ****             //checksum_array[i] = calculate_mandelbrot_double(size_array[i], size_array[i], MAX_ITE
 1026              		.loc 1 126 33 is_stmt 0 view .LVU245
 1027 0048 254E     		ldr	r6, .L44+12
 1028 004a AC00     		lsls	r4, r5, #2
 1029 004c A059     		ldr	r0, [r4, r6]
 1030 004e FA22     		movs	r2, #250
 1031 0050 0100     		movs	r1, r0
 1032 0052 FFF7FEFF 		bl	calculate_mandelbrot_fixed_point_arithmetic
 1033              	.LVL82:
 126:Core/Src/main.c ****             //checksum_array[i] = calculate_mandelbrot_double(size_array[i], size_array[i], MAX_ITE
 1034              		.loc 1 126 31 discriminator 1 view .LVU246
 1035 0056 234B     		ldr	r3, .L44+16
 1036 0058 EA00     		lsls	r2, r5, #3
 1037 005a 9B18     		adds	r3, r3, r2
 1038 005c 1860     		str	r0, [r3]
 1039 005e 5960     		str	r1, [r3, #4]
 128:Core/Src/main.c ****             execution_time_array[i] = end_time - start_time;
 1040              		.loc 1 128 13 is_stmt 1 view .LVU247
 128:Core/Src/main.c ****             execution_time_array[i] = end_time - start_time;
 1041              		.loc 1 128 24 is_stmt 0 view .LVU248
 1042 0060 FFF7FEFF 		bl	HAL_GetTick
 1043              	.LVL83:
 128:Core/Src/main.c ****             execution_time_array[i] = end_time - start_time;
 1044              		.loc 1 128 22 discriminator 1 view .LVU249
 1045 0064 204B     		ldr	r3, .L44+20
 1046 0066 1860     		str	r0, [r3]
 129:Core/Src/main.c **** 
 1047              		.loc 1 129 13 is_stmt 1 view .LVU250
 129:Core/Src/main.c **** 
 1048              		.loc 1 129 48 is_stmt 0 view .LVU251
 1049 0068 5346     		mov	r3, r10
 1050 006a 1B68     		ldr	r3, [r3]
 1051 006c C01A     		subs	r0, r0, r3
 129:Core/Src/main.c **** 
 1052              		.loc 1 129 37 view .LVU252
 1053 006e 1F4B     		ldr	r3, .L44+24
 1054 0070 E050     		str	r0, [r4, r3]
 131:Core/Src/main.c **** 
 1055              		.loc 1 131 13 is_stmt 1 view .LVU253
 131:Core/Src/main.c **** 
 1056              		.loc 1 131 30 is_stmt 0 view .LVU254
 1057 0072 4346     		mov	r3, r8
 1058 0074 586A     		ldr	r0, [r3, #36]
 131:Core/Src/main.c **** 
 1059              		.loc 1 131 24 view .LVU255
 1060 0076 1E4B     		ldr	r3, .L44+28
 1061 0078 1860     		str	r0, [r3]
 133:Core/Src/main.c ****             CPU_time_array[i] = CPU_cycles_array[i] / (48*(1e6));
 1062              		.loc 1 133 13 is_stmt 1 view .LVU256
 133:Core/Src/main.c ****             CPU_time_array[i] = CPU_cycles_array[i] / (48*(1e6));
 1063              		.loc 1 133 46 is_stmt 0 view .LVU257
 1064 007a 4B46     		mov	r3, r9
 1065 007c 1B68     		ldr	r3, [r3]
 1066 007e C01A     		subs	r0, r0, r3
 133:Core/Src/main.c ****             CPU_time_array[i] = CPU_cycles_array[i] / (48*(1e6));
ARM GAS  C:\Users\User\AppData\Local\Temp\cc4VAsDi.s 			page 30


 1067              		.loc 1 133 33 view .LVU258
 1068 0080 1C4B     		ldr	r3, .L44+32
 1069 0082 E050     		str	r0, [r4, r3]
 134:Core/Src/main.c **** 
 1070              		.loc 1 134 13 is_stmt 1 view .LVU259
 134:Core/Src/main.c **** 
 1071              		.loc 1 134 53 is_stmt 0 view .LVU260
 1072 0084 FFF7FEFF 		bl	__aeabi_ui2d
 1073              	.LVL84:
 1074 0088 0022     		movs	r2, #0
 1075 008a 1B4B     		ldr	r3, .L44+36
 1076 008c FFF7FEFF 		bl	__aeabi_ddiv
 1077              	.LVL85:
 1078 0090 FFF7FEFF 		bl	__aeabi_d2f
 1079              	.LVL86:
 1080 0094 8046     		mov	r8, r0
 134:Core/Src/main.c **** 
 1081              		.loc 1 134 31 view .LVU261
 1082 0096 194B     		ldr	r3, .L44+40
 1083 0098 E050     		str	r0, [r4, r3]
 136:Core/Src/main.c **** 
 1084              		.loc 1 136 13 is_stmt 1 view .LVU262
 136:Core/Src/main.c **** 
 1085              		.loc 1 136 46 is_stmt 0 view .LVU263
 1086 009a A059     		ldr	r0, [r4, r6]
 136:Core/Src/main.c **** 
 1087              		.loc 1 136 49 view .LVU264
 1088 009c 4043     		muls	r0, r0
 136:Core/Src/main.c **** 
 1089              		.loc 1 136 65 view .LVU265
 1090 009e FFF7FEFF 		bl	__aeabi_i2f
 1091              	.LVL87:
 1092 00a2 4146     		mov	r1, r8
 1093 00a4 FFF7FEFF 		bl	__aeabi_fdiv
 1094              	.LVL88:
 136:Core/Src/main.c **** 
 1095              		.loc 1 136 33 view .LVU266
 1096 00a8 154E     		ldr	r6, .L44+44
 1097 00aa FFF7FEFF 		bl	__aeabi_f2uiz
 1098              	.LVL89:
 1099 00ae 3051     		str	r0, [r6, r4]
 139:Core/Src/main.c **** 
 1100              		.loc 1 139 13 is_stmt 1 view .LVU267
 1101 00b0 0122     		movs	r2, #1
 1102 00b2 0221     		movs	r1, #2
 1103 00b4 3800     		movs	r0, r7
 1104 00b6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1105              	.LVL90:
 142:Core/Src/main.c **** 
 1106              		.loc 1 142 13 view .LVU268
 1107 00ba FA20     		movs	r0, #250
 1108 00bc 8000     		lsls	r0, r0, #2
 1109 00be FFF7FEFF 		bl	HAL_Delay
 1110              	.LVL91:
 145:Core/Src/main.c ****         }
 1111              		.loc 1 145 13 view .LVU269
 1112 00c2 0022     		movs	r2, #0
ARM GAS  C:\Users\User\AppData\Local\Temp\cc4VAsDi.s 			page 31


 1113 00c4 0321     		movs	r1, #3
 1114 00c6 3800     		movs	r0, r7
 1115 00c8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1116              	.LVL92:
 117:Core/Src/main.c ****             //TODO: Turn on LED 0 to signify the start of the operation
 1117              		.loc 1 117 27 discriminator 3 view .LVU270
 1118 00cc 0135     		adds	r5, r5, #1
 1119              	.LVL93:
 1120              	.L41:
 117:Core/Src/main.c ****             //TODO: Turn on LED 0 to signify the start of the operation
 1121              		.loc 1 117 21 discriminator 1 view .LVU271
 1122 00ce 042D     		cmp	r5, #4
 1123 00d0 A5DD     		ble	.L42
 1124              	.L43:
 1125              	.LBE22:
 150:Core/Src/main.c ****   {
 1126              		.loc 1 150 3 view .LVU272
 170:Core/Src/main.c ****   /* USER CODE END 3 */
 1127              		.loc 1 170 3 view .LVU273
 150:Core/Src/main.c ****   {
 1128              		.loc 1 150 9 view .LVU274
 1129 00d2 FEE7     		b	.L43
 1130              	.L45:
 1131              		.align	2
 1132              	.L44:
 1133 00d4 00040048 		.word	1207960576
 1134 00d8 00000000 		.word	start_time
 1135 00dc 00000000 		.word	start_cycles
 1136 00e0 00000000 		.word	size_array
 1137 00e4 00000000 		.word	checksum_array
 1138 00e8 00000000 		.word	end_time
 1139 00ec 00000000 		.word	execution_time_array
 1140 00f0 00000000 		.word	end_cycles
 1141 00f4 00000000 		.word	CPU_cycles_array
 1142 00f8 60E38641 		.word	1099359072
 1143 00fc 00000000 		.word	CPU_time_array
 1144 0100 00000000 		.word	throughput_array
 1145              		.cfi_endproc
 1146              	.LFE65:
 1148              		.global	throughput_array
 1149              		.section	.bss.throughput_array,"aw",%nobits
 1150              		.align	2
 1153              	throughput_array:
 1154 0000 00000000 		.space	20
 1154      00000000 
 1154      00000000 
 1154      00000000 
 1154      00000000 
 1155              		.global	CPU_time_array
 1156              		.section	.bss.CPU_time_array,"aw",%nobits
 1157              		.align	2
 1160              	CPU_time_array:
 1161 0000 00000000 		.space	20
 1161      00000000 
 1161      00000000 
 1161      00000000 
 1161      00000000 
ARM GAS  C:\Users\User\AppData\Local\Temp\cc4VAsDi.s 			page 32


 1162              		.global	CPU_cycles_array
 1163              		.section	.bss.CPU_cycles_array,"aw",%nobits
 1164              		.align	2
 1167              	CPU_cycles_array:
 1168 0000 00000000 		.space	20
 1168      00000000 
 1168      00000000 
 1168      00000000 
 1168      00000000 
 1169              		.global	execution_time_array
 1170              		.section	.bss.execution_time_array,"aw",%nobits
 1171              		.align	2
 1174              	execution_time_array:
 1175 0000 00000000 		.space	20
 1175      00000000 
 1175      00000000 
 1175      00000000 
 1175      00000000 
 1176              		.global	checksum_array
 1177              		.section	.bss.checksum_array,"aw",%nobits
 1178              		.align	3
 1181              	checksum_array:
 1182 0000 00000000 		.space	40
 1182      00000000 
 1182      00000000 
 1182      00000000 
 1182      00000000 
 1183              		.global	size_array
 1184              		.section	.data.size_array,"aw"
 1185              		.align	2
 1188              	size_array:
 1189 0000 80000000 		.word	128
 1190 0004 A0000000 		.word	160
 1191 0008 C0000000 		.word	192
 1192 000c E0000000 		.word	224
 1193 0010 00010000 		.word	256
 1194              		.global	init_height
 1195              		.section	.data.init_height,"aw"
 1196              		.align	2
 1199              	init_height:
 1200 0000 80000000 		.word	128
 1201              		.global	init_width
 1202              		.section	.data.init_width,"aw"
 1203              		.align	2
 1206              	init_width:
 1207 0000 80000000 		.word	128
 1208              		.global	throughput
 1209              		.section	.bss.throughput,"aw",%nobits
 1210              		.align	2
 1213              	throughput:
 1214 0000 00000000 		.space	4
 1215              		.global	CPU_cycles
 1216              		.section	.bss.CPU_cycles,"aw",%nobits
 1217              		.align	2
 1220              	CPU_cycles:
 1221 0000 00000000 		.space	4
 1222              		.global	end_cycles
ARM GAS  C:\Users\User\AppData\Local\Temp\cc4VAsDi.s 			page 33


 1223              		.section	.bss.end_cycles,"aw",%nobits
 1224              		.align	2
 1227              	end_cycles:
 1228 0000 00000000 		.space	4
 1229              		.global	start_cycles
 1230              		.section	.bss.start_cycles,"aw",%nobits
 1231              		.align	2
 1234              	start_cycles:
 1235 0000 00000000 		.space	4
 1236              		.global	checksum
 1237              		.section	.bss.checksum,"aw",%nobits
 1238              		.align	3
 1241              	checksum:
 1242 0000 00000000 		.space	8
 1242      00000000 
 1243              		.global	execution_time
 1244              		.section	.bss.execution_time,"aw",%nobits
 1245              		.align	2
 1248              	execution_time:
 1249 0000 00000000 		.space	4
 1250              		.global	end_time
 1251              		.section	.bss.end_time,"aw",%nobits
 1252              		.align	2
 1255              	end_time:
 1256 0000 00000000 		.space	4
 1257              		.global	start_time
 1258              		.section	.bss.start_time,"aw",%nobits
 1259              		.align	2
 1262              	start_time:
 1263 0000 00000000 		.space	4
 1264              		.text
 1265              	.Letext0:
 1266              		.file 3 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1267              		.file 4 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1268              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f051x8.h"
 1269              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 1270              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 1271              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 1272              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 1273              		.file 10 "<built-in>"
ARM GAS  C:\Users\User\AppData\Local\Temp\cc4VAsDi.s 			page 34


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\User\AppData\Local\Temp\cc4VAsDi.s:19     .text.MX_GPIO_Init:00000000 $t
C:\Users\User\AppData\Local\Temp\cc4VAsDi.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\User\AppData\Local\Temp\cc4VAsDi.s:131    .text.MX_GPIO_Init:0000006c $d
C:\Users\User\AppData\Local\Temp\cc4VAsDi.s:138    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 $t
C:\Users\User\AppData\Local\Temp\cc4VAsDi.s:144    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 calculate_mandelbrot_fixed_point_arithmetic
C:\Users\User\AppData\Local\Temp\cc4VAsDi.s:387    .text.calculate_mandelbrot_fixed_point_arithmetic:000000e0 $d
C:\Users\User\AppData\Local\Temp\cc4VAsDi.s:1241   .bss.checksum:00000000 checksum
C:\Users\User\AppData\Local\Temp\cc4VAsDi.s:402    .text.calculate_mandelbrot_double:00000000 $t
C:\Users\User\AppData\Local\Temp\cc4VAsDi.s:408    .text.calculate_mandelbrot_double:00000000 calculate_mandelbrot_double
C:\Users\User\AppData\Local\Temp\cc4VAsDi.s:725    .text.calculate_mandelbrot_double:00000170 $d
C:\Users\User\AppData\Local\Temp\cc4VAsDi.s:734    .text.TIM2_Init:00000000 $t
C:\Users\User\AppData\Local\Temp\cc4VAsDi.s:740    .text.TIM2_Init:00000000 TIM2_Init
C:\Users\User\AppData\Local\Temp\cc4VAsDi.s:794    .text.TIM2_Init:00000030 $d
C:\Users\User\AppData\Local\Temp\cc4VAsDi.s:799    .text.Error_Handler:00000000 $t
C:\Users\User\AppData\Local\Temp\cc4VAsDi.s:805    .text.Error_Handler:00000000 Error_Handler
C:\Users\User\AppData\Local\Temp\cc4VAsDi.s:837    .text.SystemClock_Config:00000000 $t
C:\Users\User\AppData\Local\Temp\cc4VAsDi.s:843    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\User\AppData\Local\Temp\cc4VAsDi.s:945    .text.main:00000000 $t
C:\Users\User\AppData\Local\Temp\cc4VAsDi.s:951    .text.main:00000000 main
C:\Users\User\AppData\Local\Temp\cc4VAsDi.s:1133   .text.main:000000d4 $d
C:\Users\User\AppData\Local\Temp\cc4VAsDi.s:1262   .bss.start_time:00000000 start_time
C:\Users\User\AppData\Local\Temp\cc4VAsDi.s:1234   .bss.start_cycles:00000000 start_cycles
C:\Users\User\AppData\Local\Temp\cc4VAsDi.s:1188   .data.size_array:00000000 size_array
C:\Users\User\AppData\Local\Temp\cc4VAsDi.s:1181   .bss.checksum_array:00000000 checksum_array
C:\Users\User\AppData\Local\Temp\cc4VAsDi.s:1255   .bss.end_time:00000000 end_time
C:\Users\User\AppData\Local\Temp\cc4VAsDi.s:1174   .bss.execution_time_array:00000000 execution_time_array
C:\Users\User\AppData\Local\Temp\cc4VAsDi.s:1227   .bss.end_cycles:00000000 end_cycles
C:\Users\User\AppData\Local\Temp\cc4VAsDi.s:1167   .bss.CPU_cycles_array:00000000 CPU_cycles_array
C:\Users\User\AppData\Local\Temp\cc4VAsDi.s:1160   .bss.CPU_time_array:00000000 CPU_time_array
C:\Users\User\AppData\Local\Temp\cc4VAsDi.s:1153   .bss.throughput_array:00000000 throughput_array
C:\Users\User\AppData\Local\Temp\cc4VAsDi.s:1150   .bss.throughput_array:00000000 $d
C:\Users\User\AppData\Local\Temp\cc4VAsDi.s:1157   .bss.CPU_time_array:00000000 $d
C:\Users\User\AppData\Local\Temp\cc4VAsDi.s:1164   .bss.CPU_cycles_array:00000000 $d
C:\Users\User\AppData\Local\Temp\cc4VAsDi.s:1171   .bss.execution_time_array:00000000 $d
C:\Users\User\AppData\Local\Temp\cc4VAsDi.s:1178   .bss.checksum_array:00000000 $d
C:\Users\User\AppData\Local\Temp\cc4VAsDi.s:1185   .data.size_array:00000000 $d
C:\Users\User\AppData\Local\Temp\cc4VAsDi.s:1199   .data.init_height:00000000 init_height
C:\Users\User\AppData\Local\Temp\cc4VAsDi.s:1196   .data.init_height:00000000 $d
C:\Users\User\AppData\Local\Temp\cc4VAsDi.s:1206   .data.init_width:00000000 init_width
C:\Users\User\AppData\Local\Temp\cc4VAsDi.s:1203   .data.init_width:00000000 $d
C:\Users\User\AppData\Local\Temp\cc4VAsDi.s:1213   .bss.throughput:00000000 throughput
C:\Users\User\AppData\Local\Temp\cc4VAsDi.s:1210   .bss.throughput:00000000 $d
C:\Users\User\AppData\Local\Temp\cc4VAsDi.s:1220   .bss.CPU_cycles:00000000 CPU_cycles
C:\Users\User\AppData\Local\Temp\cc4VAsDi.s:1217   .bss.CPU_cycles:00000000 $d
C:\Users\User\AppData\Local\Temp\cc4VAsDi.s:1224   .bss.end_cycles:00000000 $d
C:\Users\User\AppData\Local\Temp\cc4VAsDi.s:1231   .bss.start_cycles:00000000 $d
C:\Users\User\AppData\Local\Temp\cc4VAsDi.s:1238   .bss.checksum:00000000 $d
C:\Users\User\AppData\Local\Temp\cc4VAsDi.s:1248   .bss.execution_time:00000000 execution_time
C:\Users\User\AppData\Local\Temp\cc4VAsDi.s:1245   .bss.execution_time:00000000 $d
C:\Users\User\AppData\Local\Temp\cc4VAsDi.s:1252   .bss.end_time:00000000 $d
C:\Users\User\AppData\Local\Temp\cc4VAsDi.s:1259   .bss.start_time:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
ARM GAS  C:\Users\User\AppData\Local\Temp\cc4VAsDi.s 			page 35


HAL_GPIO_Init
__aeabi_idiv
__aeabi_i2d
__aeabi_ddiv
__aeabi_dmul
__aeabi_dsub
__aeabi_dadd
__aeabi_dcmple
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
__aeabi_ui2d
__aeabi_d2f
__aeabi_i2f
__aeabi_fdiv
__aeabi_f2uiz
HAL_Init
HAL_GetTick
HAL_Delay
