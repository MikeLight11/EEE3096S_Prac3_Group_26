ARM GAS  C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB161:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include <stdio.h>
  22:Core/Src/main.c **** #include <sys/time.h>
  23:Core/Src/main.c **** #include <time.h>
  24:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* USER CODE END Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  31:Core/Src/main.c **** #define MAX_ITER 100
  32:Core/Src/main.c **** /* USER CODE END PTD */
  33:Core/Src/main.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s 			page 2


  34:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* USER CODE END PD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE BEGIN PV */
  47:Core/Src/main.c **** //TODO: Define variables you think you might need
  48:Core/Src/main.c **** // - Performance timing variables (e.g execution time, throughput, pixels per second, clock cycles)
  49:Core/Src/main.c **** uint32_t start_time;       // Clock time at start of operation
  50:Core/Src/main.c **** uint32_t end_time;         // Clock time at end of operation
  51:Core/Src/main.c **** uint32_t execution_time;   // Difference between start and end time
  52:Core/Src/main.c **** uint64_t checksum;         // Sum returned by Mandelbrot function
  53:Core/Src/main.c **** uint32_t start_cycles;     // Cycles at start of operation
  54:Core/Src/main.c **** uint32_t end_cycles;       // Cycles at end of operation
  55:Core/Src/main.c **** uint32_t CPU_cycles;       // Difference between start and end cycles
  56:Core/Src/main.c **** uint32_t throughput;       // Pixel throughput
  57:Core/Src/main.c **** int init_width = 128;            // Initial height of 2D plane
  58:Core/Src/main.c **** int init_height = 128;           // Initial width of 2D plane
  59:Core/Src/main.c **** int size_array[] = {128, 160, 192, 224, 256};
  60:Core/Src/main.c **** uint64_t checksum_array[5] = {0}; // Array to hold checksums for different sizes
  61:Core/Src/main.c **** uint32_t execution_time_array[5] = {0}; // Array to hold execution times for different sizes
  62:Core/Src/main.c **** uint32_t CPU_cycles_array[5]={0};
  63:Core/Src/main.c **** float CPU_time_array[5]={0};
  64:Core/Src/main.c **** uint32_t throughput_array[5]={0};
  65:Core/Src/main.c **** /* USER CODE END PV */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  68:Core/Src/main.c **** void SystemClock_Config(void);
  69:Core/Src/main.c **** static void MX_GPIO_Init(void);
  70:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  71:Core/Src/main.c **** //TODO: Define any function prototypes you might need such as the calculate Mandelbrot function amo
  72:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations);
  73:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations);
  74:Core/Src/main.c **** uint64_t calculate_mandelbrot_float(int width, int height, int max_iterations);
  75:Core/Src/main.c **** void DWT_Init(void);
  76:Core/Src/main.c **** /* USER CODE END PFP */
  77:Core/Src/main.c **** 
  78:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  79:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c **** /* USER CODE END 0 */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** /**
  84:Core/Src/main.c ****   * @brief  The application entry point.
  85:Core/Src/main.c ****   * @retval int
  86:Core/Src/main.c ****   */
  87:Core/Src/main.c **** int main(void)
  88:Core/Src/main.c **** {
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
ARM GAS  C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s 			page 3


  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* USER CODE END 1 */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  97:Core/Src/main.c ****   HAL_Init();
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* USER CODE END Init */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* Configure the system clock */
 104:Core/Src/main.c ****   SystemClock_Config();
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* USER CODE END SysInit */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* Initialize all configured peripherals */
 111:Core/Src/main.c ****   MX_GPIO_Init();
 112:Core/Src/main.c ****   DWT_Init();
 113:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* USER CODE END 2 */
 116:Core/Src/main.c ****   for (int i = 0; i < 5; i++) {
 117:Core/Src/main.c ****           //TODO: Turn on LED 0 to signify the start of the operation
 118:Core/Src/main.c ****           HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****           start_time = HAL_GetTick();
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****           DWT->CYCCNT = 0;
 123:Core/Src/main.c ****           start_cycles = DWT->CYCCNT;
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****           //checksum_array[i] = calculate_mandelbrot_fixed_point_arithmetic(size_array[i], size_arr
 126:Core/Src/main.c ****           checksum_array[i] = calculate_mandelbrot_double(size_array[i], size_array[i], MAX_ITER);
 127:Core/Src/main.c ****           //checksum_array[i] = calculate_mandelbrot_float(size_array[i], size_array[i], MAX_ITER);
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****           end_time = HAL_GetTick();
 130:Core/Src/main.c ****           execution_time_array[i] = end_time - start_time;
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****           end_cycles = DWT->CYCCNT;
 133:Core/Src/main.c ****           CPU_cycles_array[i] = end_cycles - start_cycles;
 134:Core/Src/main.c ****           CPU_time_array[i] = CPU_cycles_array[i] / (120*(1e6));
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****           throughput_array[i] = (size_array[i]*size_array[i]) / CPU_time_array[i];
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****           //TODO: Turn on LED 1 to signify the end of the operation
 139:Core/Src/main.c ****           HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
 140:Core/Src/main.c **** 
 141:Core/Src/main.c ****           //TODO: Hold the LEDs on for a 1s delay
 142:Core/Src/main.c ****           HAL_Delay(1000);
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****           //TODO: Turn off the LEDs
 145:Core/Src/main.c ****           HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1, GPIO_PIN_RESET);
 146:Core/Src/main.c ****       }
 147:Core/Src/main.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s 			page 4


 148:Core/Src/main.c ****   /* Infinite loop */
 149:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 150:Core/Src/main.c ****   while (1)
 151:Core/Src/main.c ****   {
 152:Core/Src/main.c ****     /* USER CODE END WHILE */
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 155:Core/Src/main.c **** 	  //TODO: Visual indicator: Turn on LED0 to signal processing start
 156:Core/Src/main.c **** 
 157:Core/Src/main.c **** 
 158:Core/Src/main.c **** 	  //TODO: Benchmark and Profile Performance
 159:Core/Src/main.c **** 
 160:Core/Src/main.c **** 
 161:Core/Src/main.c **** 	  //TODO: Visual indicator: Turn on LED1 to signal processing start
 162:Core/Src/main.c **** 
 163:Core/Src/main.c **** 
 164:Core/Src/main.c **** 	  //TODO: Keep the LEDs ON for 2s
 165:Core/Src/main.c **** 
 166:Core/Src/main.c **** 	  //TODO: Turn OFF LEDs
 167:Core/Src/main.c ****   }
 168:Core/Src/main.c ****   /* USER CODE END 3 */
 169:Core/Src/main.c **** }
 170:Core/Src/main.c **** 
 171:Core/Src/main.c **** /**
 172:Core/Src/main.c ****   * @brief System Clock Configuration
 173:Core/Src/main.c ****   * @retval None
 174:Core/Src/main.c ****   */
 175:Core/Src/main.c **** void SystemClock_Config(void)
 176:Core/Src/main.c **** {
 177:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 178:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 179:Core/Src/main.c **** 
 180:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 181:Core/Src/main.c ****   */
 182:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 183:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 184:Core/Src/main.c **** 
 185:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 186:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 187:Core/Src/main.c ****   */
 188:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 189:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 190:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 191:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 192:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 15;
 193:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 194:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 195:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 196:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 197:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 198:Core/Src/main.c ****   {
 199:Core/Src/main.c ****     Error_Handler();
 200:Core/Src/main.c ****   }
 201:Core/Src/main.c **** 
 202:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 203:Core/Src/main.c ****   */
 204:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
ARM GAS  C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s 			page 5


 205:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 206:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 207:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 208:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 209:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 212:Core/Src/main.c ****   {
 213:Core/Src/main.c ****     Error_Handler();
 214:Core/Src/main.c ****   }
 215:Core/Src/main.c **** }
 216:Core/Src/main.c **** 
 217:Core/Src/main.c **** /**
 218:Core/Src/main.c ****   * @brief GPIO Initialization Function
 219:Core/Src/main.c ****   * @param None
 220:Core/Src/main.c ****   * @retval None
 221:Core/Src/main.c ****   */
 222:Core/Src/main.c **** static void MX_GPIO_Init(void)
 223:Core/Src/main.c **** {
  26              		.loc 1 223 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 30B5     		push	{r4, r5, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 12
  33              		.cfi_offset 4, -12
  34              		.cfi_offset 5, -8
  35              		.cfi_offset 14, -4
  36 0002 89B0     		sub	sp, sp, #36
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 48
 224:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  39              		.loc 1 224 3 view .LVU1
  40              		.loc 1 224 20 is_stmt 0 view .LVU2
  41 0004 0024     		movs	r4, #0
  42 0006 0394     		str	r4, [sp, #12]
  43 0008 0494     		str	r4, [sp, #16]
  44 000a 0594     		str	r4, [sp, #20]
  45 000c 0694     		str	r4, [sp, #24]
  46 000e 0794     		str	r4, [sp, #28]
 225:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 226:Core/Src/main.c **** 
 227:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 228:Core/Src/main.c **** 
 229:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 230:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  47              		.loc 1 230 3 is_stmt 1 view .LVU3
  48              	.LBB4:
  49              		.loc 1 230 3 view .LVU4
  50 0010 0094     		str	r4, [sp]
  51              		.loc 1 230 3 view .LVU5
  52 0012 184B     		ldr	r3, .L3
  53 0014 1A6B     		ldr	r2, [r3, #48]
  54 0016 42F00402 		orr	r2, r2, #4
  55 001a 1A63     		str	r2, [r3, #48]
  56              		.loc 1 230 3 view .LVU6
ARM GAS  C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s 			page 6


  57 001c 1A6B     		ldr	r2, [r3, #48]
  58 001e 02F00402 		and	r2, r2, #4
  59 0022 0092     		str	r2, [sp]
  60              		.loc 1 230 3 view .LVU7
  61 0024 009A     		ldr	r2, [sp]
  62              	.LBE4:
  63              		.loc 1 230 3 view .LVU8
 231:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  64              		.loc 1 231 3 view .LVU9
  65              	.LBB5:
  66              		.loc 1 231 3 view .LVU10
  67 0026 0194     		str	r4, [sp, #4]
  68              		.loc 1 231 3 view .LVU11
  69 0028 1A6B     		ldr	r2, [r3, #48]
  70 002a 42F08002 		orr	r2, r2, #128
  71 002e 1A63     		str	r2, [r3, #48]
  72              		.loc 1 231 3 view .LVU12
  73 0030 1A6B     		ldr	r2, [r3, #48]
  74 0032 02F08002 		and	r2, r2, #128
  75 0036 0192     		str	r2, [sp, #4]
  76              		.loc 1 231 3 view .LVU13
  77 0038 019A     		ldr	r2, [sp, #4]
  78              	.LBE5:
  79              		.loc 1 231 3 view .LVU14
 232:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  80              		.loc 1 232 3 view .LVU15
  81              	.LBB6:
  82              		.loc 1 232 3 view .LVU16
  83 003a 0294     		str	r4, [sp, #8]
  84              		.loc 1 232 3 view .LVU17
  85 003c 1A6B     		ldr	r2, [r3, #48]
  86 003e 42F00202 		orr	r2, r2, #2
  87 0042 1A63     		str	r2, [r3, #48]
  88              		.loc 1 232 3 view .LVU18
  89 0044 1B6B     		ldr	r3, [r3, #48]
  90 0046 03F00203 		and	r3, r3, #2
  91 004a 0293     		str	r3, [sp, #8]
  92              		.loc 1 232 3 view .LVU19
  93 004c 029B     		ldr	r3, [sp, #8]
  94              	.LBE6:
  95              		.loc 1 232 3 view .LVU20
 233:Core/Src/main.c **** 
 234:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 235:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
  96              		.loc 1 235 3 view .LVU21
  97 004e 0A4D     		ldr	r5, .L3+4
  98 0050 2246     		mov	r2, r4
  99 0052 FF21     		movs	r1, #255
 100 0054 2846     		mov	r0, r5
 101 0056 FFF7FEFF 		bl	HAL_GPIO_WritePin
 102              	.LVL0:
 236:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7, GPIO_PIN_RESET);
 237:Core/Src/main.c **** 
 238:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 PB2 PB3
 239:Core/Src/main.c ****                            PB4 PB5 PB6 PB7 */
 240:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 103              		.loc 1 240 3 view .LVU22
ARM GAS  C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s 			page 7


 104              		.loc 1 240 23 is_stmt 0 view .LVU23
 105 005a FF23     		movs	r3, #255
 106 005c 0393     		str	r3, [sp, #12]
 241:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 242:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 107              		.loc 1 242 3 is_stmt 1 view .LVU24
 108              		.loc 1 242 24 is_stmt 0 view .LVU25
 109 005e 0123     		movs	r3, #1
 110 0060 0493     		str	r3, [sp, #16]
 243:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 111              		.loc 1 243 3 is_stmt 1 view .LVU26
 112              		.loc 1 243 24 is_stmt 0 view .LVU27
 113 0062 0594     		str	r4, [sp, #20]
 244:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 114              		.loc 1 244 3 is_stmt 1 view .LVU28
 115              		.loc 1 244 25 is_stmt 0 view .LVU29
 116 0064 0694     		str	r4, [sp, #24]
 245:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 117              		.loc 1 245 3 is_stmt 1 view .LVU30
 118 0066 03A9     		add	r1, sp, #12
 119 0068 2846     		mov	r0, r5
 120 006a FFF7FEFF 		bl	HAL_GPIO_Init
 121              	.LVL1:
 246:Core/Src/main.c **** 
 247:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 248:Core/Src/main.c **** 
 249:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 250:Core/Src/main.c **** }
 122              		.loc 1 250 1 is_stmt 0 view .LVU31
 123 006e 09B0     		add	sp, sp, #36
 124              	.LCFI2:
 125              		.cfi_def_cfa_offset 12
 126              		@ sp needed
 127 0070 30BD     		pop	{r4, r5, pc}
 128              	.L4:
 129 0072 00BF     		.align	2
 130              	.L3:
 131 0074 00380240 		.word	1073887232
 132 0078 00040240 		.word	1073873920
 133              		.cfi_endproc
 134              	.LFE161:
 136              		.section	.text.calculate_mandelbrot_fixed_point_arithmetic,"ax",%progbits
 137              		.align	1
 138              		.global	calculate_mandelbrot_fixed_point_arithmetic
 139              		.syntax unified
 140              		.thumb
 141              		.thumb_func
 143              	calculate_mandelbrot_fixed_point_arithmetic:
 144              	.LVL2:
 145              	.LFB162:
 251:Core/Src/main.c **** 
 252:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 253:Core/Src/main.c **** //TODO: Function signatures you defined previously , implement them here
 254:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations){
 146              		.loc 1 254 96 is_stmt 1 view -0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s 			page 8


 149              		@ frame_needed = 0, uses_anonymous_args = 0
 150              		.loc 1 254 96 is_stmt 0 view .LVU33
 151 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 152              	.LCFI3:
 153              		.cfi_def_cfa_offset 36
 154              		.cfi_offset 4, -36
 155              		.cfi_offset 5, -32
 156              		.cfi_offset 6, -28
 157              		.cfi_offset 7, -24
 158              		.cfi_offset 8, -20
 159              		.cfi_offset 9, -16
 160              		.cfi_offset 10, -12
 161              		.cfi_offset 11, -8
 162              		.cfi_offset 14, -4
 163 0004 83B0     		sub	sp, sp, #12
 164              	.LCFI4:
 165              		.cfi_def_cfa_offset 48
 166 0006 0646     		mov	r6, r0
 167 0008 0191     		str	r1, [sp, #4]
 168 000a 1446     		mov	r4, r2
 255:Core/Src/main.c ****     const int SCALE = 1000;
 169              		.loc 1 255 5 is_stmt 1 view .LVU34
 170              	.LVL3:
 256:Core/Src/main.c ****     const int THREE_FIVE = 3500;
 171              		.loc 1 256 5 view .LVU35
 257:Core/Src/main.c ****     const int TWO = 2000;
 172              		.loc 1 257 5 view .LVU36
 258:Core/Src/main.c ****     const int TWO_FIVE = 2500;
 173              		.loc 1 258 5 view .LVU37
 259:Core/Src/main.c ****     const int ONE = 1000;
 174              		.loc 1 259 5 view .LVU38
 260:Core/Src/main.c ****     const int FOUR = 4000;
 175              		.loc 1 260 5 view .LVU39
 261:Core/Src/main.c **** 
 262:Core/Src/main.c ****     checksum = 0;
 176              		.loc 1 262 5 view .LVU40
 177              		.loc 1 262 14 is_stmt 0 view .LVU41
 178 000c 294B     		ldr	r3, .L16
 179 000e 0020     		movs	r0, #0
 180              	.LVL4:
 181              		.loc 1 262 14 view .LVU42
 182 0010 0021     		movs	r1, #0
 183              	.LVL5:
 184              		.loc 1 262 14 view .LVU43
 185 0012 C3E90001 		strd	r0, [r3]
 263:Core/Src/main.c ****     for (int32_t y = 0; y < height; y++) {
 186              		.loc 1 263 5 is_stmt 1 view .LVU44
 187              	.LBB7:
 188              		.loc 1 263 10 view .LVU45
 189              	.LVL6:
 190              		.loc 1 263 18 is_stmt 0 view .LVU46
 191 0016 4FF00008 		mov	r8, #0
 192              		.loc 1 263 5 view .LVU47
 193 001a 40E0     		b	.L6
 194              	.LVL7:
 195              	.L9:
 196              	.LBB8:
ARM GAS  C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s 			page 9


 197              	.LBB9:
 198              	.LBB10:
 264:Core/Src/main.c ****         for (int32_t x = 0; x < width; x++) {
 265:Core/Src/main.c ****             int32_t x0 = ((int32_t)x * THREE_FIVE) / width - TWO_FIVE;
 266:Core/Src/main.c ****             int32_t y0 = ((int32_t)y * TWO) / height - ONE;
 267:Core/Src/main.c ****             int32_t xi = 0;
 268:Core/Src/main.c ****             int32_t yi = 0;
 269:Core/Src/main.c ****             int32_t iteration = 0;
 270:Core/Src/main.c ****             while (((((int32_t)xi * xi + (int32_t)yi * yi) / SCALE) <= FOUR) && (iteration < max_it
 271:Core/Src/main.c ****                 int32_t xi_temp = ((int32_t)xi * xi - (int32_t)yi * yi) / SCALE + x0;
 199              		.loc 1 271 17 is_stmt 1 view .LVU48
 200              		.loc 1 271 53 is_stmt 0 view .LVU49
 201 001c A2EB0902 		sub	r2, r2, r9
 202              		.loc 1 271 73 view .LVU50
 203 0020 254F     		ldr	r7, .L16+4
 204 0022 87FB02BA 		smull	fp, r10, r7, r2
 205 0026 D217     		asrs	r2, r2, #31
 206 0028 C2EBAA12 		rsb	r2, r2, r10, asr #6
 207              	.LVL8:
 272:Core/Src/main.c ****                 int32_t yi_temp = ((int32_t)2 * xi * yi) / SCALE + y0;
 208              		.loc 1 272 17 is_stmt 1 view .LVU51
 209              		.loc 1 272 52 is_stmt 0 view .LVU52
 210 002c 01FB03F3 		mul	r3, r1, r3
 211              	.LVL9:
 212              		.loc 1 272 58 view .LVU53
 213 0030 87FB0319 		smull	r1, r9, r7, r3
 214              	.LVL10:
 215              		.loc 1 272 58 view .LVU54
 216 0034 DB17     		asrs	r3, r3, #31
 217 0036 C3EB6913 		rsb	r3, r3, r9, asr #5
 218              		.loc 1 272 25 view .LVU55
 219 003a 03EB0C01 		add	r1, r3, ip
 220              	.LVL11:
 273:Core/Src/main.c ****                 xi = xi_temp;
 221              		.loc 1 273 17 is_stmt 1 view .LVU56
 274:Core/Src/main.c ****                 yi = yi_temp;
 222              		.loc 1 274 17 view .LVU57
 275:Core/Src/main.c ****                 iteration++;
 223              		.loc 1 275 17 view .LVU58
 224              		.loc 1 275 26 is_stmt 0 view .LVU59
 225 003e 0130     		adds	r0, r0, #1
 226              	.LVL12:
 273:Core/Src/main.c ****                 xi = xi_temp;
 227              		.loc 1 273 20 view .LVU60
 228 0040 02EB0E03 		add	r3, r2, lr
 229              	.LVL13:
 230              	.L7:
 273:Core/Src/main.c ****                 xi = xi_temp;
 231              		.loc 1 273 20 view .LVU61
 232              	.LBE10:
 270:Core/Src/main.c ****                 int32_t xi_temp = ((int32_t)xi * xi - (int32_t)yi * yi) / SCALE + x0;
 233              		.loc 1 270 78 is_stmt 1 view .LVU62
 270:Core/Src/main.c ****                 int32_t xi_temp = ((int32_t)xi * xi - (int32_t)yi * yi) / SCALE + x0;
 234              		.loc 1 270 35 is_stmt 0 view .LVU63
 235 0044 03FB03F2 		mul	r2, r3, r3
 270:Core/Src/main.c ****                 int32_t xi_temp = ((int32_t)xi * xi - (int32_t)yi * yi) / SCALE + x0;
 236              		.loc 1 270 54 view .LVU64
ARM GAS  C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s 			page 10


 237 0048 01FB01F9 		mul	r9, r1, r1
 270:Core/Src/main.c ****                 int32_t xi_temp = ((int32_t)xi * xi - (int32_t)yi * yi) / SCALE + x0;
 238              		.loc 1 270 40 view .LVU65
 239 004c 02EB090B 		add	fp, r2, r9
 270:Core/Src/main.c ****                 int32_t xi_temp = ((int32_t)xi * xi - (int32_t)yi * yi) / SCALE + x0;
 240              		.loc 1 270 78 view .LVU66
 241 0050 1A4F     		ldr	r7, .L16+8
 242 0052 BB45     		cmp	fp, r7
 243 0054 01DC     		bgt	.L8
 270:Core/Src/main.c ****                 int32_t xi_temp = ((int32_t)xi * xi - (int32_t)yi * yi) / SCALE + x0;
 244              		.loc 1 270 78 discriminator 1 view .LVU67
 245 0056 A042     		cmp	r0, r4
 246 0058 E0DB     		blt	.L9
 247              	.L8:
 276:Core/Src/main.c ****             }
 277:Core/Src/main.c ****             checksum += iteration;
 248              		.loc 1 277 13 is_stmt 1 view .LVU68
 249              		.loc 1 277 22 is_stmt 0 view .LVU69
 250 005a 1649     		ldr	r1, .L16
 251              	.LVL14:
 252              		.loc 1 277 22 view .LVU70
 253 005c 0B68     		ldr	r3, [r1]
 254              	.LVL15:
 255              		.loc 1 277 22 view .LVU71
 256 005e 4A68     		ldr	r2, [r1, #4]
 257 0060 1B18     		adds	r3, r3, r0
 258 0062 42EBE072 		adc	r2, r2, r0, asr #31
 259 0066 0B60     		str	r3, [r1]
 260 0068 4A60     		str	r2, [r1, #4]
 261              	.LBE9:
 264:Core/Src/main.c ****             int32_t x0 = ((int32_t)x * THREE_FIVE) / width - TWO_FIVE;
 262              		.loc 1 264 41 is_stmt 1 discriminator 2 view .LVU72
 263 006a 0135     		adds	r5, r5, #1
 264              	.LVL16:
 265              	.L11:
 264:Core/Src/main.c ****             int32_t x0 = ((int32_t)x * THREE_FIVE) / width - TWO_FIVE;
 266              		.loc 1 264 31 discriminator 1 view .LVU73
 267 006c B542     		cmp	r5, r6
 268 006e 14DA     		bge	.L14
 269              	.LBB11:
 265:Core/Src/main.c ****             int32_t y0 = ((int32_t)y * TWO) / height - ONE;
 270              		.loc 1 265 13 view .LVU74
 265:Core/Src/main.c ****             int32_t y0 = ((int32_t)y * TWO) / height - ONE;
 271              		.loc 1 265 38 is_stmt 0 view .LVU75
 272 0070 40F6AC5E 		movw	lr, #3500
 273 0074 0EFB05FE 		mul	lr, lr, r5
 265:Core/Src/main.c ****             int32_t y0 = ((int32_t)y * TWO) / height - ONE;
 274              		.loc 1 265 52 view .LVU76
 275 0078 9EFBF6FE 		sdiv	lr, lr, r6
 265:Core/Src/main.c ****             int32_t y0 = ((int32_t)y * TWO) / height - ONE;
 276              		.loc 1 265 21 view .LVU77
 277 007c AEF6C41E 		subw	lr, lr, #2500
 278              	.LVL17:
 266:Core/Src/main.c ****             int32_t xi = 0;
 279              		.loc 1 266 13 is_stmt 1 view .LVU78
 266:Core/Src/main.c ****             int32_t xi = 0;
 280              		.loc 1 266 38 is_stmt 0 view .LVU79
ARM GAS  C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s 			page 11


 281 0080 4FF4FA6C 		mov	ip, #2000
 282 0084 0CFB08FC 		mul	ip, ip, r8
 266:Core/Src/main.c ****             int32_t xi = 0;
 283              		.loc 1 266 45 view .LVU80
 284 0088 019B     		ldr	r3, [sp, #4]
 285 008a 9CFBF3FC 		sdiv	ip, ip, r3
 266:Core/Src/main.c ****             int32_t xi = 0;
 286              		.loc 1 266 21 view .LVU81
 287 008e ACF57A7C 		sub	ip, ip, #1000
 288              	.LVL18:
 267:Core/Src/main.c ****             int32_t yi = 0;
 289              		.loc 1 267 13 is_stmt 1 view .LVU82
 268:Core/Src/main.c ****             int32_t iteration = 0;
 290              		.loc 1 268 13 view .LVU83
 269:Core/Src/main.c ****             while (((((int32_t)xi * xi + (int32_t)yi * yi) / SCALE) <= FOUR) && (iteration < max_it
 291              		.loc 1 269 13 view .LVU84
 270:Core/Src/main.c ****                 int32_t xi_temp = ((int32_t)xi * xi - (int32_t)yi * yi) / SCALE + x0;
 292              		.loc 1 270 13 view .LVU85
 269:Core/Src/main.c ****             while (((((int32_t)xi * xi + (int32_t)yi * yi) / SCALE) <= FOUR) && (iteration < max_it
 293              		.loc 1 269 21 is_stmt 0 view .LVU86
 294 0092 0020     		movs	r0, #0
 268:Core/Src/main.c ****             int32_t iteration = 0;
 295              		.loc 1 268 21 view .LVU87
 296 0094 0146     		mov	r1, r0
 267:Core/Src/main.c ****             int32_t yi = 0;
 297              		.loc 1 267 21 view .LVU88
 298 0096 0346     		mov	r3, r0
 270:Core/Src/main.c ****                 int32_t xi_temp = ((int32_t)xi * xi - (int32_t)yi * yi) / SCALE + x0;
 299              		.loc 1 270 19 view .LVU89
 300 0098 D4E7     		b	.L7
 301              	.LVL19:
 302              	.L14:
 270:Core/Src/main.c ****                 int32_t xi_temp = ((int32_t)xi * xi - (int32_t)yi * yi) / SCALE + x0;
 303              		.loc 1 270 19 view .LVU90
 304              	.LBE11:
 305              	.LBE8:
 263:Core/Src/main.c ****         for (int32_t x = 0; x < width; x++) {
 306              		.loc 1 263 38 is_stmt 1 discriminator 2 view .LVU91
 307 009a 08F10108 		add	r8, r8, #1
 308              	.LVL20:
 309              	.L6:
 263:Core/Src/main.c ****         for (int32_t x = 0; x < width; x++) {
 310              		.loc 1 263 27 discriminator 1 view .LVU92
 311 009e 019B     		ldr	r3, [sp, #4]
 312 00a0 9845     		cmp	r8, r3
 313 00a2 01DA     		bge	.L15
 314              	.LBB12:
 264:Core/Src/main.c ****             int32_t x0 = ((int32_t)x * THREE_FIVE) / width - TWO_FIVE;
 315              		.loc 1 264 22 is_stmt 0 view .LVU93
 316 00a4 0025     		movs	r5, #0
 317 00a6 E1E7     		b	.L11
 318              	.L15:
 319              	.LBE12:
 320              	.LBE7:
 278:Core/Src/main.c ****         }
 279:Core/Src/main.c ****     }
 280:Core/Src/main.c ****     return checksum;
ARM GAS  C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s 			page 12


 321              		.loc 1 280 5 is_stmt 1 view .LVU94
 281:Core/Src/main.c **** }
 322              		.loc 1 281 1 is_stmt 0 view .LVU95
 323 00a8 024B     		ldr	r3, .L16
 324 00aa D3E90001 		ldrd	r0, [r3]
 325 00ae 03B0     		add	sp, sp, #12
 326              	.LCFI5:
 327              		.cfi_def_cfa_offset 36
 328              		@ sp needed
 329 00b0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 330              	.LVL21:
 331              	.L17:
 332              		.loc 1 281 1 view .LVU96
 333              		.align	2
 334              	.L16:
 335 00b4 00000000 		.word	checksum
 336 00b8 D34D6210 		.word	274877907
 337 00bc E70C3D00 		.word	4000999
 338              		.cfi_endproc
 339              	.LFE162:
 341              		.global	__aeabi_i2d
 342              		.global	__aeabi_ddiv
 343              		.global	__aeabi_dmul
 344              		.global	__aeabi_dsub
 345              		.global	__aeabi_dadd
 346              		.global	__aeabi_dcmple
 347              		.section	.text.calculate_mandelbrot_double,"ax",%progbits
 348              		.align	1
 349              		.global	calculate_mandelbrot_double
 350              		.syntax unified
 351              		.thumb
 352              		.thumb_func
 354              	calculate_mandelbrot_double:
 355              	.LVL22:
 356              	.LFB163:
 282:Core/Src/main.c **** 
 283:Core/Src/main.c **** //TODO: Mandelbroat using variable type double
 284:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations){
 357              		.loc 1 284 80 is_stmt 1 view -0
 358              		.cfi_startproc
 359              		@ args = 0, pretend = 0, frame = 48
 360              		@ frame_needed = 0, uses_anonymous_args = 0
 361              		.loc 1 284 80 is_stmt 0 view .LVU98
 362 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 363              	.LCFI6:
 364              		.cfi_def_cfa_offset 36
 365              		.cfi_offset 4, -36
 366              		.cfi_offset 5, -32
 367              		.cfi_offset 6, -28
 368              		.cfi_offset 7, -24
 369              		.cfi_offset 8, -20
 370              		.cfi_offset 9, -16
 371              		.cfi_offset 10, -12
 372              		.cfi_offset 11, -8
 373              		.cfi_offset 14, -4
 374 0004 8DB0     		sub	sp, sp, #52
 375              	.LCFI7:
ARM GAS  C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s 			page 13


 376              		.cfi_def_cfa_offset 88
 377 0006 0890     		str	r0, [sp, #32]
 378 0008 8946     		mov	r9, r1
 379 000a 0B92     		str	r2, [sp, #44]
 285:Core/Src/main.c ****     //uint64_t mandelbrot_sum = 0;
 286:Core/Src/main.c ****     //TODO: Complete the function implementation
 287:Core/Src/main.c ****     checksum = 0;
 380              		.loc 1 287 5 is_stmt 1 view .LVU99
 381              		.loc 1 287 14 is_stmt 0 view .LVU100
 382 000c 514B     		ldr	r3, .L31
 383 000e 0020     		movs	r0, #0
 384              	.LVL23:
 385              		.loc 1 287 14 view .LVU101
 386 0010 0021     		movs	r1, #0
 387              	.LVL24:
 388              		.loc 1 287 14 view .LVU102
 389 0012 C3E90001 		strd	r0, [r3]
 288:Core/Src/main.c ****     for (int y = 0; y <= height-1; y++) {
 390              		.loc 1 288 5 is_stmt 1 view .LVU103
 391              	.LBB13:
 392              		.loc 1 288 10 view .LVU104
 393              	.LVL25:
 394              		.loc 1 288 14 is_stmt 0 view .LVU105
 395 0016 4FF00008 		mov	r8, #0
 396 001a CDF82890 		str	r9, [sp, #40]
 397              		.loc 1 288 5 view .LVU106
 398 001e 89E0     		b	.L19
 399              	.LVL26:
 400              	.L23:
 401              	.LBB14:
 402              	.LBB15:
 403              	.LBB16:
 289:Core/Src/main.c ****         for (int x = 0; x <= width-1; x++) {
 290:Core/Src/main.c ****             double x0 = ((double)x/(double)width)*(3.5)-2.5;
 291:Core/Src/main.c ****             double y0 = ((double)y/(double)height)*(2.0)-1.0;
 292:Core/Src/main.c ****             int iteration = 0;
 293:Core/Src/main.c ****             double xi = 0;
 294:Core/Src/main.c ****             double yi = 0;
 295:Core/Src/main.c ****             while ((xi*xi + yi*yi) <= (4) && iteration < max_iterations) {
 296:Core/Src/main.c ****                 double temp = (xi*xi - yi*yi);
 404              		.loc 1 296 17 is_stmt 1 view .LVU107
 405              		.loc 1 296 24 is_stmt 0 view .LVU108
 406 0020 4246     		mov	r2, r8
 407 0022 4B46     		mov	r3, r9
 408 0024 DDE90001 		ldrd	r0, [sp]
 409 0028 FFF7FEFF 		bl	__aeabi_dsub
 410              	.LVL27:
 411 002c 8046     		mov	r8, r0
 412 002e 8946     		mov	r9, r1
 413              	.LVL28:
 297:Core/Src/main.c ****                 yi = (2*xi*yi)+y0;
 414              		.loc 1 297 17 is_stmt 1 view .LVU109
 415              		.loc 1 297 24 is_stmt 0 view .LVU110
 416 0030 2246     		mov	r2, r4
 417 0032 2B46     		mov	r3, r5
 418 0034 2046     		mov	r0, r4
 419 0036 2946     		mov	r1, r5
ARM GAS  C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s 			page 14


 420 0038 FFF7FEFF 		bl	__aeabi_dadd
 421              	.LVL29:
 422              		.loc 1 297 27 view .LVU111
 423 003c 5246     		mov	r2, r10
 424 003e 5B46     		mov	r3, fp
 425 0040 FFF7FEFF 		bl	__aeabi_dmul
 426              	.LVL30:
 427              		.loc 1 297 20 view .LVU112
 428 0044 DDE90423 		ldrd	r2, [sp, #16]
 429 0048 FFF7FEFF 		bl	__aeabi_dadd
 430              	.LVL31:
 431 004c 8246     		mov	r10, r0
 432              	.LVL32:
 433              		.loc 1 297 20 view .LVU113
 434 004e 8B46     		mov	fp, r1
 435              	.LVL33:
 298:Core/Src/main.c ****                 xi = temp+x0;
 436              		.loc 1 298 17 is_stmt 1 view .LVU114
 437              		.loc 1 298 20 is_stmt 0 view .LVU115
 438 0050 4246     		mov	r2, r8
 439 0052 4B46     		mov	r3, r9
 440 0054 DDE90201 		ldrd	r0, [sp, #8]
 441 0058 FFF7FEFF 		bl	__aeabi_dadd
 442              	.LVL34:
 443 005c 0446     		mov	r4, r0
 444              	.LVL35:
 445              		.loc 1 298 20 view .LVU116
 446 005e 0D46     		mov	r5, r1
 447              	.LVL36:
 299:Core/Src/main.c ****                 iteration++;
 448              		.loc 1 299 17 is_stmt 1 view .LVU117
 449              		.loc 1 299 26 is_stmt 0 view .LVU118
 450 0060 0136     		adds	r6, r6, #1
 451              	.LVL37:
 452              	.L20:
 453              		.loc 1 299 26 view .LVU119
 454              	.LBE16:
 295:Core/Src/main.c ****                 double temp = (xi*xi - yi*yi);
 455              		.loc 1 295 43 is_stmt 1 view .LVU120
 295:Core/Src/main.c ****                 double temp = (xi*xi - yi*yi);
 456              		.loc 1 295 23 is_stmt 0 view .LVU121
 457 0062 2246     		mov	r2, r4
 458 0064 2B46     		mov	r3, r5
 459 0066 2046     		mov	r0, r4
 460 0068 2946     		mov	r1, r5
 461 006a FFF7FEFF 		bl	__aeabi_dmul
 462              	.LVL38:
 463 006e CDE90001 		strd	r0, [sp]
 295:Core/Src/main.c ****                 double temp = (xi*xi - yi*yi);
 464              		.loc 1 295 31 view .LVU122
 465 0072 5246     		mov	r2, r10
 466 0074 5B46     		mov	r3, fp
 467 0076 5046     		mov	r0, r10
 468 0078 5946     		mov	r1, fp
 469 007a FFF7FEFF 		bl	__aeabi_dmul
 470              	.LVL39:
 471 007e 8046     		mov	r8, r0
ARM GAS  C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s 			page 15


 472 0080 8946     		mov	r9, r1
 295:Core/Src/main.c ****                 double temp = (xi*xi - yi*yi);
 473              		.loc 1 295 27 view .LVU123
 474 0082 0246     		mov	r2, r0
 475 0084 0B46     		mov	r3, r1
 476 0086 DDE90001 		ldrd	r0, [sp]
 477 008a FFF7FEFF 		bl	__aeabi_dadd
 478              	.LVL40:
 295:Core/Src/main.c ****                 double temp = (xi*xi - yi*yi);
 479              		.loc 1 295 43 view .LVU124
 480 008e 0022     		movs	r2, #0
 481 0090 314B     		ldr	r3, .L31+4
 482 0092 FFF7FEFF 		bl	__aeabi_dcmple
 483              	.LVL41:
 484 0096 08B1     		cbz	r0, .L21
 295:Core/Src/main.c ****                 double temp = (xi*xi - yi*yi);
 485              		.loc 1 295 43 discriminator 1 view .LVU125
 486 0098 BE42     		cmp	r6, r7
 487 009a C1DB     		blt	.L23
 488              	.L21:
 300:Core/Src/main.c ****             }
 301:Core/Src/main.c ****             checksum += iteration;
 489              		.loc 1 301 13 is_stmt 1 view .LVU126
 490              		.loc 1 301 22 is_stmt 0 view .LVU127
 491 009c 2D48     		ldr	r0, .L31
 492 009e 0268     		ldr	r2, [r0]
 493 00a0 4168     		ldr	r1, [r0, #4]
 494 00a2 9219     		adds	r2, r2, r6
 495 00a4 41EBE671 		adc	r1, r1, r6, asr #31
 496 00a8 0260     		str	r2, [r0]
 497 00aa 4160     		str	r1, [r0, #4]
 498              	.LBE15:
 289:Core/Src/main.c ****             double x0 = ((double)x/(double)width)*(3.5)-2.5;
 499              		.loc 1 289 40 is_stmt 1 discriminator 2 view .LVU128
 500 00ac 079B     		ldr	r3, [sp, #28]
 501 00ae 0133     		adds	r3, r3, #1
 502 00b0 0793     		str	r3, [sp, #28]
 503              	.LVL42:
 504              	.L25:
 289:Core/Src/main.c ****             double x0 = ((double)x/(double)width)*(3.5)-2.5;
 505              		.loc 1 289 27 discriminator 1 view .LVU129
 506 00b2 079B     		ldr	r3, [sp, #28]
 507 00b4 089A     		ldr	r2, [sp, #32]
 508 00b6 9342     		cmp	r3, r2
 509 00b8 38DA     		bge	.L29
 510              	.LBB17:
 290:Core/Src/main.c ****             double y0 = ((double)y/(double)height)*(2.0)-1.0;
 511              		.loc 1 290 13 view .LVU130
 290:Core/Src/main.c ****             double y0 = ((double)y/(double)height)*(2.0)-1.0;
 512              		.loc 1 290 26 is_stmt 0 view .LVU131
 513 00ba 0798     		ldr	r0, [sp, #28]
 514 00bc FFF7FEFF 		bl	__aeabi_i2d
 515              	.LVL43:
 516 00c0 0446     		mov	r4, r0
 517 00c2 0D46     		mov	r5, r1
 290:Core/Src/main.c ****             double y0 = ((double)y/(double)height)*(2.0)-1.0;
 518              		.loc 1 290 36 view .LVU132
ARM GAS  C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s 			page 16


 519 00c4 0898     		ldr	r0, [sp, #32]
 520 00c6 FFF7FEFF 		bl	__aeabi_i2d
 521              	.LVL44:
 522 00ca 0246     		mov	r2, r0
 523 00cc 0B46     		mov	r3, r1
 290:Core/Src/main.c ****             double y0 = ((double)y/(double)height)*(2.0)-1.0;
 524              		.loc 1 290 35 view .LVU133
 525 00ce 2046     		mov	r0, r4
 526 00d0 2946     		mov	r1, r5
 527 00d2 FFF7FEFF 		bl	__aeabi_ddiv
 528              	.LVL45:
 290:Core/Src/main.c ****             double y0 = ((double)y/(double)height)*(2.0)-1.0;
 529              		.loc 1 290 50 view .LVU134
 530 00d6 0022     		movs	r2, #0
 531 00d8 204B     		ldr	r3, .L31+8
 532 00da FFF7FEFF 		bl	__aeabi_dmul
 533              	.LVL46:
 290:Core/Src/main.c ****             double y0 = ((double)y/(double)height)*(2.0)-1.0;
 534              		.loc 1 290 20 view .LVU135
 535 00de 0022     		movs	r2, #0
 536 00e0 1F4B     		ldr	r3, .L31+12
 537 00e2 FFF7FEFF 		bl	__aeabi_dsub
 538              	.LVL47:
 539 00e6 CDE90201 		strd	r0, [sp, #8]
 540              	.LVL48:
 291:Core/Src/main.c ****             int iteration = 0;
 541              		.loc 1 291 13 is_stmt 1 view .LVU136
 291:Core/Src/main.c ****             int iteration = 0;
 542              		.loc 1 291 26 is_stmt 0 view .LVU137
 543 00ea 0998     		ldr	r0, [sp, #36]
 544              	.LVL49:
 291:Core/Src/main.c ****             int iteration = 0;
 545              		.loc 1 291 26 view .LVU138
 546 00ec FFF7FEFF 		bl	__aeabi_i2d
 547              	.LVL50:
 548 00f0 0446     		mov	r4, r0
 549 00f2 0D46     		mov	r5, r1
 291:Core/Src/main.c ****             int iteration = 0;
 550              		.loc 1 291 36 view .LVU139
 551 00f4 0A98     		ldr	r0, [sp, #40]
 552 00f6 FFF7FEFF 		bl	__aeabi_i2d
 553              	.LVL51:
 554 00fa 0246     		mov	r2, r0
 555 00fc 0B46     		mov	r3, r1
 291:Core/Src/main.c ****             int iteration = 0;
 556              		.loc 1 291 35 view .LVU140
 557 00fe 2046     		mov	r0, r4
 558 0100 2946     		mov	r1, r5
 559 0102 FFF7FEFF 		bl	__aeabi_ddiv
 560              	.LVL52:
 561 0106 0246     		mov	r2, r0
 562 0108 0B46     		mov	r3, r1
 291:Core/Src/main.c ****             int iteration = 0;
 563              		.loc 1 291 51 view .LVU141
 564 010a FFF7FEFF 		bl	__aeabi_dadd
 565              	.LVL53:
 291:Core/Src/main.c ****             int iteration = 0;
ARM GAS  C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s 			page 17


 566              		.loc 1 291 20 view .LVU142
 567 010e 0022     		movs	r2, #0
 568 0110 144B     		ldr	r3, .L31+16
 569 0112 FFF7FEFF 		bl	__aeabi_dsub
 570              	.LVL54:
 571 0116 CDE90401 		strd	r0, [sp, #16]
 572              	.LVL55:
 292:Core/Src/main.c ****             double xi = 0;
 573              		.loc 1 292 13 is_stmt 1 view .LVU143
 293:Core/Src/main.c ****             double yi = 0;
 574              		.loc 1 293 13 view .LVU144
 294:Core/Src/main.c ****             while ((xi*xi + yi*yi) <= (4) && iteration < max_iterations) {
 575              		.loc 1 294 13 view .LVU145
 295:Core/Src/main.c ****                 double temp = (xi*xi - yi*yi);
 576              		.loc 1 295 13 view .LVU146
 294:Core/Src/main.c ****             while ((xi*xi + yi*yi) <= (4) && iteration < max_iterations) {
 577              		.loc 1 294 20 is_stmt 0 view .LVU147
 578 011a 4FF0000A 		mov	r10, #0
 579 011e 4FF0000B 		mov	fp, #0
 293:Core/Src/main.c ****             double yi = 0;
 580              		.loc 1 293 20 view .LVU148
 581 0122 5446     		mov	r4, r10
 582 0124 5D46     		mov	r5, fp
 292:Core/Src/main.c ****             double xi = 0;
 583              		.loc 1 292 17 view .LVU149
 584 0126 0026     		movs	r6, #0
 585 0128 0B9F     		ldr	r7, [sp, #44]
 295:Core/Src/main.c ****                 double temp = (xi*xi - yi*yi);
 586              		.loc 1 295 19 view .LVU150
 587 012a 9AE7     		b	.L20
 588              	.LVL56:
 589              	.L29:
 295:Core/Src/main.c ****                 double temp = (xi*xi - yi*yi);
 590              		.loc 1 295 19 view .LVU151
 591              	.LBE17:
 592              	.LBE14:
 288:Core/Src/main.c ****         for (int x = 0; x <= width-1; x++) {
 593              		.loc 1 288 37 discriminator 2 view .LVU152
 594 012c DDF82480 		ldr	r8, [sp, #36]
 288:Core/Src/main.c ****         for (int x = 0; x <= width-1; x++) {
 595              		.loc 1 288 37 is_stmt 1 discriminator 2 view .LVU153
 596 0130 08F10108 		add	r8, r8, #1
 597              	.LVL57:
 598              	.L19:
 288:Core/Src/main.c ****         for (int x = 0; x <= width-1; x++) {
 599              		.loc 1 288 23 discriminator 1 view .LVU154
 600 0134 0A9B     		ldr	r3, [sp, #40]
 601 0136 9845     		cmp	r8, r3
 602 0138 06DA     		bge	.L30
 603              	.LBB18:
 289:Core/Src/main.c ****             double x0 = ((double)x/(double)width)*(3.5)-2.5;
 604              		.loc 1 289 18 is_stmt 0 view .LVU155
 605 013a 4FF0000A 		mov	r10, #0
 606 013e CDF82480 		str	r8, [sp, #36]
 607 0142 CDF81CA0 		str	r10, [sp, #28]
 608 0146 B4E7     		b	.L25
 609              	.L30:
ARM GAS  C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s 			page 18


 289:Core/Src/main.c ****             double x0 = ((double)x/(double)width)*(3.5)-2.5;
 610              		.loc 1 289 18 view .LVU156
 611              	.LBE18:
 612              	.LBE13:
 302:Core/Src/main.c ****         }
 303:Core/Src/main.c ****     }
 304:Core/Src/main.c ****     return checksum;
 613              		.loc 1 304 5 is_stmt 1 view .LVU157
 305:Core/Src/main.c **** }
 614              		.loc 1 305 1 is_stmt 0 view .LVU158
 615 0148 024B     		ldr	r3, .L31
 616 014a D3E90001 		ldrd	r0, [r3]
 617 014e 0DB0     		add	sp, sp, #52
 618              	.LCFI8:
 619              		.cfi_def_cfa_offset 36
 620              		@ sp needed
 621 0150 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 622              	.LVL58:
 623              	.L32:
 624              		.loc 1 305 1 view .LVU159
 625              		.align	2
 626              	.L31:
 627 0154 00000000 		.word	checksum
 628 0158 00001040 		.word	1074790400
 629 015c 00000C40 		.word	1074528256
 630 0160 00000440 		.word	1074003968
 631 0164 0000F03F 		.word	1072693248
 632              		.cfi_endproc
 633              	.LFE163:
 635              		.global	__aeabi_i2f
 636              		.global	__aeabi_fdiv
 637              		.global	__aeabi_f2d
 638              		.global	__aeabi_d2f
 639              		.global	__aeabi_fsub
 640              		.global	__aeabi_fadd
 641              		.global	__aeabi_fmul
 642              		.global	__aeabi_fcmple
 643              		.section	.text.calculate_mandelbrot_float,"ax",%progbits
 644              		.align	1
 645              		.global	calculate_mandelbrot_float
 646              		.syntax unified
 647              		.thumb
 648              		.thumb_func
 650              	calculate_mandelbrot_float:
 651              	.LVL59:
 652              	.LFB164:
 306:Core/Src/main.c **** 
 307:Core/Src/main.c **** uint64_t calculate_mandelbrot_float(int width, int height, int max_iterations){
 653              		.loc 1 307 79 is_stmt 1 view -0
 654              		.cfi_startproc
 655              		@ args = 0, pretend = 0, frame = 16
 656              		@ frame_needed = 0, uses_anonymous_args = 0
 657              		.loc 1 307 79 is_stmt 0 view .LVU161
 658 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 659              	.LCFI9:
 660              		.cfi_def_cfa_offset 36
 661              		.cfi_offset 4, -36
ARM GAS  C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s 			page 19


 662              		.cfi_offset 5, -32
 663              		.cfi_offset 6, -28
 664              		.cfi_offset 7, -24
 665              		.cfi_offset 8, -20
 666              		.cfi_offset 9, -16
 667              		.cfi_offset 10, -12
 668              		.cfi_offset 11, -8
 669              		.cfi_offset 14, -4
 670 0004 85B0     		sub	sp, sp, #20
 671              	.LCFI10:
 672              		.cfi_def_cfa_offset 56
 673 0006 0190     		str	r0, [sp, #4]
 674 0008 8A46     		mov	r10, r1
 675 000a 9146     		mov	r9, r2
 308:Core/Src/main.c ****     //uint64_t mandelbrot_sum = 0;
 309:Core/Src/main.c ****     //TODO: Complete the function implementation
 310:Core/Src/main.c ****     checksum = 0;
 676              		.loc 1 310 5 is_stmt 1 view .LVU162
 677              		.loc 1 310 14 is_stmt 0 view .LVU163
 678 000c 444B     		ldr	r3, .L46
 679 000e 0020     		movs	r0, #0
 680              	.LVL60:
 681              		.loc 1 310 14 view .LVU164
 682 0010 0021     		movs	r1, #0
 683              	.LVL61:
 684              		.loc 1 310 14 view .LVU165
 685 0012 C3E90001 		strd	r0, [r3]
 311:Core/Src/main.c ****     for (int y = 0; y <= height-1; y++) {
 686              		.loc 1 311 5 is_stmt 1 view .LVU166
 687              	.LBB19:
 688              		.loc 1 311 10 view .LVU167
 689              	.LVL62:
 690              		.loc 1 311 14 is_stmt 0 view .LVU168
 691 0016 4FF0000B 		mov	fp, #0
 692 001a CDF80CA0 		str	r10, [sp, #12]
 693              		.loc 1 311 5 view .LVU169
 694 001e 71E0     		b	.L34
 695              	.LVL63:
 696              	.L38:
 697              	.LBB20:
 698              	.LBB21:
 699              	.LBB22:
 312:Core/Src/main.c ****         for (int x = 0; x <= width-1; x++) {
 313:Core/Src/main.c ****             float x0 = ((float)x/(float)width)*(3.5)-2.5;
 314:Core/Src/main.c ****             float y0 = ((float)y/(float)height)*(2.0)-1.0;
 315:Core/Src/main.c ****             int iteration = 0;
 316:Core/Src/main.c ****             float xi = 0;
 317:Core/Src/main.c ****             float yi = 0;
 318:Core/Src/main.c ****             while ((xi*xi + yi*yi) <= (4) && iteration < max_iterations) {
 319:Core/Src/main.c ****                 float temp = (xi*xi - yi*yi);
 700              		.loc 1 319 17 is_stmt 1 view .LVU170
 701              		.loc 1 319 23 is_stmt 0 view .LVU171
 702 0020 5946     		mov	r1, fp
 703 0022 5046     		mov	r0, r10
 704 0024 FFF7FEFF 		bl	__aeabi_fsub
 705              	.LVL64:
 706 0028 8246     		mov	r10, r0
ARM GAS  C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s 			page 20


 707              	.LVL65:
 320:Core/Src/main.c ****                 yi = (2*xi*yi)+y0;
 708              		.loc 1 320 17 is_stmt 1 view .LVU172
 709              		.loc 1 320 24 is_stmt 0 view .LVU173
 710 002a 2146     		mov	r1, r4
 711 002c 2046     		mov	r0, r4
 712              	.LVL66:
 713              		.loc 1 320 24 view .LVU174
 714 002e FFF7FEFF 		bl	__aeabi_fadd
 715              	.LVL67:
 716              		.loc 1 320 27 view .LVU175
 717 0032 3146     		mov	r1, r6
 718 0034 FFF7FEFF 		bl	__aeabi_fmul
 719              	.LVL68:
 720              		.loc 1 320 20 view .LVU176
 721 0038 3946     		mov	r1, r7
 722 003a FFF7FEFF 		bl	__aeabi_fadd
 723              	.LVL69:
 724 003e 0646     		mov	r6, r0
 725              	.LVL70:
 321:Core/Src/main.c ****                 xi = temp+x0;
 726              		.loc 1 321 17 is_stmt 1 view .LVU177
 727              		.loc 1 321 20 is_stmt 0 view .LVU178
 728 0040 5146     		mov	r1, r10
 729 0042 4046     		mov	r0, r8
 730              	.LVL71:
 731              		.loc 1 321 20 view .LVU179
 732 0044 FFF7FEFF 		bl	__aeabi_fadd
 733              	.LVL72:
 734 0048 0446     		mov	r4, r0
 735              	.LVL73:
 322:Core/Src/main.c ****                 iteration++;
 736              		.loc 1 322 17 is_stmt 1 view .LVU180
 737              		.loc 1 322 26 is_stmt 0 view .LVU181
 738 004a 0135     		adds	r5, r5, #1
 739              	.LVL74:
 740              	.L35:
 741              		.loc 1 322 26 view .LVU182
 742              	.LBE22:
 318:Core/Src/main.c ****                 float temp = (xi*xi - yi*yi);
 743              		.loc 1 318 43 is_stmt 1 view .LVU183
 318:Core/Src/main.c ****                 float temp = (xi*xi - yi*yi);
 744              		.loc 1 318 23 is_stmt 0 view .LVU184
 745 004c 2146     		mov	r1, r4
 746 004e 2046     		mov	r0, r4
 747 0050 FFF7FEFF 		bl	__aeabi_fmul
 748              	.LVL75:
 749 0054 8246     		mov	r10, r0
 318:Core/Src/main.c ****                 float temp = (xi*xi - yi*yi);
 750              		.loc 1 318 31 view .LVU185
 751 0056 3146     		mov	r1, r6
 752 0058 3046     		mov	r0, r6
 753 005a FFF7FEFF 		bl	__aeabi_fmul
 754              	.LVL76:
 755 005e 8346     		mov	fp, r0
 318:Core/Src/main.c ****                 float temp = (xi*xi - yi*yi);
 756              		.loc 1 318 27 view .LVU186
ARM GAS  C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s 			page 21


 757 0060 0146     		mov	r1, r0
 758 0062 5046     		mov	r0, r10
 759 0064 FFF7FEFF 		bl	__aeabi_fadd
 760              	.LVL77:
 318:Core/Src/main.c ****                 float temp = (xi*xi - yi*yi);
 761              		.loc 1 318 43 view .LVU187
 762 0068 4FF08141 		mov	r1, #1082130432
 763 006c FFF7FEFF 		bl	__aeabi_fcmple
 764              	.LVL78:
 765 0070 08B1     		cbz	r0, .L36
 318:Core/Src/main.c ****                 float temp = (xi*xi - yi*yi);
 766              		.loc 1 318 43 discriminator 1 view .LVU188
 767 0072 4D45     		cmp	r5, r9
 768 0074 D4DB     		blt	.L38
 769              	.L36:
 323:Core/Src/main.c ****             }
 324:Core/Src/main.c ****             checksum += iteration;
 770              		.loc 1 324 13 is_stmt 1 view .LVU189
 771              		.loc 1 324 22 is_stmt 0 view .LVU190
 772 0076 2A48     		ldr	r0, .L46
 773 0078 0268     		ldr	r2, [r0]
 774 007a 4168     		ldr	r1, [r0, #4]
 775 007c 5219     		adds	r2, r2, r5
 776 007e 41EBE571 		adc	r1, r1, r5, asr #31
 777 0082 0260     		str	r2, [r0]
 778 0084 4160     		str	r1, [r0, #4]
 779              	.LBE21:
 312:Core/Src/main.c ****             float x0 = ((float)x/(float)width)*(3.5)-2.5;
 780              		.loc 1 312 40 is_stmt 1 discriminator 2 view .LVU191
 781 0086 009B     		ldr	r3, [sp]
 782 0088 0133     		adds	r3, r3, #1
 783 008a 0093     		str	r3, [sp]
 784              	.LVL79:
 785              	.L40:
 312:Core/Src/main.c ****             float x0 = ((float)x/(float)width)*(3.5)-2.5;
 786              		.loc 1 312 27 discriminator 1 view .LVU192
 787 008c 009B     		ldr	r3, [sp]
 788 008e 019A     		ldr	r2, [sp, #4]
 789 0090 9342     		cmp	r3, r2
 790 0092 33DA     		bge	.L44
 791              	.LBB23:
 313:Core/Src/main.c ****             float y0 = ((float)y/(float)height)*(2.0)-1.0;
 792              		.loc 1 313 13 view .LVU193
 313:Core/Src/main.c ****             float y0 = ((float)y/(float)height)*(2.0)-1.0;
 793              		.loc 1 313 25 is_stmt 0 view .LVU194
 794 0094 0098     		ldr	r0, [sp]
 795 0096 FFF7FEFF 		bl	__aeabi_i2f
 796              	.LVL80:
 797 009a 0446     		mov	r4, r0
 313:Core/Src/main.c ****             float y0 = ((float)y/(float)height)*(2.0)-1.0;
 798              		.loc 1 313 34 view .LVU195
 799 009c 0198     		ldr	r0, [sp, #4]
 800 009e FFF7FEFF 		bl	__aeabi_i2f
 801              	.LVL81:
 802 00a2 0146     		mov	r1, r0
 313:Core/Src/main.c ****             float y0 = ((float)y/(float)height)*(2.0)-1.0;
 803              		.loc 1 313 33 view .LVU196
ARM GAS  C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s 			page 22


 804 00a4 2046     		mov	r0, r4
 805 00a6 FFF7FEFF 		bl	__aeabi_fdiv
 806              	.LVL82:
 807 00aa FFF7FEFF 		bl	__aeabi_f2d
 808              	.LVL83:
 313:Core/Src/main.c ****             float y0 = ((float)y/(float)height)*(2.0)-1.0;
 809              		.loc 1 313 47 view .LVU197
 810 00ae 0022     		movs	r2, #0
 811 00b0 1C4B     		ldr	r3, .L46+4
 812 00b2 FFF7FEFF 		bl	__aeabi_dmul
 813              	.LVL84:
 313:Core/Src/main.c ****             float y0 = ((float)y/(float)height)*(2.0)-1.0;
 814              		.loc 1 313 53 view .LVU198
 815 00b6 0022     		movs	r2, #0
 816 00b8 1B4B     		ldr	r3, .L46+8
 817 00ba FFF7FEFF 		bl	__aeabi_dsub
 818              	.LVL85:
 313:Core/Src/main.c ****             float y0 = ((float)y/(float)height)*(2.0)-1.0;
 819              		.loc 1 313 19 view .LVU199
 820 00be FFF7FEFF 		bl	__aeabi_d2f
 821              	.LVL86:
 822 00c2 8046     		mov	r8, r0
 823              	.LVL87:
 314:Core/Src/main.c ****             int iteration = 0;
 824              		.loc 1 314 13 is_stmt 1 view .LVU200
 314:Core/Src/main.c ****             int iteration = 0;
 825              		.loc 1 314 25 is_stmt 0 view .LVU201
 826 00c4 0298     		ldr	r0, [sp, #8]
 827              	.LVL88:
 314:Core/Src/main.c ****             int iteration = 0;
 828              		.loc 1 314 25 view .LVU202
 829 00c6 FFF7FEFF 		bl	__aeabi_i2f
 830              	.LVL89:
 831 00ca 0446     		mov	r4, r0
 314:Core/Src/main.c ****             int iteration = 0;
 832              		.loc 1 314 34 view .LVU203
 833 00cc 0398     		ldr	r0, [sp, #12]
 834 00ce FFF7FEFF 		bl	__aeabi_i2f
 835              	.LVL90:
 836 00d2 0146     		mov	r1, r0
 314:Core/Src/main.c ****             int iteration = 0;
 837              		.loc 1 314 33 view .LVU204
 838 00d4 2046     		mov	r0, r4
 839 00d6 FFF7FEFF 		bl	__aeabi_fdiv
 840              	.LVL91:
 841 00da FFF7FEFF 		bl	__aeabi_f2d
 842              	.LVL92:
 843 00de 0246     		mov	r2, r0
 844 00e0 0B46     		mov	r3, r1
 314:Core/Src/main.c ****             int iteration = 0;
 845              		.loc 1 314 48 view .LVU205
 846 00e2 FFF7FEFF 		bl	__aeabi_dadd
 847              	.LVL93:
 314:Core/Src/main.c ****             int iteration = 0;
 848              		.loc 1 314 54 view .LVU206
 849 00e6 0022     		movs	r2, #0
 850 00e8 104B     		ldr	r3, .L46+12
ARM GAS  C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s 			page 23


 851 00ea FFF7FEFF 		bl	__aeabi_dsub
 852              	.LVL94:
 314:Core/Src/main.c ****             int iteration = 0;
 853              		.loc 1 314 19 view .LVU207
 854 00ee FFF7FEFF 		bl	__aeabi_d2f
 855              	.LVL95:
 856 00f2 0746     		mov	r7, r0
 857              	.LVL96:
 315:Core/Src/main.c ****             float xi = 0;
 858              		.loc 1 315 13 is_stmt 1 view .LVU208
 316:Core/Src/main.c ****             float yi = 0;
 859              		.loc 1 316 13 view .LVU209
 317:Core/Src/main.c ****             while ((xi*xi + yi*yi) <= (4) && iteration < max_iterations) {
 860              		.loc 1 317 13 view .LVU210
 318:Core/Src/main.c ****                 float temp = (xi*xi - yi*yi);
 861              		.loc 1 318 13 view .LVU211
 317:Core/Src/main.c ****             while ((xi*xi + yi*yi) <= (4) && iteration < max_iterations) {
 862              		.loc 1 317 19 is_stmt 0 view .LVU212
 863 00f4 0026     		movs	r6, #0
 316:Core/Src/main.c ****             float yi = 0;
 864              		.loc 1 316 19 view .LVU213
 865 00f6 3446     		mov	r4, r6
 315:Core/Src/main.c ****             float xi = 0;
 866              		.loc 1 315 17 view .LVU214
 867 00f8 0025     		movs	r5, #0
 318:Core/Src/main.c ****                 float temp = (xi*xi - yi*yi);
 868              		.loc 1 318 19 view .LVU215
 869 00fa A7E7     		b	.L35
 870              	.LVL97:
 871              	.L44:
 318:Core/Src/main.c ****                 float temp = (xi*xi - yi*yi);
 872              		.loc 1 318 19 view .LVU216
 873              	.LBE23:
 874              	.LBE20:
 311:Core/Src/main.c ****         for (int x = 0; x <= width-1; x++) {
 875              		.loc 1 311 37 discriminator 2 view .LVU217
 876 00fc DDF808B0 		ldr	fp, [sp, #8]
 311:Core/Src/main.c ****         for (int x = 0; x <= width-1; x++) {
 877              		.loc 1 311 37 is_stmt 1 discriminator 2 view .LVU218
 878 0100 0BF1010B 		add	fp, fp, #1
 879              	.LVL98:
 880              	.L34:
 311:Core/Src/main.c ****         for (int x = 0; x <= width-1; x++) {
 881              		.loc 1 311 23 discriminator 1 view .LVU219
 882 0104 039B     		ldr	r3, [sp, #12]
 883 0106 9B45     		cmp	fp, r3
 884 0108 04DA     		bge	.L45
 885              	.LBB24:
 312:Core/Src/main.c ****             float x0 = ((float)x/(float)width)*(3.5)-2.5;
 886              		.loc 1 312 18 is_stmt 0 view .LVU220
 887 010a 0023     		movs	r3, #0
 888 010c 0093     		str	r3, [sp]
 889 010e CDF808B0 		str	fp, [sp, #8]
 890 0112 BBE7     		b	.L40
 891              	.L45:
 312:Core/Src/main.c ****             float x0 = ((float)x/(float)width)*(3.5)-2.5;
 892              		.loc 1 312 18 view .LVU221
ARM GAS  C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s 			page 24


 893              	.LBE24:
 894              	.LBE19:
 325:Core/Src/main.c ****         }
 326:Core/Src/main.c ****     }
 327:Core/Src/main.c ****     return checksum;
 895              		.loc 1 327 5 is_stmt 1 view .LVU222
 328:Core/Src/main.c **** }
 896              		.loc 1 328 1 is_stmt 0 view .LVU223
 897 0114 024B     		ldr	r3, .L46
 898 0116 D3E90001 		ldrd	r0, [r3]
 899 011a 05B0     		add	sp, sp, #20
 900              	.LCFI11:
 901              		.cfi_def_cfa_offset 36
 902              		@ sp needed
 903 011c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 904              	.LVL99:
 905              	.L47:
 906              		.loc 1 328 1 view .LVU224
 907              		.align	2
 908              	.L46:
 909 0120 00000000 		.word	checksum
 910 0124 00000C40 		.word	1074528256
 911 0128 00000440 		.word	1074003968
 912 012c 0000F03F 		.word	1072693248
 913              		.cfi_endproc
 914              	.LFE164:
 916              		.section	.text.DWT_Init,"ax",%progbits
 917              		.align	1
 918              		.global	DWT_Init
 919              		.syntax unified
 920              		.thumb
 921              		.thumb_func
 923              	DWT_Init:
 924              	.LFB165:
 329:Core/Src/main.c **** 
 330:Core/Src/main.c **** void DWT_Init(void){
 925              		.loc 1 330 20 is_stmt 1 view -0
 926              		.cfi_startproc
 927              		@ args = 0, pretend = 0, frame = 0
 928              		@ frame_needed = 0, uses_anonymous_args = 0
 929              		@ link register save eliminated.
 331:Core/Src/main.c **** 	CoreDebug->DEMCR |= CoreDebug_DEMCR_TRCENA_Msk;
 930              		.loc 1 331 2 view .LVU226
 931              		.loc 1 331 11 is_stmt 0 view .LVU227
 932 0000 074A     		ldr	r2, .L49
 933 0002 D2F8FC30 		ldr	r3, [r2, #252]
 934              		.loc 1 331 19 view .LVU228
 935 0006 43F08073 		orr	r3, r3, #16777216
 936 000a C2F8FC30 		str	r3, [r2, #252]
 332:Core/Src/main.c **** 	DWT->CYCCNT = 0;
 937              		.loc 1 332 2 is_stmt 1 view .LVU229
 938              		.loc 1 332 14 is_stmt 0 view .LVU230
 939 000e 054B     		ldr	r3, .L49+4
 940 0010 0022     		movs	r2, #0
 941 0012 5A60     		str	r2, [r3, #4]
 333:Core/Src/main.c **** 	DWT->CTRL |= DWT_CTRL_CYCCNTENA_Msk;
 942              		.loc 1 333 2 is_stmt 1 view .LVU231
ARM GAS  C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s 			page 25


 943              		.loc 1 333 5 is_stmt 0 view .LVU232
 944 0014 1A68     		ldr	r2, [r3]
 945              		.loc 1 333 12 view .LVU233
 946 0016 42F00102 		orr	r2, r2, #1
 947 001a 1A60     		str	r2, [r3]
 334:Core/Src/main.c **** }
 948              		.loc 1 334 1 view .LVU234
 949 001c 7047     		bx	lr
 950              	.L50:
 951 001e 00BF     		.align	2
 952              	.L49:
 953 0020 00ED00E0 		.word	-536810240
 954 0024 001000E0 		.word	-536866816
 955              		.cfi_endproc
 956              	.LFE165:
 958              		.section	.text.Error_Handler,"ax",%progbits
 959              		.align	1
 960              		.global	Error_Handler
 961              		.syntax unified
 962              		.thumb
 963              		.thumb_func
 965              	Error_Handler:
 966              	.LFB166:
 335:Core/Src/main.c **** /* USER CODE END 4 */
 336:Core/Src/main.c **** 
 337:Core/Src/main.c **** /**
 338:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 339:Core/Src/main.c ****   * @retval None
 340:Core/Src/main.c ****   */
 341:Core/Src/main.c **** void Error_Handler(void)
 342:Core/Src/main.c **** {
 967              		.loc 1 342 1 is_stmt 1 view -0
 968              		.cfi_startproc
 969              		@ Volatile: function does not return.
 970              		@ args = 0, pretend = 0, frame = 0
 971              		@ frame_needed = 0, uses_anonymous_args = 0
 972              		@ link register save eliminated.
 343:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 344:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 345:Core/Src/main.c ****   __disable_irq();
 973              		.loc 1 345 3 view .LVU236
 974              	.LBB25:
 975              	.LBI25:
 976              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
ARM GAS  C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s 			page 26


  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
ARM GAS  C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s 			page 27


  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
ARM GAS  C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s 			page 28


 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s 			page 29


 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s 			page 30


 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s 			page 31


 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s 			page 32


 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
ARM GAS  C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s 			page 33


 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s 			page 34


 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s 			page 35


 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
ARM GAS  C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s 			page 36


 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
ARM GAS  C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s 			page 37


 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
ARM GAS  C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s 			page 38


 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
ARM GAS  C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s 			page 39


 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s 			page 40


 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
ARM GAS  C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s 			page 41


 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s 			page 42


 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 977              		.loc 2 960 27 view .LVU237
 978              	.LBB26:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 979              		.loc 2 962 3 view .LVU238
 980              		.syntax unified
 981              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 982 0000 72B6     		cpsid i
 983              	@ 0 "" 2
 984              		.thumb
 985              		.syntax unified
 986              	.L52:
 987              	.LBE26:
 988              	.LBE25:
 346:Core/Src/main.c ****   while (1)
 989              		.loc 1 346 3 view .LVU239
 347:Core/Src/main.c ****   {
 348:Core/Src/main.c ****   }
 990              		.loc 1 348 3 view .LVU240
 346:Core/Src/main.c ****   while (1)
 991              		.loc 1 346 9 view .LVU241
 992 0002 FEE7     		b	.L52
ARM GAS  C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s 			page 43


 993              		.cfi_endproc
 994              	.LFE166:
 996              		.section	.text.SystemClock_Config,"ax",%progbits
 997              		.align	1
 998              		.global	SystemClock_Config
 999              		.syntax unified
 1000              		.thumb
 1001              		.thumb_func
 1003              	SystemClock_Config:
 1004              	.LFB160:
 176:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1005              		.loc 1 176 1 view -0
 1006              		.cfi_startproc
 1007              		@ args = 0, pretend = 0, frame = 80
 1008              		@ frame_needed = 0, uses_anonymous_args = 0
 1009 0000 00B5     		push	{lr}
 1010              	.LCFI12:
 1011              		.cfi_def_cfa_offset 4
 1012              		.cfi_offset 14, -4
 1013 0002 95B0     		sub	sp, sp, #84
 1014              	.LCFI13:
 1015              		.cfi_def_cfa_offset 88
 177:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1016              		.loc 1 177 3 view .LVU243
 177:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1017              		.loc 1 177 22 is_stmt 0 view .LVU244
 1018 0004 3422     		movs	r2, #52
 1019 0006 0021     		movs	r1, #0
 1020 0008 07A8     		add	r0, sp, #28
 1021 000a FFF7FEFF 		bl	memset
 1022              	.LVL100:
 178:Core/Src/main.c **** 
 1023              		.loc 1 178 3 is_stmt 1 view .LVU245
 178:Core/Src/main.c **** 
 1024              		.loc 1 178 22 is_stmt 0 view .LVU246
 1025 000e 0023     		movs	r3, #0
 1026 0010 0293     		str	r3, [sp, #8]
 1027 0012 0393     		str	r3, [sp, #12]
 1028 0014 0493     		str	r3, [sp, #16]
 1029 0016 0593     		str	r3, [sp, #20]
 1030 0018 0693     		str	r3, [sp, #24]
 182:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1031              		.loc 1 182 3 is_stmt 1 view .LVU247
 1032              	.LBB27:
 182:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1033              		.loc 1 182 3 view .LVU248
 1034 001a 0093     		str	r3, [sp]
 182:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1035              		.loc 1 182 3 view .LVU249
 1036 001c 214A     		ldr	r2, .L59
 1037 001e 116C     		ldr	r1, [r2, #64]
 1038 0020 41F08051 		orr	r1, r1, #268435456
 1039 0024 1164     		str	r1, [r2, #64]
 182:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1040              		.loc 1 182 3 view .LVU250
 1041 0026 126C     		ldr	r2, [r2, #64]
 1042 0028 02F08052 		and	r2, r2, #268435456
ARM GAS  C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s 			page 44


 1043 002c 0092     		str	r2, [sp]
 182:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1044              		.loc 1 182 3 view .LVU251
 1045 002e 009A     		ldr	r2, [sp]
 1046              	.LBE27:
 182:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1047              		.loc 1 182 3 view .LVU252
 183:Core/Src/main.c **** 
 1048              		.loc 1 183 3 view .LVU253
 1049              	.LBB28:
 183:Core/Src/main.c **** 
 1050              		.loc 1 183 3 view .LVU254
 1051 0030 0193     		str	r3, [sp, #4]
 183:Core/Src/main.c **** 
 1052              		.loc 1 183 3 view .LVU255
 1053 0032 1D4A     		ldr	r2, .L59+4
 1054 0034 1368     		ldr	r3, [r2]
 1055 0036 23F44043 		bic	r3, r3, #49152
 1056 003a 43F48043 		orr	r3, r3, #16384
 1057 003e 1360     		str	r3, [r2]
 183:Core/Src/main.c **** 
 1058              		.loc 1 183 3 view .LVU256
 1059 0040 1368     		ldr	r3, [r2]
 1060 0042 03F44043 		and	r3, r3, #49152
 1061 0046 0193     		str	r3, [sp, #4]
 183:Core/Src/main.c **** 
 1062              		.loc 1 183 3 view .LVU257
 1063 0048 019B     		ldr	r3, [sp, #4]
 1064              	.LBE28:
 183:Core/Src/main.c **** 
 1065              		.loc 1 183 3 view .LVU258
 188:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1066              		.loc 1 188 3 view .LVU259
 188:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1067              		.loc 1 188 36 is_stmt 0 view .LVU260
 1068 004a 0123     		movs	r3, #1
 1069 004c 0793     		str	r3, [sp, #28]
 189:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1070              		.loc 1 189 3 is_stmt 1 view .LVU261
 189:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1071              		.loc 1 189 30 is_stmt 0 view .LVU262
 1072 004e 4FF48033 		mov	r3, #65536
 1073 0052 0893     		str	r3, [sp, #32]
 190:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1074              		.loc 1 190 3 is_stmt 1 view .LVU263
 190:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1075              		.loc 1 190 34 is_stmt 0 view .LVU264
 1076 0054 0223     		movs	r3, #2
 1077 0056 0D93     		str	r3, [sp, #52]
 191:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 15;
 1078              		.loc 1 191 3 is_stmt 1 view .LVU265
 191:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 15;
 1079              		.loc 1 191 35 is_stmt 0 view .LVU266
 1080 0058 4FF48002 		mov	r2, #4194304
 1081 005c 0E92     		str	r2, [sp, #56]
 192:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 1082              		.loc 1 192 3 is_stmt 1 view .LVU267
ARM GAS  C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s 			page 45


 192:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 1083              		.loc 1 192 30 is_stmt 0 view .LVU268
 1084 005e 0F22     		movs	r2, #15
 1085 0060 0F92     		str	r2, [sp, #60]
 193:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1086              		.loc 1 193 3 is_stmt 1 view .LVU269
 193:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1087              		.loc 1 193 30 is_stmt 0 view .LVU270
 1088 0062 9022     		movs	r2, #144
 1089 0064 1092     		str	r2, [sp, #64]
 194:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 1090              		.loc 1 194 3 is_stmt 1 view .LVU271
 194:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 1091              		.loc 1 194 30 is_stmt 0 view .LVU272
 1092 0066 1193     		str	r3, [sp, #68]
 195:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 1093              		.loc 1 195 3 is_stmt 1 view .LVU273
 195:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 1094              		.loc 1 195 30 is_stmt 0 view .LVU274
 1095 0068 1293     		str	r3, [sp, #72]
 196:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1096              		.loc 1 196 3 is_stmt 1 view .LVU275
 196:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1097              		.loc 1 196 30 is_stmt 0 view .LVU276
 1098 006a 1393     		str	r3, [sp, #76]
 197:Core/Src/main.c ****   {
 1099              		.loc 1 197 3 is_stmt 1 view .LVU277
 197:Core/Src/main.c ****   {
 1100              		.loc 1 197 7 is_stmt 0 view .LVU278
 1101 006c 07A8     		add	r0, sp, #28
 1102 006e FFF7FEFF 		bl	HAL_RCC_OscConfig
 1103              	.LVL101:
 197:Core/Src/main.c ****   {
 1104              		.loc 1 197 6 discriminator 1 view .LVU279
 1105 0072 98B9     		cbnz	r0, .L57
 204:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1106              		.loc 1 204 3 is_stmt 1 view .LVU280
 204:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1107              		.loc 1 204 31 is_stmt 0 view .LVU281
 1108 0074 0F23     		movs	r3, #15
 1109 0076 0293     		str	r3, [sp, #8]
 206:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1110              		.loc 1 206 3 is_stmt 1 view .LVU282
 206:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1111              		.loc 1 206 34 is_stmt 0 view .LVU283
 1112 0078 0223     		movs	r3, #2
 1113 007a 0393     		str	r3, [sp, #12]
 207:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1114              		.loc 1 207 3 is_stmt 1 view .LVU284
 207:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1115              		.loc 1 207 35 is_stmt 0 view .LVU285
 1116 007c 0023     		movs	r3, #0
 1117 007e 0493     		str	r3, [sp, #16]
 208:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1118              		.loc 1 208 3 is_stmt 1 view .LVU286
 208:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1119              		.loc 1 208 36 is_stmt 0 view .LVU287
ARM GAS  C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s 			page 46


 1120 0080 4FF4A053 		mov	r3, #5120
 1121 0084 0593     		str	r3, [sp, #20]
 209:Core/Src/main.c **** 
 1122              		.loc 1 209 3 is_stmt 1 view .LVU288
 209:Core/Src/main.c **** 
 1123              		.loc 1 209 36 is_stmt 0 view .LVU289
 1124 0086 4FF48053 		mov	r3, #4096
 1125 008a 0693     		str	r3, [sp, #24]
 211:Core/Src/main.c ****   {
 1126              		.loc 1 211 3 is_stmt 1 view .LVU290
 211:Core/Src/main.c ****   {
 1127              		.loc 1 211 7 is_stmt 0 view .LVU291
 1128 008c 0321     		movs	r1, #3
 1129 008e 02A8     		add	r0, sp, #8
 1130 0090 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1131              	.LVL102:
 211:Core/Src/main.c ****   {
 1132              		.loc 1 211 6 discriminator 1 view .LVU292
 1133 0094 20B9     		cbnz	r0, .L58
 215:Core/Src/main.c **** 
 1134              		.loc 1 215 1 view .LVU293
 1135 0096 15B0     		add	sp, sp, #84
 1136              	.LCFI14:
 1137              		.cfi_remember_state
 1138              		.cfi_def_cfa_offset 4
 1139              		@ sp needed
 1140 0098 5DF804FB 		ldr	pc, [sp], #4
 1141              	.L57:
 1142              	.LCFI15:
 1143              		.cfi_restore_state
 199:Core/Src/main.c ****   }
 1144              		.loc 1 199 5 is_stmt 1 view .LVU294
 1145 009c FFF7FEFF 		bl	Error_Handler
 1146              	.LVL103:
 1147              	.L58:
 213:Core/Src/main.c ****   }
 1148              		.loc 1 213 5 view .LVU295
 1149 00a0 FFF7FEFF 		bl	Error_Handler
 1150              	.LVL104:
 1151              	.L60:
 1152              		.align	2
 1153              	.L59:
 1154 00a4 00380240 		.word	1073887232
 1155 00a8 00700040 		.word	1073770496
 1156              		.cfi_endproc
 1157              	.LFE160:
 1159              		.global	__aeabi_ui2d
 1160              		.global	__aeabi_f2uiz
 1161              		.section	.text.main,"ax",%progbits
 1162              		.align	1
 1163              		.global	main
 1164              		.syntax unified
 1165              		.thumb
 1166              		.thumb_func
 1168              	main:
 1169              	.LFB159:
  88:Core/Src/main.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s 			page 47


 1170              		.loc 1 88 1 view -0
 1171              		.cfi_startproc
 1172              		@ args = 0, pretend = 0, frame = 0
 1173              		@ frame_needed = 0, uses_anonymous_args = 0
 1174 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1175              	.LCFI16:
 1176              		.cfi_def_cfa_offset 32
 1177              		.cfi_offset 4, -32
 1178              		.cfi_offset 5, -28
 1179              		.cfi_offset 6, -24
 1180              		.cfi_offset 7, -20
 1181              		.cfi_offset 8, -16
 1182              		.cfi_offset 9, -12
 1183              		.cfi_offset 10, -8
 1184              		.cfi_offset 14, -4
  97:Core/Src/main.c **** 
 1185              		.loc 1 97 3 view .LVU297
 1186 0004 FFF7FEFF 		bl	HAL_Init
 1187              	.LVL105:
 104:Core/Src/main.c **** 
 1188              		.loc 1 104 3 view .LVU298
 1189 0008 FFF7FEFF 		bl	SystemClock_Config
 1190              	.LVL106:
 111:Core/Src/main.c ****   DWT_Init();
 1191              		.loc 1 111 3 view .LVU299
 1192 000c FFF7FEFF 		bl	MX_GPIO_Init
 1193              	.LVL107:
 112:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1194              		.loc 1 112 3 view .LVU300
 1195 0010 FFF7FEFF 		bl	DWT_Init
 1196              	.LVL108:
 116:Core/Src/main.c ****           //TODO: Turn on LED 0 to signify the start of the operation
 1197              		.loc 1 116 3 view .LVU301
 1198              	.LBB29:
 116:Core/Src/main.c ****           //TODO: Turn on LED 0 to signify the start of the operation
 1199              		.loc 1 116 8 view .LVU302
 116:Core/Src/main.c ****           //TODO: Turn on LED 0 to signify the start of the operation
 1200              		.loc 1 116 12 is_stmt 0 view .LVU303
 1201 0014 0024     		movs	r4, #0
 116:Core/Src/main.c ****           //TODO: Turn on LED 0 to signify the start of the operation
 1202              		.loc 1 116 3 view .LVU304
 1203 0016 5DE0     		b	.L62
 1204              	.LVL109:
 1205              	.L63:
 118:Core/Src/main.c **** 
 1206              		.loc 1 118 11 is_stmt 1 view .LVU305
 1207 0018 334D     		ldr	r5, .L66+8
 1208 001a 0122     		movs	r2, #1
 1209 001c 1146     		mov	r1, r2
 1210 001e 2846     		mov	r0, r5
 1211 0020 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1212              	.LVL110:
 120:Core/Src/main.c **** 
 1213              		.loc 1 120 11 view .LVU306
 120:Core/Src/main.c **** 
 1214              		.loc 1 120 24 is_stmt 0 view .LVU307
 1215 0024 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s 			page 48


 1216              	.LVL111:
 120:Core/Src/main.c **** 
 1217              		.loc 1 120 22 discriminator 1 view .LVU308
 1218 0028 DFF8C0A0 		ldr	r10, .L66+12
 1219 002c CAF80000 		str	r0, [r10]
 122:Core/Src/main.c ****           start_cycles = DWT->CYCCNT;
 1220              		.loc 1 122 11 is_stmt 1 view .LVU309
 122:Core/Src/main.c ****           start_cycles = DWT->CYCCNT;
 1221              		.loc 1 122 23 is_stmt 0 view .LVU310
 1222 0030 2F4E     		ldr	r6, .L66+16
 1223 0032 0027     		movs	r7, #0
 1224 0034 7760     		str	r7, [r6, #4]
 123:Core/Src/main.c **** 
 1225              		.loc 1 123 11 is_stmt 1 view .LVU311
 123:Core/Src/main.c **** 
 1226              		.loc 1 123 29 is_stmt 0 view .LVU312
 1227 0036 7368     		ldr	r3, [r6, #4]
 123:Core/Src/main.c **** 
 1228              		.loc 1 123 24 view .LVU313
 1229 0038 DFF8B890 		ldr	r9, .L66+20
 1230 003c C9F80030 		str	r3, [r9]
 126:Core/Src/main.c ****           //checksum_array[i] = calculate_mandelbrot_float(size_array[i], size_array[i], MAX_ITER);
 1231              		.loc 1 126 11 is_stmt 1 view .LVU314
 126:Core/Src/main.c ****           //checksum_array[i] = calculate_mandelbrot_float(size_array[i], size_array[i], MAX_ITER);
 1232              		.loc 1 126 31 is_stmt 0 view .LVU315
 1233 0040 DFF8B480 		ldr	r8, .L66+24
 1234 0044 58F82400 		ldr	r0, [r8, r4, lsl #2]
 1235 0048 6422     		movs	r2, #100
 1236 004a 0146     		mov	r1, r0
 1237 004c FFF7FEFF 		bl	calculate_mandelbrot_double
 1238              	.LVL112:
 126:Core/Src/main.c ****           //checksum_array[i] = calculate_mandelbrot_float(size_array[i], size_array[i], MAX_ITER);
 1239              		.loc 1 126 29 discriminator 1 view .LVU316
 1240 0050 2A4B     		ldr	r3, .L66+28
 1241 0052 03EBC403 		add	r3, r3, r4, lsl #3
 1242 0056 C3E90001 		strd	r0, [r3]
 129:Core/Src/main.c ****           execution_time_array[i] = end_time - start_time;
 1243              		.loc 1 129 11 is_stmt 1 view .LVU317
 129:Core/Src/main.c ****           execution_time_array[i] = end_time - start_time;
 1244              		.loc 1 129 22 is_stmt 0 view .LVU318
 1245 005a FFF7FEFF 		bl	HAL_GetTick
 1246              	.LVL113:
 129:Core/Src/main.c ****           execution_time_array[i] = end_time - start_time;
 1247              		.loc 1 129 20 discriminator 1 view .LVU319
 1248 005e 284B     		ldr	r3, .L66+32
 1249 0060 1860     		str	r0, [r3]
 130:Core/Src/main.c **** 
 1250              		.loc 1 130 11 is_stmt 1 view .LVU320
 130:Core/Src/main.c **** 
 1251              		.loc 1 130 46 is_stmt 0 view .LVU321
 1252 0062 DAF80030 		ldr	r3, [r10]
 1253 0066 C01A     		subs	r0, r0, r3
 130:Core/Src/main.c **** 
 1254              		.loc 1 130 35 view .LVU322
 1255 0068 264B     		ldr	r3, .L66+36
 1256 006a 43F82400 		str	r0, [r3, r4, lsl #2]
 132:Core/Src/main.c ****           CPU_cycles_array[i] = end_cycles - start_cycles;
ARM GAS  C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s 			page 49


 1257              		.loc 1 132 11 is_stmt 1 view .LVU323
 132:Core/Src/main.c ****           CPU_cycles_array[i] = end_cycles - start_cycles;
 1258              		.loc 1 132 27 is_stmt 0 view .LVU324
 1259 006e 7068     		ldr	r0, [r6, #4]
 132:Core/Src/main.c ****           CPU_cycles_array[i] = end_cycles - start_cycles;
 1260              		.loc 1 132 22 view .LVU325
 1261 0070 254B     		ldr	r3, .L66+40
 1262 0072 1860     		str	r0, [r3]
 133:Core/Src/main.c ****           CPU_time_array[i] = CPU_cycles_array[i] / (120*(1e6));
 1263              		.loc 1 133 11 is_stmt 1 view .LVU326
 133:Core/Src/main.c ****           CPU_time_array[i] = CPU_cycles_array[i] / (120*(1e6));
 1264              		.loc 1 133 44 is_stmt 0 view .LVU327
 1265 0074 D9F80030 		ldr	r3, [r9]
 1266 0078 C01A     		subs	r0, r0, r3
 133:Core/Src/main.c ****           CPU_time_array[i] = CPU_cycles_array[i] / (120*(1e6));
 1267              		.loc 1 133 31 view .LVU328
 1268 007a 244B     		ldr	r3, .L66+44
 1269 007c 43F82400 		str	r0, [r3, r4, lsl #2]
 134:Core/Src/main.c **** 
 1270              		.loc 1 134 11 is_stmt 1 view .LVU329
 134:Core/Src/main.c **** 
 1271              		.loc 1 134 51 is_stmt 0 view .LVU330
 1272 0080 FFF7FEFF 		bl	__aeabi_ui2d
 1273              	.LVL114:
 1274 0084 16A3     		adr	r3, .L66
 1275 0086 D3E90023 		ldrd	r2, [r3]
 1276 008a FFF7FEFF 		bl	__aeabi_ddiv
 1277              	.LVL115:
 1278 008e FFF7FEFF 		bl	__aeabi_d2f
 1279              	.LVL116:
 1280 0092 0646     		mov	r6, r0
 134:Core/Src/main.c **** 
 1281              		.loc 1 134 29 view .LVU331
 1282 0094 1E4B     		ldr	r3, .L66+48
 1283 0096 43F82400 		str	r0, [r3, r4, lsl #2]	@ float
 136:Core/Src/main.c **** 
 1284              		.loc 1 136 11 is_stmt 1 view .LVU332
 136:Core/Src/main.c **** 
 1285              		.loc 1 136 44 is_stmt 0 view .LVU333
 1286 009a 58F82400 		ldr	r0, [r8, r4, lsl #2]
 136:Core/Src/main.c **** 
 1287              		.loc 1 136 63 view .LVU334
 1288 009e 00FB00F0 		mul	r0, r0, r0
 1289 00a2 FFF7FEFF 		bl	__aeabi_i2f
 1290              	.LVL117:
 1291 00a6 3146     		mov	r1, r6
 1292 00a8 FFF7FEFF 		bl	__aeabi_fdiv
 1293              	.LVL118:
 136:Core/Src/main.c **** 
 1294              		.loc 1 136 31 view .LVU335
 1295 00ac FFF7FEFF 		bl	__aeabi_f2uiz
 1296              	.LVL119:
 1297 00b0 184B     		ldr	r3, .L66+52
 1298 00b2 43F82400 		str	r0, [r3, r4, lsl #2]
 139:Core/Src/main.c **** 
 1299              		.loc 1 139 11 is_stmt 1 view .LVU336
 1300 00b6 0122     		movs	r2, #1
ARM GAS  C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s 			page 50


 1301 00b8 0221     		movs	r1, #2
 1302 00ba 2846     		mov	r0, r5
 1303 00bc FFF7FEFF 		bl	HAL_GPIO_WritePin
 1304              	.LVL120:
 142:Core/Src/main.c **** 
 1305              		.loc 1 142 11 view .LVU337
 1306 00c0 4FF47A70 		mov	r0, #1000
 1307 00c4 FFF7FEFF 		bl	HAL_Delay
 1308              	.LVL121:
 145:Core/Src/main.c ****       }
 1309              		.loc 1 145 11 view .LVU338
 1310 00c8 3A46     		mov	r2, r7
 1311 00ca 0321     		movs	r1, #3
 1312 00cc 2846     		mov	r0, r5
 1313 00ce FFF7FEFF 		bl	HAL_GPIO_WritePin
 1314              	.LVL122:
 116:Core/Src/main.c ****           //TODO: Turn on LED 0 to signify the start of the operation
 1315              		.loc 1 116 27 discriminator 3 view .LVU339
 1316 00d2 0134     		adds	r4, r4, #1
 1317              	.LVL123:
 1318              	.L62:
 116:Core/Src/main.c ****           //TODO: Turn on LED 0 to signify the start of the operation
 1319              		.loc 1 116 21 discriminator 1 view .LVU340
 1320 00d4 042C     		cmp	r4, #4
 1321 00d6 9FDD     		ble	.L63
 1322              	.L64:
 1323              	.LBE29:
 150:Core/Src/main.c ****   {
 1324              		.loc 1 150 3 view .LVU341
 167:Core/Src/main.c ****   /* USER CODE END 3 */
 1325              		.loc 1 167 3 view .LVU342
 150:Core/Src/main.c ****   {
 1326              		.loc 1 150 9 view .LVU343
 1327 00d8 FEE7     		b	.L64
 1328              	.L67:
 1329 00da 00BFAFF3 		.align	3
 1329      0080
 1330              	.L66:
 1331 00e0 00000000 		.word	0
 1332 00e4 389C9C41 		.word	1100782648
 1333 00e8 00040240 		.word	1073873920
 1334 00ec 00000000 		.word	start_time
 1335 00f0 001000E0 		.word	-536866816
 1336 00f4 00000000 		.word	start_cycles
 1337 00f8 00000000 		.word	size_array
 1338 00fc 00000000 		.word	checksum_array
 1339 0100 00000000 		.word	end_time
 1340 0104 00000000 		.word	execution_time_array
 1341 0108 00000000 		.word	end_cycles
 1342 010c 00000000 		.word	CPU_cycles_array
 1343 0110 00000000 		.word	CPU_time_array
 1344 0114 00000000 		.word	throughput_array
 1345              		.cfi_endproc
 1346              	.LFE159:
 1348              		.global	throughput_array
 1349              		.section	.bss.throughput_array,"aw",%nobits
 1350              		.align	2
ARM GAS  C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s 			page 51


 1353              	throughput_array:
 1354 0000 00000000 		.space	20
 1354      00000000 
 1354      00000000 
 1354      00000000 
 1354      00000000 
 1355              		.global	CPU_time_array
 1356              		.section	.bss.CPU_time_array,"aw",%nobits
 1357              		.align	2
 1360              	CPU_time_array:
 1361 0000 00000000 		.space	20
 1361      00000000 
 1361      00000000 
 1361      00000000 
 1361      00000000 
 1362              		.global	CPU_cycles_array
 1363              		.section	.bss.CPU_cycles_array,"aw",%nobits
 1364              		.align	2
 1367              	CPU_cycles_array:
 1368 0000 00000000 		.space	20
 1368      00000000 
 1368      00000000 
 1368      00000000 
 1368      00000000 
 1369              		.global	execution_time_array
 1370              		.section	.bss.execution_time_array,"aw",%nobits
 1371              		.align	2
 1374              	execution_time_array:
 1375 0000 00000000 		.space	20
 1375      00000000 
 1375      00000000 
 1375      00000000 
 1375      00000000 
 1376              		.global	checksum_array
 1377              		.section	.bss.checksum_array,"aw",%nobits
 1378              		.align	3
 1381              	checksum_array:
 1382 0000 00000000 		.space	40
 1382      00000000 
 1382      00000000 
 1382      00000000 
 1382      00000000 
 1383              		.global	size_array
 1384              		.section	.data.size_array,"aw"
 1385              		.align	2
 1388              	size_array:
 1389 0000 80000000 		.word	128
 1390 0004 A0000000 		.word	160
 1391 0008 C0000000 		.word	192
 1392 000c E0000000 		.word	224
 1393 0010 00010000 		.word	256
 1394              		.global	init_height
 1395              		.section	.data.init_height,"aw"
 1396              		.align	2
 1399              	init_height:
 1400 0000 80000000 		.word	128
 1401              		.global	init_width
ARM GAS  C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s 			page 52


 1402              		.section	.data.init_width,"aw"
 1403              		.align	2
 1406              	init_width:
 1407 0000 80000000 		.word	128
 1408              		.global	throughput
 1409              		.section	.bss.throughput,"aw",%nobits
 1410              		.align	2
 1413              	throughput:
 1414 0000 00000000 		.space	4
 1415              		.global	CPU_cycles
 1416              		.section	.bss.CPU_cycles,"aw",%nobits
 1417              		.align	2
 1420              	CPU_cycles:
 1421 0000 00000000 		.space	4
 1422              		.global	end_cycles
 1423              		.section	.bss.end_cycles,"aw",%nobits
 1424              		.align	2
 1427              	end_cycles:
 1428 0000 00000000 		.space	4
 1429              		.global	start_cycles
 1430              		.section	.bss.start_cycles,"aw",%nobits
 1431              		.align	2
 1434              	start_cycles:
 1435 0000 00000000 		.space	4
 1436              		.global	checksum
 1437              		.section	.bss.checksum,"aw",%nobits
 1438              		.align	3
 1441              	checksum:
 1442 0000 00000000 		.space	8
 1442      00000000 
 1443              		.global	execution_time
 1444              		.section	.bss.execution_time,"aw",%nobits
 1445              		.align	2
 1448              	execution_time:
 1449 0000 00000000 		.space	4
 1450              		.global	end_time
 1451              		.section	.bss.end_time,"aw",%nobits
 1452              		.align	2
 1455              	end_time:
 1456 0000 00000000 		.space	4
 1457              		.global	start_time
 1458              		.section	.bss.start_time,"aw",%nobits
 1459              		.align	2
 1462              	start_time:
 1463 0000 00000000 		.space	4
 1464              		.text
 1465              	.Letext0:
 1466              		.file 3 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1467              		.file 4 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1468              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 1469              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 1470              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1471              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1472              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1473              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1474              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1475              		.file 12 "<built-in>"
ARM GAS  C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s 			page 53


ARM GAS  C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s 			page 54


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s:19     .text.MX_GPIO_Init:00000000 $t
C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s:131    .text.MX_GPIO_Init:00000074 $d
C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s:137    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 $t
C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s:143    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 calculate_mandelbrot_fixed_point_arithmetic
C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s:335    .text.calculate_mandelbrot_fixed_point_arithmetic:000000b4 $d
C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s:1441   .bss.checksum:00000000 checksum
C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s:348    .text.calculate_mandelbrot_double:00000000 $t
C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s:354    .text.calculate_mandelbrot_double:00000000 calculate_mandelbrot_double
C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s:627    .text.calculate_mandelbrot_double:00000154 $d
C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s:644    .text.calculate_mandelbrot_float:00000000 $t
C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s:650    .text.calculate_mandelbrot_float:00000000 calculate_mandelbrot_float
C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s:909    .text.calculate_mandelbrot_float:00000120 $d
C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s:917    .text.DWT_Init:00000000 $t
C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s:923    .text.DWT_Init:00000000 DWT_Init
C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s:953    .text.DWT_Init:00000020 $d
C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s:959    .text.Error_Handler:00000000 $t
C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s:965    .text.Error_Handler:00000000 Error_Handler
C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s:997    .text.SystemClock_Config:00000000 $t
C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s:1003   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s:1154   .text.SystemClock_Config:000000a4 $d
C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s:1162   .text.main:00000000 $t
C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s:1168   .text.main:00000000 main
C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s:1331   .text.main:000000e0 $d
C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s:1462   .bss.start_time:00000000 start_time
C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s:1434   .bss.start_cycles:00000000 start_cycles
C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s:1388   .data.size_array:00000000 size_array
C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s:1381   .bss.checksum_array:00000000 checksum_array
C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s:1455   .bss.end_time:00000000 end_time
C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s:1374   .bss.execution_time_array:00000000 execution_time_array
C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s:1427   .bss.end_cycles:00000000 end_cycles
C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s:1367   .bss.CPU_cycles_array:00000000 CPU_cycles_array
C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s:1360   .bss.CPU_time_array:00000000 CPU_time_array
C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s:1353   .bss.throughput_array:00000000 throughput_array
C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s:1350   .bss.throughput_array:00000000 $d
C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s:1357   .bss.CPU_time_array:00000000 $d
C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s:1364   .bss.CPU_cycles_array:00000000 $d
C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s:1371   .bss.execution_time_array:00000000 $d
C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s:1378   .bss.checksum_array:00000000 $d
C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s:1385   .data.size_array:00000000 $d
C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s:1399   .data.init_height:00000000 init_height
C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s:1396   .data.init_height:00000000 $d
C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s:1406   .data.init_width:00000000 init_width
C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s:1403   .data.init_width:00000000 $d
C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s:1413   .bss.throughput:00000000 throughput
C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s:1410   .bss.throughput:00000000 $d
C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s:1420   .bss.CPU_cycles:00000000 CPU_cycles
C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s:1417   .bss.CPU_cycles:00000000 $d
C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s:1424   .bss.end_cycles:00000000 $d
C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s:1431   .bss.start_cycles:00000000 $d
C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s:1438   .bss.checksum:00000000 $d
C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s:1448   .bss.execution_time:00000000 execution_time
C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s:1445   .bss.execution_time:00000000 $d
C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s:1452   .bss.end_time:00000000 $d
C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s:1459   .bss.start_time:00000000 $d
ARM GAS  C:\Users\User\AppData\Local\Temp\cc7uk2Rc.s 			page 55



UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
__aeabi_i2d
__aeabi_ddiv
__aeabi_dmul
__aeabi_dsub
__aeabi_dadd
__aeabi_dcmple
__aeabi_i2f
__aeabi_fdiv
__aeabi_f2d
__aeabi_d2f
__aeabi_fsub
__aeabi_fadd
__aeabi_fmul
__aeabi_fcmple
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
__aeabi_ui2d
__aeabi_f2uiz
HAL_Init
HAL_GetTick
HAL_Delay
