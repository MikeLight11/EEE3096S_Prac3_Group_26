ARM GAS  C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB42:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** #define MAX_ITER 250
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
ARM GAS  C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s 			page 2


  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE BEGIN PV */
  45:Core/Src/main.c **** //TODO: Define variables you think you might need
  46:Core/Src/main.c **** uint32_t start_time;       // Clock time at start of operation
  47:Core/Src/main.c **** uint32_t end_time;         // Clock time at end of operation
  48:Core/Src/main.c **** uint32_t execution_time;   // Difference between start and end time
  49:Core/Src/main.c **** uint64_t checksum;         // Sum returned by Mandelbrot function
  50:Core/Src/main.c **** int init_width = 128;            // Initial height of 2D plane
  51:Core/Src/main.c **** int init_height = 128;           // Initial width of 2D plane
  52:Core/Src/main.c **** int size_array[] = {128, 160, 192, 224, 256};
  53:Core/Src/main.c **** uint64_t checksum_array[5] = {0}; // Array to hold checksums for different sizes
  54:Core/Src/main.c **** uint32_t execution_time_array[5] = {0}; // Array to hold execution times for different sizes
  55:Core/Src/main.c **** // - Performance timing variables (e.g execution time, throughput, pixels per second, clock cycles)
  56:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations);
  57:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations);
  58:Core/Src/main.c **** /* USER CODE END PV */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  61:Core/Src/main.c **** void SystemClock_Config(void);
  62:Core/Src/main.c **** static void MX_GPIO_Init(void);
  63:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  64:Core/Src/main.c **** //TODO: Define any function prototypes you might need such as the calculate Mandelbrot function amo
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* USER CODE END PFP */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  69:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** /* USER CODE END 0 */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** /**
  74:Core/Src/main.c ****   * @brief  The application entry point.
  75:Core/Src/main.c ****   * @retval int
  76:Core/Src/main.c ****   */
  77:Core/Src/main.c **** int main(void)
  78:Core/Src/main.c **** {
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* USER CODE END 1 */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  87:Core/Src/main.c ****   HAL_Init();
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  90:Core/Src/main.c **** 
ARM GAS  C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s 			page 3


  91:Core/Src/main.c ****   /* USER CODE END Init */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* Configure the system clock */
  94:Core/Src/main.c ****   SystemClock_Config();
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* USER CODE END SysInit */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* Initialize all configured peripherals */
 101:Core/Src/main.c ****   MX_GPIO_Init();
 102:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /* USER CODE END 2 */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   for (int i = 0; i < 5; i++) {
 107:Core/Src/main.c ****             //TODO: Turn on LED 0 to signify the start of the operation
 108:Core/Src/main.c ****             HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****             start_time = HAL_GetTick();
 111:Core/Src/main.c ****             checksum_array[i] = calculate_mandelbrot_fixed_point_arithmetic(size_array[i], size_arr
 112:Core/Src/main.c ****             //checksum_array[i] = calculate_mandelbrot_double(size_array[i], size_array[i], MAX_ITE
 113:Core/Src/main.c ****             end_time = HAL_GetTick();
 114:Core/Src/main.c ****             execution_time_array[i] = end_time - start_time;
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****             //TODO: Turn on LED 1 to signify the end of the operation
 117:Core/Src/main.c ****             HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****             //TODO: Hold the LEDs on for a 1s delay
 120:Core/Src/main.c ****             HAL_Delay(1000);
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****             //TODO: Turn off the LEDs
 123:Core/Src/main.c ****             HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1, GPIO_PIN_RESET);
 124:Core/Src/main.c ****         }
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   /* Infinite loop */
 127:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 128:Core/Src/main.c ****   while (1)
 129:Core/Src/main.c ****   {
 130:Core/Src/main.c ****     /* USER CODE END WHILE */
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 133:Core/Src/main.c **** 	  //TODO: Visual indicator: Turn on LED0 to signal processing start
 134:Core/Src/main.c **** 
 135:Core/Src/main.c **** 
 136:Core/Src/main.c **** 	  //TODO: Benchmark and Profile Performance
 137:Core/Src/main.c **** 
 138:Core/Src/main.c **** 
 139:Core/Src/main.c **** 	  //TODO: Visual indicator: Turn on LED1 to signal processing start
 140:Core/Src/main.c **** 
 141:Core/Src/main.c **** 
 142:Core/Src/main.c **** 	  //TODO: Keep the LEDs ON for 2s
 143:Core/Src/main.c **** 
 144:Core/Src/main.c **** 	  // TODO: Turn OFF LEDs
 145:Core/Src/main.c **** 
 146:Core/Src/main.c **** 
 147:Core/Src/main.c **** 
ARM GAS  C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s 			page 4


 148:Core/Src/main.c ****   }
 149:Core/Src/main.c ****   /* USER CODE END 3 */
 150:Core/Src/main.c **** }
 151:Core/Src/main.c **** 
 152:Core/Src/main.c **** /**
 153:Core/Src/main.c ****   * @brief System Clock Configuration
 154:Core/Src/main.c ****   * @retval None
 155:Core/Src/main.c ****   */
 156:Core/Src/main.c **** void SystemClock_Config(void)
 157:Core/Src/main.c **** {
 158:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 159:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 162:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 163:Core/Src/main.c ****   */
 164:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 165:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 166:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 167:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 168:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 169:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
 170:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 171:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 172:Core/Src/main.c ****   {
 173:Core/Src/main.c ****     Error_Handler();
 174:Core/Src/main.c ****   }
 175:Core/Src/main.c **** 
 176:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 177:Core/Src/main.c ****   */
 178:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 179:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 180:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 181:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 182:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 183:Core/Src/main.c **** 
 184:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 185:Core/Src/main.c ****   {
 186:Core/Src/main.c ****     Error_Handler();
 187:Core/Src/main.c ****   }
 188:Core/Src/main.c **** }
 189:Core/Src/main.c **** 
 190:Core/Src/main.c **** /**
 191:Core/Src/main.c ****   * @brief GPIO Initialization Function
 192:Core/Src/main.c ****   * @param None
 193:Core/Src/main.c ****   * @retval None
 194:Core/Src/main.c ****   */
 195:Core/Src/main.c **** static void MX_GPIO_Init(void)
 196:Core/Src/main.c **** {
  26              		.loc 1 196 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 10B5     		push	{r4, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 4, -8
ARM GAS  C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s 			page 5


  34              		.cfi_offset 14, -4
  35 0002 88B0     		sub	sp, sp, #32
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 40
 197:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  38              		.loc 1 197 3 view .LVU1
  39              		.loc 1 197 20 is_stmt 0 view .LVU2
  40 0004 1422     		movs	r2, #20
  41 0006 0021     		movs	r1, #0
  42 0008 03A8     		add	r0, sp, #12
  43 000a FFF7FEFF 		bl	memset
  44              	.LVL0:
 198:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 199:Core/Src/main.c **** 
 200:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 201:Core/Src/main.c **** 
 202:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 203:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  45              		.loc 1 203 3 is_stmt 1 view .LVU3
  46              	.LBB4:
  47              		.loc 1 203 3 view .LVU4
  48              		.loc 1 203 3 view .LVU5
  49 000e 174B     		ldr	r3, .L2
  50 0010 5A69     		ldr	r2, [r3, #20]
  51 0012 8021     		movs	r1, #128
  52 0014 C903     		lsls	r1, r1, #15
  53 0016 0A43     		orrs	r2, r1
  54 0018 5A61     		str	r2, [r3, #20]
  55              		.loc 1 203 3 view .LVU6
  56 001a 5A69     		ldr	r2, [r3, #20]
  57 001c 0A40     		ands	r2, r1
  58 001e 0092     		str	r2, [sp]
  59              		.loc 1 203 3 view .LVU7
  60 0020 009A     		ldr	r2, [sp]
  61              	.LBE4:
  62              		.loc 1 203 3 view .LVU8
 204:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  63              		.loc 1 204 3 view .LVU9
  64              	.LBB5:
  65              		.loc 1 204 3 view .LVU10
  66              		.loc 1 204 3 view .LVU11
  67 0022 5A69     		ldr	r2, [r3, #20]
  68 0024 8021     		movs	r1, #128
  69 0026 C902     		lsls	r1, r1, #11
  70 0028 0A43     		orrs	r2, r1
  71 002a 5A61     		str	r2, [r3, #20]
  72              		.loc 1 204 3 view .LVU12
  73 002c 5A69     		ldr	r2, [r3, #20]
  74 002e 0A40     		ands	r2, r1
  75 0030 0192     		str	r2, [sp, #4]
  76              		.loc 1 204 3 view .LVU13
  77 0032 019A     		ldr	r2, [sp, #4]
  78              	.LBE5:
  79              		.loc 1 204 3 view .LVU14
 205:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  80              		.loc 1 205 3 view .LVU15
  81              	.LBB6:
ARM GAS  C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s 			page 6


  82              		.loc 1 205 3 view .LVU16
  83              		.loc 1 205 3 view .LVU17
  84 0034 5A69     		ldr	r2, [r3, #20]
  85 0036 8021     		movs	r1, #128
  86 0038 8902     		lsls	r1, r1, #10
  87 003a 0A43     		orrs	r2, r1
  88 003c 5A61     		str	r2, [r3, #20]
  89              		.loc 1 205 3 view .LVU18
  90 003e 5B69     		ldr	r3, [r3, #20]
  91 0040 0B40     		ands	r3, r1
  92 0042 0293     		str	r3, [sp, #8]
  93              		.loc 1 205 3 view .LVU19
  94 0044 029B     		ldr	r3, [sp, #8]
  95              	.LBE6:
  96              		.loc 1 205 3 view .LVU20
 206:Core/Src/main.c **** 
 207:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 208:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
  97              		.loc 1 208 3 view .LVU21
  98 0046 0A4C     		ldr	r4, .L2+4
  99 0048 0022     		movs	r2, #0
 100 004a FF21     		movs	r1, #255
 101 004c 2000     		movs	r0, r4
 102 004e FFF7FEFF 		bl	HAL_GPIO_WritePin
 103              	.LVL1:
 209:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7, GPIO_PIN_RESET);
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 PB2 PB3
 212:Core/Src/main.c ****                            PB4 PB5 PB6 PB7 */
 213:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 104              		.loc 1 213 3 view .LVU22
 105              		.loc 1 213 23 is_stmt 0 view .LVU23
 106 0052 FF23     		movs	r3, #255
 107 0054 0393     		str	r3, [sp, #12]
 214:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 215:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 108              		.loc 1 215 3 is_stmt 1 view .LVU24
 109              		.loc 1 215 24 is_stmt 0 view .LVU25
 110 0056 FE3B     		subs	r3, r3, #254
 111 0058 0493     		str	r3, [sp, #16]
 216:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 112              		.loc 1 216 3 is_stmt 1 view .LVU26
 113              		.loc 1 216 24 is_stmt 0 view .LVU27
 114 005a 0023     		movs	r3, #0
 115 005c 0593     		str	r3, [sp, #20]
 217:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 116              		.loc 1 217 3 is_stmt 1 view .LVU28
 117              		.loc 1 217 25 is_stmt 0 view .LVU29
 118 005e 0693     		str	r3, [sp, #24]
 218:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 119              		.loc 1 218 3 is_stmt 1 view .LVU30
 120 0060 03A9     		add	r1, sp, #12
 121 0062 2000     		movs	r0, r4
 122 0064 FFF7FEFF 		bl	HAL_GPIO_Init
 123              	.LVL2:
 219:Core/Src/main.c **** 
 220:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
ARM GAS  C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s 			page 7


 221:Core/Src/main.c **** 
 222:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 223:Core/Src/main.c **** }
 124              		.loc 1 223 1 is_stmt 0 view .LVU31
 125 0068 08B0     		add	sp, sp, #32
 126              		@ sp needed
 127 006a 10BD     		pop	{r4, pc}
 128              	.L3:
 129              		.align	2
 130              	.L2:
 131 006c 00100240 		.word	1073876992
 132 0070 00040048 		.word	1207960576
 133              		.cfi_endproc
 134              	.LFE42:
 136              		.global	__aeabi_idiv
 137              		.section	.text.calculate_mandelbrot_fixed_point_arithmetic,"ax",%progbits
 138              		.align	1
 139              		.global	calculate_mandelbrot_fixed_point_arithmetic
 140              		.syntax unified
 141              		.code	16
 142              		.thumb_func
 144              	calculate_mandelbrot_fixed_point_arithmetic:
 145              	.LVL3:
 146              	.LFB43:
 224:Core/Src/main.c **** 
 225:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 226:Core/Src/main.c **** //TODO: Function signatures you defined previously , implement them here
 227:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations){
 147              		.loc 1 227 96 is_stmt 1 view -0
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 24
 150              		@ frame_needed = 0, uses_anonymous_args = 0
 151              		.loc 1 227 96 is_stmt 0 view .LVU33
 152 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 153              	.LCFI2:
 154              		.cfi_def_cfa_offset 20
 155              		.cfi_offset 4, -20
 156              		.cfi_offset 5, -16
 157              		.cfi_offset 6, -12
 158              		.cfi_offset 7, -8
 159              		.cfi_offset 14, -4
 160 0002 DE46     		mov	lr, fp
 161 0004 5746     		mov	r7, r10
 162 0006 4E46     		mov	r6, r9
 163 0008 4546     		mov	r5, r8
 164 000a E0B5     		push	{r5, r6, r7, lr}
 165              	.LCFI3:
 166              		.cfi_def_cfa_offset 36
 167              		.cfi_offset 8, -36
 168              		.cfi_offset 9, -32
 169              		.cfi_offset 10, -28
 170              		.cfi_offset 11, -24
 171 000c 87B0     		sub	sp, sp, #28
 172              	.LCFI4:
 173              		.cfi_def_cfa_offset 64
 174 000e 0390     		str	r0, [sp, #12]
 175 0010 0591     		str	r1, [sp, #20]
ARM GAS  C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s 			page 8


 176 0012 9246     		mov	r10, r2
 228:Core/Src/main.c ****     const int SCALE = 1000;
 177              		.loc 1 228 5 is_stmt 1 view .LVU34
 178              	.LVL4:
 229:Core/Src/main.c ****     const int THREE_FIVE = 3500;
 179              		.loc 1 229 5 view .LVU35
 230:Core/Src/main.c ****     const int TWO = 2000;
 180              		.loc 1 230 5 view .LVU36
 231:Core/Src/main.c ****     const int TWO_FIVE = 2500;
 181              		.loc 1 231 5 view .LVU37
 232:Core/Src/main.c ****     const int ONE = 1000;
 182              		.loc 1 232 5 view .LVU38
 233:Core/Src/main.c ****     const int FOUR = 4000;
 183              		.loc 1 233 5 view .LVU39
 234:Core/Src/main.c **** 
 235:Core/Src/main.c ****     checksum = 0;
 184              		.loc 1 235 5 view .LVU40
 185              		.loc 1 235 14 is_stmt 0 view .LVU41
 186 0014 324B     		ldr	r3, .L14
 187 0016 0020     		movs	r0, #0
 188              	.LVL5:
 189              		.loc 1 235 14 view .LVU42
 190 0018 0021     		movs	r1, #0
 191              	.LVL6:
 192              		.loc 1 235 14 view .LVU43
 193 001a 1860     		str	r0, [r3]
 194 001c 5960     		str	r1, [r3, #4]
 236:Core/Src/main.c ****     for (int32_t y = 0; y < height; y++) {
 195              		.loc 1 236 5 is_stmt 1 view .LVU44
 196              	.LBB7:
 197              		.loc 1 236 10 view .LVU45
 198              	.LVL7:
 199              		.loc 1 236 18 is_stmt 0 view .LVU46
 200 001e 0023     		movs	r3, #0
 201 0020 0493     		str	r3, [sp, #16]
 202              		.loc 1 236 5 view .LVU47
 203 0022 4BE0     		b	.L5
 204              	.LVL8:
 205              	.L8:
 206              	.LBB8:
 207              	.LBB9:
 208              	.LBB10:
 237:Core/Src/main.c ****         for (int32_t x = 0; x < width; x++) {
 238:Core/Src/main.c ****             int32_t x0 = ((int32_t)x * THREE_FIVE) / width - TWO_FIVE;
 239:Core/Src/main.c ****             int32_t y0 = ((int32_t)y * TWO) / height - ONE;
 240:Core/Src/main.c ****             int32_t xi = 0;
 241:Core/Src/main.c ****             int32_t yi = 0;
 242:Core/Src/main.c ****             int32_t iteration = 0;
 243:Core/Src/main.c ****             while (((((int32_t)xi * xi + (int32_t)yi * yi) / SCALE) <= FOUR) && (iteration < max_it
 244:Core/Src/main.c ****                 int32_t xi_temp = ((int32_t)xi * xi - (int32_t)yi * yi) / SCALE + x0;
 209              		.loc 1 244 17 is_stmt 1 view .LVU48
 210              		.loc 1 244 53 is_stmt 0 view .LVU49
 211 0024 C01A     		subs	r0, r0, r3
 212              		.loc 1 244 73 view .LVU50
 213 0026 FA21     		movs	r1, #250
 214 0028 8900     		lsls	r1, r1, #2
 215 002a FFF7FEFF 		bl	__aeabi_idiv
ARM GAS  C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s 			page 9


 216              	.LVL9:
 217              		.loc 1 244 25 view .LVU51
 218 002e 4844     		add	r0, r0, r9
 219 0030 8246     		mov	r10, r0
 220              	.LVL10:
 245:Core/Src/main.c ****                 int32_t yi_temp = ((int32_t)2 * xi * yi) / SCALE + y0;
 221              		.loc 1 245 17 is_stmt 1 view .LVU52
 222              		.loc 1 245 52 is_stmt 0 view .LVU53
 223 0032 2800     		movs	r0, r5
 224              	.LVL11:
 225              		.loc 1 245 52 view .LVU54
 226 0034 6043     		muls	r0, r4
 227              		.loc 1 245 58 view .LVU55
 228 0036 FA21     		movs	r1, #250
 229 0038 4900     		lsls	r1, r1, #1
 230 003a FFF7FEFF 		bl	__aeabi_idiv
 231              	.LVL12:
 232              		.loc 1 245 25 view .LVU56
 233 003e 4044     		add	r0, r0, r8
 234 0040 0500     		movs	r5, r0
 235              	.LVL13:
 246:Core/Src/main.c ****                 xi = xi_temp;
 236              		.loc 1 246 17 is_stmt 1 view .LVU57
 247:Core/Src/main.c ****                 yi = yi_temp;
 237              		.loc 1 247 17 view .LVU58
 248:Core/Src/main.c ****                 iteration++;
 238              		.loc 1 248 17 view .LVU59
 239              		.loc 1 248 26 is_stmt 0 view .LVU60
 240 0042 0137     		adds	r7, r7, #1
 241              	.LVL14:
 246:Core/Src/main.c ****                 xi = xi_temp;
 242              		.loc 1 246 20 view .LVU61
 243 0044 5446     		mov	r4, r10
 244              	.LVL15:
 245              	.L6:
 246:Core/Src/main.c ****                 xi = xi_temp;
 246              		.loc 1 246 20 view .LVU62
 247              	.LBE10:
 243:Core/Src/main.c ****                 int32_t xi_temp = ((int32_t)xi * xi - (int32_t)yi * yi) / SCALE + x0;
 248              		.loc 1 243 78 is_stmt 1 view .LVU63
 243:Core/Src/main.c ****                 int32_t xi_temp = ((int32_t)xi * xi - (int32_t)yi * yi) / SCALE + x0;
 249              		.loc 1 243 35 is_stmt 0 view .LVU64
 250 0046 2000     		movs	r0, r4
 251 0048 6043     		muls	r0, r4
 243:Core/Src/main.c ****                 int32_t xi_temp = ((int32_t)xi * xi - (int32_t)yi * yi) / SCALE + x0;
 252              		.loc 1 243 54 view .LVU65
 253 004a 2B00     		movs	r3, r5
 254 004c 6B43     		muls	r3, r5
 243:Core/Src/main.c ****                 int32_t xi_temp = ((int32_t)xi * xi - (int32_t)yi * yi) / SCALE + x0;
 255              		.loc 1 243 40 view .LVU66
 256 004e C118     		adds	r1, r0, r3
 243:Core/Src/main.c ****                 int32_t xi_temp = ((int32_t)xi * xi - (int32_t)yi * yi) / SCALE + x0;
 257              		.loc 1 243 78 view .LVU67
 258 0050 244A     		ldr	r2, .L14+4
 259 0052 9142     		cmp	r1, r2
 260 0054 01DC     		bgt	.L7
 243:Core/Src/main.c ****                 int32_t xi_temp = ((int32_t)xi * xi - (int32_t)yi * yi) / SCALE + x0;
ARM GAS  C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s 			page 10


 261              		.loc 1 243 78 discriminator 1 view .LVU68
 262 0056 B742     		cmp	r7, r6
 263 0058 E4DB     		blt	.L8
 264              	.L7:
 249:Core/Src/main.c ****             }
 250:Core/Src/main.c ****             checksum += iteration;
 265              		.loc 1 250 22 view .LVU69
 266 005a B246     		mov	r10, r6
 267              		.loc 1 250 13 is_stmt 1 view .LVU70
 268              		.loc 1 250 22 is_stmt 0 view .LVU71
 269 005c 2049     		ldr	r1, .L14
 270 005e 0097     		str	r7, [sp]
 271 0060 FB17     		asrs	r3, r7, #31
 272 0062 0193     		str	r3, [sp, #4]
 273 0064 0A68     		ldr	r2, [r1]
 274 0066 4B68     		ldr	r3, [r1, #4]
 275 0068 009C     		ldr	r4, [sp]
 276 006a 019D     		ldr	r5, [sp, #4]
 277              	.LVL16:
 278              		.loc 1 250 22 view .LVU72
 279 006c 1219     		adds	r2, r2, r4
 280 006e 6B41     		adcs	r3, r3, r5
 281 0070 0A60     		str	r2, [r1]
 282 0072 4B60     		str	r3, [r1, #4]
 283              	.LBE9:
 237:Core/Src/main.c ****             int32_t x0 = ((int32_t)x * THREE_FIVE) / width - TWO_FIVE;
 284              		.loc 1 237 41 is_stmt 1 discriminator 2 view .LVU73
 285 0074 0123     		movs	r3, #1
 286 0076 9C46     		mov	ip, r3
 287 0078 E344     		add	fp, fp, ip
 288              	.LVL17:
 289              	.L10:
 237:Core/Src/main.c ****             int32_t x0 = ((int32_t)x * THREE_FIVE) / width - TWO_FIVE;
 290              		.loc 1 237 31 discriminator 1 view .LVU74
 291 007a 039B     		ldr	r3, [sp, #12]
 292 007c 9B45     		cmp	fp, r3
 293 007e 1ADA     		bge	.L12
 294              	.LBB11:
 238:Core/Src/main.c ****             int32_t y0 = ((int32_t)y * TWO) / height - ONE;
 295              		.loc 1 238 13 view .LVU75
 238:Core/Src/main.c ****             int32_t y0 = ((int32_t)y * TWO) / height - ONE;
 296              		.loc 1 238 38 is_stmt 0 view .LVU76
 297 0080 1948     		ldr	r0, .L14+8
 298 0082 5B46     		mov	r3, fp
 299 0084 5843     		muls	r0, r3
 238:Core/Src/main.c ****             int32_t y0 = ((int32_t)y * TWO) / height - ONE;
 300              		.loc 1 238 52 view .LVU77
 301 0086 0399     		ldr	r1, [sp, #12]
 302 0088 FFF7FEFF 		bl	__aeabi_idiv
 303              	.LVL18:
 238:Core/Src/main.c ****             int32_t y0 = ((int32_t)y * TWO) / height - ONE;
 304              		.loc 1 238 21 view .LVU78
 305 008c 174B     		ldr	r3, .L14+12
 306 008e 9946     		mov	r9, r3
 307 0090 8144     		add	r9, r9, r0
 308              	.LVL19:
 239:Core/Src/main.c ****             int32_t xi = 0;
ARM GAS  C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s 			page 11


 309              		.loc 1 239 13 is_stmt 1 view .LVU79
 239:Core/Src/main.c ****             int32_t xi = 0;
 310              		.loc 1 239 38 is_stmt 0 view .LVU80
 311 0092 049B     		ldr	r3, [sp, #16]
 312 0094 5801     		lsls	r0, r3, #5
 313 0096 C01A     		subs	r0, r0, r3
 314 0098 8000     		lsls	r0, r0, #2
 315 009a 9C46     		mov	ip, r3
 316 009c 6044     		add	r0, r0, ip
 317 009e 0001     		lsls	r0, r0, #4
 239:Core/Src/main.c ****             int32_t xi = 0;
 318              		.loc 1 239 45 view .LVU81
 319 00a0 0599     		ldr	r1, [sp, #20]
 320 00a2 FFF7FEFF 		bl	__aeabi_idiv
 321              	.LVL20:
 239:Core/Src/main.c ****             int32_t xi = 0;
 322              		.loc 1 239 21 view .LVU82
 323 00a6 124B     		ldr	r3, .L14+16
 324 00a8 9846     		mov	r8, r3
 325 00aa 8044     		add	r8, r8, r0
 326              	.LVL21:
 240:Core/Src/main.c ****             int32_t yi = 0;
 327              		.loc 1 240 13 is_stmt 1 view .LVU83
 241:Core/Src/main.c ****             int32_t iteration = 0;
 328              		.loc 1 241 13 view .LVU84
 242:Core/Src/main.c ****             while (((((int32_t)xi * xi + (int32_t)yi * yi) / SCALE) <= FOUR) && (iteration < max_it
 329              		.loc 1 242 13 view .LVU85
 243:Core/Src/main.c ****                 int32_t xi_temp = ((int32_t)xi * xi - (int32_t)yi * yi) / SCALE + x0;
 330              		.loc 1 243 13 view .LVU86
 242:Core/Src/main.c ****             while (((((int32_t)xi * xi + (int32_t)yi * yi) / SCALE) <= FOUR) && (iteration < max_it
 331              		.loc 1 242 21 is_stmt 0 view .LVU87
 332 00ac 0027     		movs	r7, #0
 241:Core/Src/main.c ****             int32_t iteration = 0;
 333              		.loc 1 241 21 view .LVU88
 334 00ae 0025     		movs	r5, #0
 240:Core/Src/main.c ****             int32_t yi = 0;
 335              		.loc 1 240 21 view .LVU89
 336 00b0 0024     		movs	r4, #0
 337 00b2 5646     		mov	r6, r10
 243:Core/Src/main.c ****                 int32_t xi_temp = ((int32_t)xi * xi - (int32_t)yi * yi) / SCALE + x0;
 338              		.loc 1 243 19 view .LVU90
 339 00b4 C7E7     		b	.L6
 340              	.LVL22:
 341              	.L12:
 243:Core/Src/main.c ****                 int32_t xi_temp = ((int32_t)xi * xi - (int32_t)yi * yi) / SCALE + x0;
 342              		.loc 1 243 19 view .LVU91
 343              	.LBE11:
 344              	.LBE8:
 236:Core/Src/main.c ****         for (int32_t x = 0; x < width; x++) {
 345              		.loc 1 236 38 is_stmt 1 discriminator 2 view .LVU92
 346 00b6 049B     		ldr	r3, [sp, #16]
 347 00b8 0133     		adds	r3, r3, #1
 348 00ba 0493     		str	r3, [sp, #16]
 349              	.LVL23:
 350              	.L5:
 236:Core/Src/main.c ****         for (int32_t x = 0; x < width; x++) {
 351              		.loc 1 236 27 discriminator 1 view .LVU93
ARM GAS  C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s 			page 12


 352 00bc 049B     		ldr	r3, [sp, #16]
 353 00be 059A     		ldr	r2, [sp, #20]
 354 00c0 9342     		cmp	r3, r2
 355 00c2 02DA     		bge	.L13
 356              	.LBB12:
 237:Core/Src/main.c ****             int32_t x0 = ((int32_t)x * THREE_FIVE) / width - TWO_FIVE;
 357              		.loc 1 237 22 is_stmt 0 view .LVU94
 358 00c4 0023     		movs	r3, #0
 359 00c6 9B46     		mov	fp, r3
 360 00c8 D7E7     		b	.L10
 361              	.LVL24:
 362              	.L13:
 237:Core/Src/main.c ****             int32_t x0 = ((int32_t)x * THREE_FIVE) / width - TWO_FIVE;
 363              		.loc 1 237 22 view .LVU95
 364              	.LBE12:
 365              	.LBE7:
 251:Core/Src/main.c ****         }
 252:Core/Src/main.c ****     }
 253:Core/Src/main.c ****     return checksum;
 366              		.loc 1 253 5 is_stmt 1 view .LVU96
 367              		.loc 1 253 12 is_stmt 0 view .LVU97
 368 00ca 054B     		ldr	r3, .L14
 369              	.LVL25:
 370              		.loc 1 253 12 discriminator 1 view .LVU98
 371 00cc 1868     		ldr	r0, [r3]
 372 00ce 5968     		ldr	r1, [r3, #4]
 254:Core/Src/main.c **** }
 373              		.loc 1 254 1 view .LVU99
 374 00d0 07B0     		add	sp, sp, #28
 375              		@ sp needed
 376              	.LVL26:
 377              		.loc 1 254 1 view .LVU100
 378 00d2 F0BC     		pop	{r4, r5, r6, r7}
 379 00d4 BB46     		mov	fp, r7
 380 00d6 B246     		mov	r10, r6
 381 00d8 A946     		mov	r9, r5
 382 00da A046     		mov	r8, r4
 383 00dc F0BD     		pop	{r4, r5, r6, r7, pc}
 384              	.L15:
 385 00de C046     		.align	2
 386              	.L14:
 387 00e0 00000000 		.word	checksum
 388 00e4 E70C3D00 		.word	4000999
 389 00e8 AC0D0000 		.word	3500
 390 00ec 3CF6FFFF 		.word	-2500
 391 00f0 18FCFFFF 		.word	-1000
 392              		.cfi_endproc
 393              	.LFE43:
 395              		.global	__aeabi_i2d
 396              		.global	__aeabi_ddiv
 397              		.global	__aeabi_dmul
 398              		.global	__aeabi_dsub
 399              		.global	__aeabi_dadd
 400              		.global	__aeabi_dcmple
 401              		.section	.text.calculate_mandelbrot_double,"ax",%progbits
 402              		.align	1
 403              		.global	calculate_mandelbrot_double
ARM GAS  C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s 			page 13


 404              		.syntax unified
 405              		.code	16
 406              		.thumb_func
 408              	calculate_mandelbrot_double:
 409              	.LVL27:
 410              	.LFB44:
 255:Core/Src/main.c **** 
 256:Core/Src/main.c **** //TODO: Mandelbroat using variable type double
 257:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations){
 411              		.loc 1 257 80 is_stmt 1 view -0
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 56
 414              		@ frame_needed = 0, uses_anonymous_args = 0
 415              		.loc 1 257 80 is_stmt 0 view .LVU102
 416 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 417              	.LCFI5:
 418              		.cfi_def_cfa_offset 20
 419              		.cfi_offset 4, -20
 420              		.cfi_offset 5, -16
 421              		.cfi_offset 6, -12
 422              		.cfi_offset 7, -8
 423              		.cfi_offset 14, -4
 424 0002 DE46     		mov	lr, fp
 425 0004 5746     		mov	r7, r10
 426 0006 4E46     		mov	r6, r9
 427 0008 4546     		mov	r5, r8
 428 000a E0B5     		push	{r5, r6, r7, lr}
 429              	.LCFI6:
 430              		.cfi_def_cfa_offset 36
 431              		.cfi_offset 8, -36
 432              		.cfi_offset 9, -32
 433              		.cfi_offset 10, -28
 434              		.cfi_offset 11, -24
 435 000c 8FB0     		sub	sp, sp, #60
 436              	.LCFI7:
 437              		.cfi_def_cfa_offset 96
 438 000e 0D91     		str	r1, [sp, #52]
 439 0010 9146     		mov	r9, r2
 258:Core/Src/main.c ****     //uint64_t mandelbrot_sum = 0;
 259:Core/Src/main.c ****     //TODO: Complete the function implementation
 260:Core/Src/main.c ****     checksum = 0;
 440              		.loc 1 260 5 is_stmt 1 view .LVU103
 441              		.loc 1 260 14 is_stmt 0 view .LVU104
 442 0012 5749     		ldr	r1, .L28
 443              	.LVL28:
 444              		.loc 1 260 14 view .LVU105
 445 0014 0022     		movs	r2, #0
 446              	.LVL29:
 447              		.loc 1 260 14 view .LVU106
 448 0016 0023     		movs	r3, #0
 449 0018 0A60     		str	r2, [r1]
 450 001a 4B60     		str	r3, [r1, #4]
 261:Core/Src/main.c ****     for (int y = 0; y <= height-1; y++) {
 451              		.loc 1 261 5 is_stmt 1 view .LVU107
 452              	.LBB13:
 453              		.loc 1 261 10 view .LVU108
 454              	.LVL30:
ARM GAS  C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s 			page 14


 455              		.loc 1 261 14 is_stmt 0 view .LVU109
 456 001c 0023     		movs	r3, #0
 457 001e 0C93     		str	r3, [sp, #48]
 458 0020 0B90     		str	r0, [sp, #44]
 459              		.loc 1 261 5 view .LVU110
 460 0022 8EE0     		b	.L17
 461              	.LVL31:
 462              	.L21:
 463              	.LBB14:
 464              	.LBB15:
 465              	.LBB16:
 262:Core/Src/main.c ****         for (int x = 0; x <= width-1; x++) {
 263:Core/Src/main.c ****             double x0 = ((double)x/(double)width)*(3.5)-2.5;
 264:Core/Src/main.c ****             double y0 = ((double)y/(double)height)*(2.0)-1.0;
 265:Core/Src/main.c ****             int iteration = 0;
 266:Core/Src/main.c ****             double xi = 0;
 267:Core/Src/main.c ****             double yi = 0;
 268:Core/Src/main.c ****             while ((xi*xi + yi*yi) <= (4) && iteration < max_iterations) {
 269:Core/Src/main.c ****                 double temp = (xi*xi - yi*yi);
 466              		.loc 1 269 17 is_stmt 1 view .LVU111
 467              		.loc 1 269 24 is_stmt 0 view .LVU112
 468 0024 029A     		ldr	r2, [sp, #8]
 469 0026 039B     		ldr	r3, [sp, #12]
 470 0028 0098     		ldr	r0, [sp]
 471 002a 0199     		ldr	r1, [sp, #4]
 472 002c FFF7FEFF 		bl	__aeabi_dsub
 473              	.LVL32:
 474 0030 0090     		str	r0, [sp]
 475 0032 0191     		str	r1, [sp, #4]
 476              	.LVL33:
 270:Core/Src/main.c ****                 yi = (2*xi*yi)+y0;
 477              		.loc 1 270 17 is_stmt 1 view .LVU113
 478              		.loc 1 270 24 is_stmt 0 view .LVU114
 479 0034 3200     		movs	r2, r6
 480 0036 3B00     		movs	r3, r7
 481 0038 3000     		movs	r0, r6
 482              	.LVL34:
 483              		.loc 1 270 24 view .LVU115
 484 003a 3900     		movs	r1, r7
 485 003c FFF7FEFF 		bl	__aeabi_dadd
 486              	.LVL35:
 487              		.loc 1 270 27 view .LVU116
 488 0040 2200     		movs	r2, r4
 489 0042 2B00     		movs	r3, r5
 490 0044 FFF7FEFF 		bl	__aeabi_dmul
 491              	.LVL36:
 492              		.loc 1 270 20 view .LVU117
 493 0048 069A     		ldr	r2, [sp, #24]
 494 004a 079B     		ldr	r3, [sp, #28]
 495 004c FFF7FEFF 		bl	__aeabi_dadd
 496              	.LVL37:
 497 0050 0400     		movs	r4, r0
 498              	.LVL38:
 499              		.loc 1 270 20 view .LVU118
 500 0052 0D00     		movs	r5, r1
 501              	.LVL39:
 271:Core/Src/main.c ****                 xi = temp+x0;
ARM GAS  C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s 			page 15


 502              		.loc 1 271 17 is_stmt 1 view .LVU119
 503              		.loc 1 271 20 is_stmt 0 view .LVU120
 504 0054 009A     		ldr	r2, [sp]
 505 0056 019B     		ldr	r3, [sp, #4]
 506 0058 0498     		ldr	r0, [sp, #16]
 507 005a 0599     		ldr	r1, [sp, #20]
 508 005c FFF7FEFF 		bl	__aeabi_dadd
 509              	.LVL40:
 510 0060 0600     		movs	r6, r0
 511              	.LVL41:
 512              		.loc 1 271 20 view .LVU121
 513 0062 0F00     		movs	r7, r1
 514              	.LVL42:
 272:Core/Src/main.c ****                 iteration++;
 515              		.loc 1 272 17 is_stmt 1 view .LVU122
 516              		.loc 1 272 26 is_stmt 0 view .LVU123
 517 0064 0123     		movs	r3, #1
 518 0066 9C46     		mov	ip, r3
 519 0068 E044     		add	r8, r8, ip
 520              	.LVL43:
 521              	.L18:
 522              		.loc 1 272 26 view .LVU124
 523              	.LBE16:
 268:Core/Src/main.c ****                 double temp = (xi*xi - yi*yi);
 524              		.loc 1 268 43 is_stmt 1 view .LVU125
 268:Core/Src/main.c ****                 double temp = (xi*xi - yi*yi);
 525              		.loc 1 268 23 is_stmt 0 view .LVU126
 526 006a 3200     		movs	r2, r6
 527 006c 3B00     		movs	r3, r7
 528 006e 3000     		movs	r0, r6
 529 0070 3900     		movs	r1, r7
 530 0072 FFF7FEFF 		bl	__aeabi_dmul
 531              	.LVL44:
 532 0076 0090     		str	r0, [sp]
 533 0078 0191     		str	r1, [sp, #4]
 268:Core/Src/main.c ****                 double temp = (xi*xi - yi*yi);
 534              		.loc 1 268 31 view .LVU127
 535 007a 2200     		movs	r2, r4
 536 007c 2B00     		movs	r3, r5
 537 007e 2000     		movs	r0, r4
 538 0080 2900     		movs	r1, r5
 539 0082 FFF7FEFF 		bl	__aeabi_dmul
 540              	.LVL45:
 541 0086 0200     		movs	r2, r0
 542 0088 0B00     		movs	r3, r1
 543 008a 0292     		str	r2, [sp, #8]
 544 008c 0393     		str	r3, [sp, #12]
 268:Core/Src/main.c ****                 double temp = (xi*xi - yi*yi);
 545              		.loc 1 268 27 view .LVU128
 546 008e 0098     		ldr	r0, [sp]
 547 0090 0199     		ldr	r1, [sp, #4]
 548 0092 FFF7FEFF 		bl	__aeabi_dadd
 549              	.LVL46:
 268:Core/Src/main.c ****                 double temp = (xi*xi - yi*yi);
 550              		.loc 1 268 43 view .LVU129
 551 0096 0022     		movs	r2, #0
 552 0098 364B     		ldr	r3, .L28+4
ARM GAS  C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s 			page 16


 553 009a FFF7FEFF 		bl	__aeabi_dcmple
 554              	.LVL47:
 555 009e 0028     		cmp	r0, #0
 556 00a0 01D0     		beq	.L19
 268:Core/Src/main.c ****                 double temp = (xi*xi - yi*yi);
 557              		.loc 1 268 43 discriminator 1 view .LVU130
 558 00a2 C845     		cmp	r8, r9
 559 00a4 BEDB     		blt	.L21
 560              	.L19:
 273:Core/Src/main.c ****             }
 274:Core/Src/main.c ****             checksum += iteration;
 561              		.loc 1 274 13 is_stmt 1 view .LVU131
 562              		.loc 1 274 22 is_stmt 0 view .LVU132
 563 00a6 3249     		ldr	r1, .L28
 564 00a8 4346     		mov	r3, r8
 565 00aa 0893     		str	r3, [sp, #32]
 566 00ac DB17     		asrs	r3, r3, #31
 567 00ae 0993     		str	r3, [sp, #36]
 568 00b0 0A68     		ldr	r2, [r1]
 569 00b2 4B68     		ldr	r3, [r1, #4]
 570 00b4 089C     		ldr	r4, [sp, #32]
 571 00b6 099D     		ldr	r5, [sp, #36]
 572              	.LVL48:
 573              		.loc 1 274 22 view .LVU133
 574 00b8 1219     		adds	r2, r2, r4
 575 00ba 6B41     		adcs	r3, r3, r5
 576 00bc 0A60     		str	r2, [r1]
 577 00be 4B60     		str	r3, [r1, #4]
 578              	.LBE15:
 262:Core/Src/main.c ****             double x0 = ((double)x/(double)width)*(3.5)-2.5;
 579              		.loc 1 262 40 is_stmt 1 discriminator 2 view .LVU134
 580 00c0 0A9B     		ldr	r3, [sp, #40]
 581 00c2 0133     		adds	r3, r3, #1
 582 00c4 0A93     		str	r3, [sp, #40]
 583              	.LVL49:
 584              	.L23:
 262:Core/Src/main.c ****             double x0 = ((double)x/(double)width)*(3.5)-2.5;
 585              		.loc 1 262 27 discriminator 1 view .LVU135
 586 00c6 0A9B     		ldr	r3, [sp, #40]
 587 00c8 0B9A     		ldr	r2, [sp, #44]
 588 00ca 9342     		cmp	r3, r2
 589 00cc 36DA     		bge	.L26
 590              	.LBB17:
 263:Core/Src/main.c ****             double y0 = ((double)y/(double)height)*(2.0)-1.0;
 591              		.loc 1 263 13 view .LVU136
 263:Core/Src/main.c ****             double y0 = ((double)y/(double)height)*(2.0)-1.0;
 592              		.loc 1 263 26 is_stmt 0 view .LVU137
 593 00ce 0A98     		ldr	r0, [sp, #40]
 594 00d0 FFF7FEFF 		bl	__aeabi_i2d
 595              	.LVL50:
 596 00d4 0400     		movs	r4, r0
 597 00d6 0D00     		movs	r5, r1
 263:Core/Src/main.c ****             double y0 = ((double)y/(double)height)*(2.0)-1.0;
 598              		.loc 1 263 36 view .LVU138
 599 00d8 0B98     		ldr	r0, [sp, #44]
 600 00da FFF7FEFF 		bl	__aeabi_i2d
 601              	.LVL51:
ARM GAS  C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s 			page 17


 602 00de 0200     		movs	r2, r0
 603 00e0 0B00     		movs	r3, r1
 263:Core/Src/main.c ****             double y0 = ((double)y/(double)height)*(2.0)-1.0;
 604              		.loc 1 263 35 view .LVU139
 605 00e2 2000     		movs	r0, r4
 606 00e4 2900     		movs	r1, r5
 607 00e6 FFF7FEFF 		bl	__aeabi_ddiv
 608              	.LVL52:
 263:Core/Src/main.c ****             double y0 = ((double)y/(double)height)*(2.0)-1.0;
 609              		.loc 1 263 50 view .LVU140
 610 00ea 0022     		movs	r2, #0
 611 00ec 224B     		ldr	r3, .L28+8
 612 00ee FFF7FEFF 		bl	__aeabi_dmul
 613              	.LVL53:
 263:Core/Src/main.c ****             double y0 = ((double)y/(double)height)*(2.0)-1.0;
 614              		.loc 1 263 20 view .LVU141
 615 00f2 0022     		movs	r2, #0
 616 00f4 214B     		ldr	r3, .L28+12
 617 00f6 FFF7FEFF 		bl	__aeabi_dsub
 618              	.LVL54:
 619 00fa 0490     		str	r0, [sp, #16]
 620 00fc 0591     		str	r1, [sp, #20]
 621              	.LVL55:
 264:Core/Src/main.c ****             int iteration = 0;
 622              		.loc 1 264 13 is_stmt 1 view .LVU142
 264:Core/Src/main.c ****             int iteration = 0;
 623              		.loc 1 264 26 is_stmt 0 view .LVU143
 624 00fe 5846     		mov	r0, fp
 625              	.LVL56:
 264:Core/Src/main.c ****             int iteration = 0;
 626              		.loc 1 264 26 view .LVU144
 627 0100 FFF7FEFF 		bl	__aeabi_i2d
 628              	.LVL57:
 629 0104 0400     		movs	r4, r0
 630 0106 0D00     		movs	r5, r1
 264:Core/Src/main.c ****             int iteration = 0;
 631              		.loc 1 264 36 view .LVU145
 632 0108 5046     		mov	r0, r10
 633 010a FFF7FEFF 		bl	__aeabi_i2d
 634              	.LVL58:
 635 010e 0200     		movs	r2, r0
 636 0110 0B00     		movs	r3, r1
 264:Core/Src/main.c ****             int iteration = 0;
 637              		.loc 1 264 35 view .LVU146
 638 0112 2000     		movs	r0, r4
 639 0114 2900     		movs	r1, r5
 640 0116 FFF7FEFF 		bl	__aeabi_ddiv
 641              	.LVL59:
 264:Core/Src/main.c ****             int iteration = 0;
 642              		.loc 1 264 51 view .LVU147
 643 011a 0200     		movs	r2, r0
 644 011c 0B00     		movs	r3, r1
 645 011e FFF7FEFF 		bl	__aeabi_dadd
 646              	.LVL60:
 264:Core/Src/main.c ****             int iteration = 0;
 647              		.loc 1 264 20 view .LVU148
 648 0122 0022     		movs	r2, #0
ARM GAS  C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s 			page 18


 649 0124 164B     		ldr	r3, .L28+16
 650 0126 FFF7FEFF 		bl	__aeabi_dsub
 651              	.LVL61:
 652 012a 0690     		str	r0, [sp, #24]
 653 012c 0791     		str	r1, [sp, #28]
 654              	.LVL62:
 265:Core/Src/main.c ****             double xi = 0;
 655              		.loc 1 265 13 is_stmt 1 view .LVU149
 266:Core/Src/main.c ****             double yi = 0;
 656              		.loc 1 266 13 view .LVU150
 267:Core/Src/main.c ****             while ((xi*xi + yi*yi) <= (4) && iteration < max_iterations) {
 657              		.loc 1 267 13 view .LVU151
 268:Core/Src/main.c ****                 double temp = (xi*xi - yi*yi);
 658              		.loc 1 268 13 view .LVU152
 267:Core/Src/main.c ****             while ((xi*xi + yi*yi) <= (4) && iteration < max_iterations) {
 659              		.loc 1 267 20 is_stmt 0 view .LVU153
 660 012e 0024     		movs	r4, #0
 661 0130 0025     		movs	r5, #0
 266:Core/Src/main.c ****             double yi = 0;
 662              		.loc 1 266 20 view .LVU154
 663 0132 2600     		movs	r6, r4
 664 0134 2F00     		movs	r7, r5
 265:Core/Src/main.c ****             double xi = 0;
 665              		.loc 1 265 17 view .LVU155
 666 0136 0023     		movs	r3, #0
 667 0138 9846     		mov	r8, r3
 268:Core/Src/main.c ****                 double temp = (xi*xi - yi*yi);
 668              		.loc 1 268 19 view .LVU156
 669 013a 96E7     		b	.L18
 670              	.LVL63:
 671              	.L26:
 268:Core/Src/main.c ****                 double temp = (xi*xi - yi*yi);
 672              		.loc 1 268 19 view .LVU157
 673              	.LBE17:
 674              	.LBE14:
 261:Core/Src/main.c ****         for (int x = 0; x <= width-1; x++) {
 675              		.loc 1 261 37 is_stmt 1 discriminator 2 view .LVU158
 676 013c 0C9B     		ldr	r3, [sp, #48]
 677              	.LVL64:
 261:Core/Src/main.c ****         for (int x = 0; x <= width-1; x++) {
 678              		.loc 1 261 37 is_stmt 0 discriminator 2 view .LVU159
 679 013e 0133     		adds	r3, r3, #1
 680 0140 0C93     		str	r3, [sp, #48]
 681              	.LVL65:
 682              	.L17:
 261:Core/Src/main.c ****         for (int x = 0; x <= width-1; x++) {
 683              		.loc 1 261 23 is_stmt 1 discriminator 1 view .LVU160
 684 0142 0C9B     		ldr	r3, [sp, #48]
 685 0144 0D9A     		ldr	r2, [sp, #52]
 686 0146 9342     		cmp	r3, r2
 687 0148 08DA     		bge	.L27
 688              	.LBB18:
 262:Core/Src/main.c ****             double x0 = ((double)x/(double)width)*(3.5)-2.5;
 689              		.loc 1 262 18 is_stmt 0 view .LVU161
 690 014a 0023     		movs	r3, #0
 691 014c 9A46     		mov	r10, r3
 692 014e 0C9B     		ldr	r3, [sp, #48]
ARM GAS  C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s 			page 19


 693 0150 9B46     		mov	fp, r3
 694 0152 5346     		mov	r3, r10
 695 0154 0A93     		str	r3, [sp, #40]
 696 0156 0D9B     		ldr	r3, [sp, #52]
 697 0158 9A46     		mov	r10, r3
 698 015a B4E7     		b	.L23
 699              	.LVL66:
 700              	.L27:
 262:Core/Src/main.c ****             double x0 = ((double)x/(double)width)*(3.5)-2.5;
 701              		.loc 1 262 18 view .LVU162
 702              	.LBE18:
 703              	.LBE13:
 275:Core/Src/main.c ****         }
 276:Core/Src/main.c ****     }
 277:Core/Src/main.c ****     return checksum;
 704              		.loc 1 277 5 is_stmt 1 view .LVU163
 705              		.loc 1 277 12 is_stmt 0 view .LVU164
 706 015c 044B     		ldr	r3, .L28
 707              	.LVL67:
 708              		.loc 1 277 12 discriminator 1 view .LVU165
 709 015e 1868     		ldr	r0, [r3]
 710 0160 5968     		ldr	r1, [r3, #4]
 278:Core/Src/main.c **** }
 711              		.loc 1 278 1 view .LVU166
 712 0162 0FB0     		add	sp, sp, #60
 713              		@ sp needed
 714              	.LVL68:
 715              		.loc 1 278 1 view .LVU167
 716 0164 F0BC     		pop	{r4, r5, r6, r7}
 717 0166 BB46     		mov	fp, r7
 718 0168 B246     		mov	r10, r6
 719 016a A946     		mov	r9, r5
 720 016c A046     		mov	r8, r4
 721 016e F0BD     		pop	{r4, r5, r6, r7, pc}
 722              	.L29:
 723              		.align	2
 724              	.L28:
 725 0170 00000000 		.word	checksum
 726 0174 00001040 		.word	1074790400
 727 0178 00000C40 		.word	1074528256
 728 017c 00000440 		.word	1074003968
 729 0180 0000F03F 		.word	1072693248
 730              		.cfi_endproc
 731              	.LFE44:
 733              		.section	.text.Error_Handler,"ax",%progbits
 734              		.align	1
 735              		.global	Error_Handler
 736              		.syntax unified
 737              		.code	16
 738              		.thumb_func
 740              	Error_Handler:
 741              	.LFB45:
 279:Core/Src/main.c **** /* USER CODE END 4 */
 280:Core/Src/main.c **** 
 281:Core/Src/main.c **** /**
 282:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 283:Core/Src/main.c ****   * @retval None
ARM GAS  C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s 			page 20


 284:Core/Src/main.c ****   */
 285:Core/Src/main.c **** void Error_Handler(void)
 286:Core/Src/main.c **** {
 742              		.loc 1 286 1 is_stmt 1 view -0
 743              		.cfi_startproc
 744              		@ Volatile: function does not return.
 745              		@ args = 0, pretend = 0, frame = 0
 746              		@ frame_needed = 0, uses_anonymous_args = 0
 747              		@ link register save eliminated.
 287:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 288:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 289:Core/Src/main.c ****   __disable_irq();
 748              		.loc 1 289 3 view .LVU169
 749              	.LBB19:
 750              	.LBI19:
 751              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
ARM GAS  C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s 			page 21


  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
ARM GAS  C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s 			page 22


  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 752              		.loc 2 140 27 view .LVU170
 753              	.LBB20:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 754              		.loc 2 142 3 view .LVU171
 755              		.syntax divided
 756              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 757 0000 72B6     		cpsid i
 758              	@ 0 "" 2
 759              		.thumb
 760              		.syntax unified
 761              	.L31:
 762              	.LBE20:
 763              	.LBE19:
 290:Core/Src/main.c ****   while (1)
ARM GAS  C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s 			page 23


 764              		.loc 1 290 3 view .LVU172
 291:Core/Src/main.c ****   {
 292:Core/Src/main.c ****   }
 765              		.loc 1 292 3 view .LVU173
 290:Core/Src/main.c ****   while (1)
 766              		.loc 1 290 9 view .LVU174
 767 0002 FEE7     		b	.L31
 768              		.cfi_endproc
 769              	.LFE45:
 771              		.section	.text.SystemClock_Config,"ax",%progbits
 772              		.align	1
 773              		.global	SystemClock_Config
 774              		.syntax unified
 775              		.code	16
 776              		.thumb_func
 778              	SystemClock_Config:
 779              	.LFB41:
 157:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 780              		.loc 1 157 1 view -0
 781              		.cfi_startproc
 782              		@ args = 0, pretend = 0, frame = 64
 783              		@ frame_needed = 0, uses_anonymous_args = 0
 784 0000 00B5     		push	{lr}
 785              	.LCFI8:
 786              		.cfi_def_cfa_offset 4
 787              		.cfi_offset 14, -4
 788 0002 91B0     		sub	sp, sp, #68
 789              	.LCFI9:
 790              		.cfi_def_cfa_offset 72
 158:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 791              		.loc 1 158 3 view .LVU176
 158:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 792              		.loc 1 158 22 is_stmt 0 view .LVU177
 793 0004 3022     		movs	r2, #48
 794 0006 0021     		movs	r1, #0
 795 0008 04A8     		add	r0, sp, #16
 796 000a FFF7FEFF 		bl	memset
 797              	.LVL69:
 159:Core/Src/main.c **** 
 798              		.loc 1 159 3 is_stmt 1 view .LVU178
 159:Core/Src/main.c **** 
 799              		.loc 1 159 22 is_stmt 0 view .LVU179
 800 000e 1022     		movs	r2, #16
 801 0010 0021     		movs	r1, #0
 802 0012 6846     		mov	r0, sp
 803 0014 FFF7FEFF 		bl	memset
 804              	.LVL70:
 164:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 805              		.loc 1 164 3 is_stmt 1 view .LVU180
 164:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 806              		.loc 1 164 36 is_stmt 0 view .LVU181
 807 0018 0223     		movs	r3, #2
 808 001a 0493     		str	r3, [sp, #16]
 165:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 809              		.loc 1 165 3 is_stmt 1 view .LVU182
 165:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 810              		.loc 1 165 30 is_stmt 0 view .LVU183
ARM GAS  C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s 			page 24


 811 001c 0122     		movs	r2, #1
 812 001e 0792     		str	r2, [sp, #28]
 166:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 813              		.loc 1 166 3 is_stmt 1 view .LVU184
 166:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 814              		.loc 1 166 41 is_stmt 0 view .LVU185
 815 0020 0F32     		adds	r2, r2, #15
 816 0022 0892     		str	r2, [sp, #32]
 167:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 817              		.loc 1 167 3 is_stmt 1 view .LVU186
 167:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 818              		.loc 1 167 34 is_stmt 0 view .LVU187
 819 0024 0C93     		str	r3, [sp, #48]
 168:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
 820              		.loc 1 168 3 is_stmt 1 view .LVU188
 169:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 821              		.loc 1 169 3 view .LVU189
 169:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 822              		.loc 1 169 32 is_stmt 0 view .LVU190
 823 0026 A023     		movs	r3, #160
 824 0028 9B03     		lsls	r3, r3, #14
 825 002a 0E93     		str	r3, [sp, #56]
 170:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 826              		.loc 1 170 3 is_stmt 1 view .LVU191
 171:Core/Src/main.c ****   {
 827              		.loc 1 171 3 view .LVU192
 171:Core/Src/main.c ****   {
 828              		.loc 1 171 7 is_stmt 0 view .LVU193
 829 002c 04A8     		add	r0, sp, #16
 830 002e FFF7FEFF 		bl	HAL_RCC_OscConfig
 831              	.LVL71:
 171:Core/Src/main.c ****   {
 832              		.loc 1 171 6 discriminator 1 view .LVU194
 833 0032 0028     		cmp	r0, #0
 834 0034 0ED1     		bne	.L35
 178:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 835              		.loc 1 178 3 is_stmt 1 view .LVU195
 178:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 836              		.loc 1 178 31 is_stmt 0 view .LVU196
 837 0036 0723     		movs	r3, #7
 838 0038 0093     		str	r3, [sp]
 180:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 839              		.loc 1 180 3 is_stmt 1 view .LVU197
 180:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 840              		.loc 1 180 34 is_stmt 0 view .LVU198
 841 003a 053B     		subs	r3, r3, #5
 842 003c 0193     		str	r3, [sp, #4]
 181:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 843              		.loc 1 181 3 is_stmt 1 view .LVU199
 181:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 844              		.loc 1 181 35 is_stmt 0 view .LVU200
 845 003e 0023     		movs	r3, #0
 846 0040 0293     		str	r3, [sp, #8]
 182:Core/Src/main.c **** 
 847              		.loc 1 182 3 is_stmt 1 view .LVU201
 182:Core/Src/main.c **** 
 848              		.loc 1 182 36 is_stmt 0 view .LVU202
ARM GAS  C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s 			page 25


 849 0042 0393     		str	r3, [sp, #12]
 184:Core/Src/main.c ****   {
 850              		.loc 1 184 3 is_stmt 1 view .LVU203
 184:Core/Src/main.c ****   {
 851              		.loc 1 184 7 is_stmt 0 view .LVU204
 852 0044 0121     		movs	r1, #1
 853 0046 6846     		mov	r0, sp
 854 0048 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 855              	.LVL72:
 184:Core/Src/main.c ****   {
 856              		.loc 1 184 6 discriminator 1 view .LVU205
 857 004c 0028     		cmp	r0, #0
 858 004e 03D1     		bne	.L36
 188:Core/Src/main.c **** 
 859              		.loc 1 188 1 view .LVU206
 860 0050 11B0     		add	sp, sp, #68
 861              		@ sp needed
 862 0052 00BD     		pop	{pc}
 863              	.L35:
 173:Core/Src/main.c ****   }
 864              		.loc 1 173 5 is_stmt 1 view .LVU207
 865 0054 FFF7FEFF 		bl	Error_Handler
 866              	.LVL73:
 867              	.L36:
 186:Core/Src/main.c ****   }
 868              		.loc 1 186 5 view .LVU208
 869 0058 FFF7FEFF 		bl	Error_Handler
 870              	.LVL74:
 871              		.cfi_endproc
 872              	.LFE41:
 874              		.section	.text.main,"ax",%progbits
 875              		.align	1
 876              		.global	main
 877              		.syntax unified
 878              		.code	16
 879              		.thumb_func
 881              	main:
 882              	.LFB40:
  78:Core/Src/main.c **** 
 883              		.loc 1 78 1 view -0
 884              		.cfi_startproc
 885              		@ args = 0, pretend = 0, frame = 0
 886              		@ frame_needed = 0, uses_anonymous_args = 0
 887 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 888              	.LCFI10:
 889              		.cfi_def_cfa_offset 24
 890              		.cfi_offset 3, -24
 891              		.cfi_offset 4, -20
 892              		.cfi_offset 5, -16
 893              		.cfi_offset 6, -12
 894              		.cfi_offset 7, -8
 895              		.cfi_offset 14, -4
  87:Core/Src/main.c **** 
 896              		.loc 1 87 3 view .LVU210
 897 0002 FFF7FEFF 		bl	HAL_Init
 898              	.LVL75:
  94:Core/Src/main.c **** 
ARM GAS  C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s 			page 26


 899              		.loc 1 94 3 view .LVU211
 900 0006 FFF7FEFF 		bl	SystemClock_Config
 901              	.LVL76:
 101:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 902              		.loc 1 101 3 view .LVU212
 903 000a FFF7FEFF 		bl	MX_GPIO_Init
 904              	.LVL77:
 106:Core/Src/main.c ****             //TODO: Turn on LED 0 to signify the start of the operation
 905              		.loc 1 106 3 view .LVU213
 906              	.LBB21:
 106:Core/Src/main.c ****             //TODO: Turn on LED 0 to signify the start of the operation
 907              		.loc 1 106 8 view .LVU214
 106:Core/Src/main.c ****             //TODO: Turn on LED 0 to signify the start of the operation
 908              		.loc 1 106 12 is_stmt 0 view .LVU215
 909 000e 0024     		movs	r4, #0
 106:Core/Src/main.c ****             //TODO: Turn on LED 0 to signify the start of the operation
 910              		.loc 1 106 3 view .LVU216
 911 0010 2CE0     		b	.L38
 912              	.LVL78:
 913              	.L39:
 108:Core/Src/main.c **** 
 914              		.loc 1 108 13 is_stmt 1 view .LVU217
 915 0012 184D     		ldr	r5, .L41
 916 0014 0122     		movs	r2, #1
 917 0016 0121     		movs	r1, #1
 918 0018 2800     		movs	r0, r5
 919 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 920              	.LVL79:
 110:Core/Src/main.c ****             checksum_array[i] = calculate_mandelbrot_fixed_point_arithmetic(size_array[i], size_arr
 921              		.loc 1 110 13 view .LVU218
 110:Core/Src/main.c ****             checksum_array[i] = calculate_mandelbrot_fixed_point_arithmetic(size_array[i], size_arr
 922              		.loc 1 110 26 is_stmt 0 view .LVU219
 923 001e FFF7FEFF 		bl	HAL_GetTick
 924              	.LVL80:
 110:Core/Src/main.c ****             checksum_array[i] = calculate_mandelbrot_fixed_point_arithmetic(size_array[i], size_arr
 925              		.loc 1 110 24 discriminator 1 view .LVU220
 926 0022 154F     		ldr	r7, .L41+4
 927 0024 3860     		str	r0, [r7]
 111:Core/Src/main.c ****             //checksum_array[i] = calculate_mandelbrot_double(size_array[i], size_array[i], MAX_ITE
 928              		.loc 1 111 13 is_stmt 1 view .LVU221
 111:Core/Src/main.c ****             //checksum_array[i] = calculate_mandelbrot_double(size_array[i], size_array[i], MAX_ITE
 929              		.loc 1 111 33 is_stmt 0 view .LVU222
 930 0026 154B     		ldr	r3, .L41+8
 931 0028 A600     		lsls	r6, r4, #2
 932 002a F058     		ldr	r0, [r6, r3]
 933 002c FA22     		movs	r2, #250
 934 002e 0100     		movs	r1, r0
 935 0030 FFF7FEFF 		bl	calculate_mandelbrot_fixed_point_arithmetic
 936              	.LVL81:
 111:Core/Src/main.c ****             //checksum_array[i] = calculate_mandelbrot_double(size_array[i], size_array[i], MAX_ITE
 937              		.loc 1 111 31 discriminator 1 view .LVU223
 938 0034 124B     		ldr	r3, .L41+12
 939 0036 E200     		lsls	r2, r4, #3
 940 0038 9B18     		adds	r3, r3, r2
 941 003a 1860     		str	r0, [r3]
 942 003c 5960     		str	r1, [r3, #4]
 113:Core/Src/main.c ****             execution_time_array[i] = end_time - start_time;
ARM GAS  C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s 			page 27


 943              		.loc 1 113 13 is_stmt 1 view .LVU224
 113:Core/Src/main.c ****             execution_time_array[i] = end_time - start_time;
 944              		.loc 1 113 24 is_stmt 0 view .LVU225
 945 003e FFF7FEFF 		bl	HAL_GetTick
 946              	.LVL82:
 113:Core/Src/main.c ****             execution_time_array[i] = end_time - start_time;
 947              		.loc 1 113 22 discriminator 1 view .LVU226
 948 0042 104B     		ldr	r3, .L41+16
 949 0044 1860     		str	r0, [r3]
 114:Core/Src/main.c **** 
 950              		.loc 1 114 13 is_stmt 1 view .LVU227
 114:Core/Src/main.c **** 
 951              		.loc 1 114 48 is_stmt 0 view .LVU228
 952 0046 3B68     		ldr	r3, [r7]
 953 0048 C01A     		subs	r0, r0, r3
 114:Core/Src/main.c **** 
 954              		.loc 1 114 37 view .LVU229
 955 004a 0F4B     		ldr	r3, .L41+20
 956 004c F050     		str	r0, [r6, r3]
 117:Core/Src/main.c **** 
 957              		.loc 1 117 13 is_stmt 1 view .LVU230
 958 004e 0122     		movs	r2, #1
 959 0050 0221     		movs	r1, #2
 960 0052 2800     		movs	r0, r5
 961 0054 FFF7FEFF 		bl	HAL_GPIO_WritePin
 962              	.LVL83:
 120:Core/Src/main.c **** 
 963              		.loc 1 120 13 view .LVU231
 964 0058 FA20     		movs	r0, #250
 965 005a 8000     		lsls	r0, r0, #2
 966 005c FFF7FEFF 		bl	HAL_Delay
 967              	.LVL84:
 123:Core/Src/main.c ****         }
 968              		.loc 1 123 13 view .LVU232
 969 0060 0022     		movs	r2, #0
 970 0062 0321     		movs	r1, #3
 971 0064 2800     		movs	r0, r5
 972 0066 FFF7FEFF 		bl	HAL_GPIO_WritePin
 973              	.LVL85:
 106:Core/Src/main.c ****             //TODO: Turn on LED 0 to signify the start of the operation
 974              		.loc 1 106 27 discriminator 3 view .LVU233
 975 006a 0134     		adds	r4, r4, #1
 976              	.LVL86:
 977              	.L38:
 106:Core/Src/main.c ****             //TODO: Turn on LED 0 to signify the start of the operation
 978              		.loc 1 106 21 discriminator 1 view .LVU234
 979 006c 042C     		cmp	r4, #4
 980 006e D0DD     		ble	.L39
 981              	.L40:
 982              	.LBE21:
 128:Core/Src/main.c ****   {
 983              		.loc 1 128 3 view .LVU235
 148:Core/Src/main.c ****   /* USER CODE END 3 */
 984              		.loc 1 148 3 view .LVU236
 128:Core/Src/main.c ****   {
 985              		.loc 1 128 9 view .LVU237
 986 0070 FEE7     		b	.L40
ARM GAS  C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s 			page 28


 987              	.L42:
 988 0072 C046     		.align	2
 989              	.L41:
 990 0074 00040048 		.word	1207960576
 991 0078 00000000 		.word	start_time
 992 007c 00000000 		.word	size_array
 993 0080 00000000 		.word	checksum_array
 994 0084 00000000 		.word	end_time
 995 0088 00000000 		.word	execution_time_array
 996              		.cfi_endproc
 997              	.LFE40:
 999              		.global	execution_time_array
 1000              		.section	.bss.execution_time_array,"aw",%nobits
 1001              		.align	2
 1004              	execution_time_array:
 1005 0000 00000000 		.space	20
 1005      00000000 
 1005      00000000 
 1005      00000000 
 1005      00000000 
 1006              		.global	checksum_array
 1007              		.section	.bss.checksum_array,"aw",%nobits
 1008              		.align	3
 1011              	checksum_array:
 1012 0000 00000000 		.space	40
 1012      00000000 
 1012      00000000 
 1012      00000000 
 1012      00000000 
 1013              		.global	size_array
 1014              		.section	.data.size_array,"aw"
 1015              		.align	2
 1018              	size_array:
 1019 0000 80000000 		.word	128
 1020 0004 A0000000 		.word	160
 1021 0008 C0000000 		.word	192
 1022 000c E0000000 		.word	224
 1023 0010 00010000 		.word	256
 1024              		.global	init_height
 1025              		.section	.data.init_height,"aw"
 1026              		.align	2
 1029              	init_height:
 1030 0000 80000000 		.word	128
 1031              		.global	init_width
 1032              		.section	.data.init_width,"aw"
 1033              		.align	2
 1036              	init_width:
 1037 0000 80000000 		.word	128
 1038              		.global	checksum
 1039              		.section	.bss.checksum,"aw",%nobits
 1040              		.align	3
 1043              	checksum:
 1044 0000 00000000 		.space	8
 1044      00000000 
 1045              		.global	execution_time
 1046              		.section	.bss.execution_time,"aw",%nobits
 1047              		.align	2
ARM GAS  C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s 			page 29


 1050              	execution_time:
 1051 0000 00000000 		.space	4
 1052              		.global	end_time
 1053              		.section	.bss.end_time,"aw",%nobits
 1054              		.align	2
 1057              	end_time:
 1058 0000 00000000 		.space	4
 1059              		.global	start_time
 1060              		.section	.bss.start_time,"aw",%nobits
 1061              		.align	2
 1064              	start_time:
 1065 0000 00000000 		.space	4
 1066              		.text
 1067              	.Letext0:
 1068              		.file 3 "I:\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltools.gn
 1069              		.file 4 "I:\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltools.gn
 1070              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f051x8.h"
 1071              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 1072              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 1073              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 1074              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 1075              		.file 10 "<built-in>"
ARM GAS  C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s 			page 30


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s:19     .text.MX_GPIO_Init:00000000 $t
C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s:131    .text.MX_GPIO_Init:0000006c $d
C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s:138    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 $t
C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s:144    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 calculate_mandelbrot_fixed_point_arithmetic
C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s:387    .text.calculate_mandelbrot_fixed_point_arithmetic:000000e0 $d
C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s:1043   .bss.checksum:00000000 checksum
C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s:402    .text.calculate_mandelbrot_double:00000000 $t
C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s:408    .text.calculate_mandelbrot_double:00000000 calculate_mandelbrot_double
C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s:725    .text.calculate_mandelbrot_double:00000170 $d
C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s:734    .text.Error_Handler:00000000 $t
C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s:740    .text.Error_Handler:00000000 Error_Handler
C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s:772    .text.SystemClock_Config:00000000 $t
C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s:778    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s:875    .text.main:00000000 $t
C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s:881    .text.main:00000000 main
C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s:990    .text.main:00000074 $d
C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s:1064   .bss.start_time:00000000 start_time
C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s:1018   .data.size_array:00000000 size_array
C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s:1011   .bss.checksum_array:00000000 checksum_array
C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s:1057   .bss.end_time:00000000 end_time
C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s:1004   .bss.execution_time_array:00000000 execution_time_array
C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s:1001   .bss.execution_time_array:00000000 $d
C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s:1008   .bss.checksum_array:00000000 $d
C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s:1015   .data.size_array:00000000 $d
C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s:1029   .data.init_height:00000000 init_height
C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s:1026   .data.init_height:00000000 $d
C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s:1036   .data.init_width:00000000 init_width
C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s:1033   .data.init_width:00000000 $d
C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s:1040   .bss.checksum:00000000 $d
C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s:1050   .bss.execution_time:00000000 execution_time
C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s:1047   .bss.execution_time:00000000 $d
C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s:1054   .bss.end_time:00000000 $d
C:\Users\Mligh\AppData\Local\Temp\ccGgaqWQ.s:1061   .bss.start_time:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
__aeabi_idiv
__aeabi_i2d
__aeabi_ddiv
__aeabi_dmul
__aeabi_dsub
__aeabi_dadd
__aeabi_dcmple
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_GetTick
HAL_Delay
